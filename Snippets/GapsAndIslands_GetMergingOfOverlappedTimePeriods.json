{
  "id": "3afbc32a-c784-443a-8132-babc53b70f4f",
  "prefix": "GapsAndIslands_GetMergingOfOverlappedTimePeriods",
  "description": "Merging Overlapped DateTime Periods with Different Appraoches",
  "body": "/* =================================================================================================================================================================================\r\n-- Database\t\t: User Database\r\n-- Script\t\t: Merging Overlapped DateTime Periods with Different Approaches\r\n-- Description\t: Merging Overlapped DateTime Periods of below Scenarios with Event1(E1) and Event2 (E2)\r\n----$BeginRegion: Test Events for Demonstrating the Merging of Overlapping Events\r\n\t----Input:: Id, StartTime, EndTime\r\n\t----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000 => 2nd Event Started Just After 1st Event Completed with 1 second Diff -- Start to Finish\r\n\t----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000 => 2nd Event Started While 1st Event is Still in Progress -- Start to Start with Lag -- OverLapped\r\n\t----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000 => 2nd Event Completed Along with 1st Event eventhough 1st Event Started Later -- Finish to Finish\r\n\t----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000 => 2nd Event Started Along with 1st Event But 2nd Event Completed Later -- Start to Start\r\n\t----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000 => 2nd Event Started After 1st Event and Completed Before 1st Event -- Complete Overlapped Event\r\n\t----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000 => 2nd Event Started with a Gap After 1st Event Completed -- No OverLap\r\n----$EndRegion: Test Events for Demonstrating the Merging of Overlapping Events\r\n-- Usage\t\t: Use the Sample Data and Choose an Approach to Get the Required Result Set\r\n\t--Approach #1: This Approach is helpful to Merge DateRange Periods with a Custom Gap in Between the Events. (Ex: If Events have gap of 1 Sec | 10 Secs | 1 Hour | 1 Day... etc).\r\n\t--Approach #2: This Approach is Not Customisable as Approach #1 and DoesNot Merge the DateRange Periods If Events have MilliSecs Gap as well.\r\n\t--Approach #3: This Approach is Similar to Approach #3 And Takes More Time To Get the Result Set. (Costly Execution Plan Compared to Approach #2)\r\n\t--Conclusion : Approach #1 (or) Approach #2 are best suited for any given DataRanges. Additionally, Approach #1 Merges DateRanges in the Same Table and Visualises the Output.\r\n\t--**Note     : Add More Events (E3, E4, E5.... so on) in the TestEvents Table (#SampleData) for the Same ID and Check the ResultSet.\r\n\t--If The EventsTable DoesNot have \"ID\" column, Then Mark the Value of ID column to 1 for all the events. (Most StackOverFlow Approaches have this kind of Events without ID).\r\n-- History\t\t:\r\n-- Refer Links\t: https://stackoverflow.com/questions/2561130/merge-overlapping-date-intervals\r\n================================================================================================================================================================================= */\r\nUSE tempdb;\r\nGO\r\n--\r\n--$BeginRegion: #SampleData Table with Sample Data\r\nDROP TABLE IF EXISTS dbo.#SampleData;\r\nCREATE TABLE #SampleData (Id INT NULL, StartTime DATETIME NULL, EndTime DATETIME NULL);\r\nINSERT INTO #SampleData(Id, StartTime, EndTime)\r\nVALUES-- Id, Event #1 (E1), Event #2 (E2)\r\n\t(1, N'2010-01-01 00:00:00.000', N'2010-01-01 00:30:00.000'), (1, N'2010-01-01 00:30:01.000', N'2010-01-01 02:00:00.000'),\r\n\t(2, N'2010-01-01 03:00:00.000', N'2010-01-01 05:00:00.000'), (2, N'2010-01-01 04:00:00.000', N'2010-01-01 06:00:00.000'),\r\n\t(3, N'2010-01-01 07:00:00.000', N'2010-01-01 09:00:00.000'), (3, N'2010-01-01 08:00:00.000', N'2010-01-01 09:00:00.000'),\r\n\t(4, N'2010-01-01 10:00:00.000', N'2010-01-01 11:00:00.000'), (4, N'2010-01-01 10:00:00.000', N'2010-01-01 12:00:00.000'),\r\n\t(5, N'2010-01-01 13:00:00.000', N'2010-01-01 16:00:00.000'), (5, N'2010-01-01 14:00:00.000', N'2010-01-01 15:00:00.000'),\r\n\t(6, N'2010-01-01 17:00:00.000', N'2010-01-01 18:00:00.000'), (6, N'2010-01-01 19:00:00.000', N'2010-01-01 20:00:00.000');\r\n--\r\nSELECT\tId, StartTime, EndTime--\r\nFROM\t#SampleData;\r\n--$EndRegion: #SampleData Table with Sample Data\r\n--\r\n/* ===== ** Approach #1 ** ================================================================================================================================== */\r\n--$BeginRegion: Approach #1\r\n--\r\n--$BeginRegion: Phase #0 - Raw Data Input:: Id, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000\r\n----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000\r\n----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000\r\n----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000\r\n----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000\r\n--$EndRegion: Phase #0 - Raw Data Input:: Id, StartTime, EndTime\r\nDECLARE @i INT=1, @RowCount INT=0;\r\nWHILE(1=1) --\r\nBEGIN\r\n\tSET @RowCount=0;\r\n\t--\r\n\t--$BeginRegion: Phase #1 - Updating E1's EndTime with VeryNext Event E2's EndTime\r\n\tUPDATE\tT1\r\n\tSET T1.EndTime=T2.EndTime\r\n\tOUTPUT 'Loop #'+CAST(@i AS VARCHAR(4))+' - Phase #1' AS \"Phase\", Deleted.Id, Deleted.StartTime, Deleted.EndTime, '|' AS \"O\", Inserted.Id, Inserted.StartTime, Inserted.EndTime\r\n\tFROM\tdbo.#SampleData AS T1\r\n\t\t\tINNER JOIN dbo.#SampleData AS T2 ON T2.Id=T1.Id\r\n\tWHERE DATEADD(SECOND/*This can be Adjusted as Required*/, 1, T1.EndTime) BETWEEN T2.StartTime AND T2.EndTime;\r\n\t--\r\n\tSET @RowCount=@RowCount+@@ROWCOUNT;\r\n\t--$EndRegion: Phase #1 - Updating E1's EndTime with VeryNext Event E2's EndTime\r\n\t--\r\n\t--$BeginRegion: Phase #1 ResultSet:: Id, StartTime, EndTime\r\n\t----1\tE1 = 00:00:00:000 to 02:00:00:000 ; E2 = 00:30:01:000 to 02:00:00:000\r\n\t----2\tE1 = 03:00:00:000 to 06:00:00:000 ; E2 = 04:00:00:000 to 06:00:00:000\r\n\t----3\tE1 = 07:00:00:000 to 09:00:00:000 ; E2 = 08:00:00:000 to 09:00:00:000\r\n\t----4\tE1 = 10:00:00:000 to 12:00:00:000 ; E2 = 10:00:00:000 to 12:00:00:000\r\n\t----5\tE1 = 13:00:00:000 to 16:00:00:000 ; E2 = 14:00:00:000 to 16:00:00:000\r\n\t----6\tE1 = 17:00:00:000 to 18:00:00:000 ; E2 = 19:00:00:000 to 20:00:00:000\r\n\t--$EndRegion: Phase #1 ResultSet:: Id, StartTime, EndTime\r\n\t--\r\n\t--$BeginRegion: Phase #2 - Deleting Overlapped Events If E1's EndTime = E2's EndTime and E2's StartTime > E1's StartTime\r\n\tDELETE\tT1\r\n\tOUTPUT 'Loop #'+CAST(@i AS VARCHAR(4))+' - Phase #2' AS \"Phase\", Deleted.Id, Deleted.StartTime, Deleted.EndTime\r\n\tFROM\tdbo.#SampleData AS T1\r\n\t\t\tINNER JOIN dbo.#SampleData AS T2 ON T2.Id=T1.Id\r\n\tWHERE T1.EndTime=T2.EndTime AND T1.StartTime>T2.StartTime;\r\n\t--\r\n\tSET @RowCount=@RowCount+@@ROWCOUNT;\r\n\t--$EndRegion: Phase #2 - Deleting Overlapped Events If E1's EndTime = E2's EndTime and E2's StartTime > E1's StartTime\r\n\t--\r\n\t--$BeginRegion: Phase #2 ResultSet:: Id, StartTime, EndTime\r\n\t----1\tE1 = 00:00:00:000 to 02:00:00:000 ;\r\n\t----2\tE1 = 03:00:00:000 to 06:00:00:000 ;\r\n\t----3\tE1 = 07:00:00:000 to 09:00:00:000 ;\r\n\t----4\tE1 = 10:00:00:000 to 12:00:00:000 ; E2 = 10:00:00:000 to 12:00:00:000\r\n\t----5\tE1 = 13:00:00:000 to 16:00:00:000 ;\r\n\t----6\tE1 = 17:00:00:000 to 18:00:00:000 ; E2 = 19:00:00:000 to 20:00:00:000\r\n\t--$EndRegion: Phase #2 ResultSet:: Id, StartTime, EndTime\r\n\t--\r\n\t--$BeginRegion: Phase #3 - Deleting Full Duplicate Records w.r.to Id, StartTime, EndTime\r\n\t;WITH _GetDups AS --\r\n\t\t(SELECT Id, StartTime, EndTime, DupRN=ROW_NUMBER() OVER (PARTITION BY Id, StartTime, EndTime ORDER BY Id) FROM\tdbo.#SampleData)\r\n\tDELETE\t_GetDups\r\n\tOUTPUT 'Loop #'+CAST(@i AS VARCHAR(4))+' - Phase #3' AS \"Phase\", Deleted.Id, Deleted.StartTime, Deleted.EndTime, Deleted.DupRN\r\n\tFROM\t_GetDups\r\n\tWHERE _GetDups.DupRN>1;\r\n\t--\r\n\tSET @RowCount=@RowCount+@@ROWCOUNT;\r\n\t--$EndRegion: Phase #3 - Deleting Full Duplicate Records w.r.to Id, StartTime, EndTime\r\n\t--\r\n\t--$BeginRegion: Phase #3 ResultSet:: Id, StartTime, EndTime\r\n\t----1\tE1 = 00:00:00:000 to 02:00:00:000 ;\r\n\t----2\tE1 = 03:00:00:000 to 06:00:00:000 ;\r\n\t----3\tE1 = 07:00:00:000 to 09:00:00:000 ;\r\n\t----4\tE1 = 10:00:00:000 to 12:00:00:000 ;\r\n\t----5\tE1 = 13:00:00:000 to 16:00:00:000 ;\r\n\t----6\tE1 = 17:00:00:000 to 18:00:00:000 ; E2 = 19:00:00:000 to 20:00:00:000\r\n\t--$EndRegion: Phase #3 ResultSet:: Id, StartTime, EndTime\r\n\t--\r\n\tSET @i=@i+1;\r\n\tIF\t@RowCount=0 --\r\n\t\tBREAK;\r\nEND;\r\nSELECT ST.Id, ST.StartTime, ST.EndTime FROM #SampleData AS ST;\r\n--$EndRegion: Approach #1\r\n--\r\n/* ===== ** Approach #2 ** ================================================================================================================================== */\r\n--$BeginRegion: Approach #2\r\n--\r\n--$BeginRegion: Raw Data Input:: Id, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000\r\n----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000\r\n----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000\r\n----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000\r\n----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000\r\n--$EndRegion: Raw Data Input:: Id, StartTime, EndTime\r\n--\r\nSELECT X1.Id,\r\n\t   StartTime = X1.StartTime,\r\n\t   EndTime = MIN(X2.EndTime)\r\nFROM dbo.#SampleData AS X1\r\nINNER JOIN dbo.#SampleData AS X2\r\n\tON X1.Id = X2.Id\r\n\t   AND X1.StartTime <= X2.EndTime\r\n\t   AND NOT EXISTS (\r\n\t\t\t\t\t\t  SELECT *\r\n\t\t\t\t\t\t  FROM dbo.#SampleData AS X3\r\n\t\t\t\t\t\t  WHERE X2.Id = X3.Id\r\n\t\t\t\t\t\t\t\tAND X2.EndTime >= X3.StartTime\r\n\t\t\t\t\t\t\t\tAND X2.EndTime < X3.EndTime\r\n\t\t\t\t\t  )\r\nWHERE NOT EXISTS (\r\n\t\t\t\t\t SELECT *\r\n\t\t\t\t\t FROM dbo.#SampleData AS X4\r\n\t\t\t\t\t WHERE X1.Id = X4.Id\r\n\t\t\t\t\t\t   AND X1.StartTime > X4.StartTime\r\n\t\t\t\t\t\t   AND X1.StartTime <= X4.EndTime\r\n\t\t\t\t )\r\nGROUP BY X1.Id,\r\n\t\t X1.StartTime\r\nORDER BY X1.StartTime;\r\n--\r\n--$BeginRegion: ResultSet:: Id, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00:000 to 06:00:00:000 ;\r\n----3\tE1 = 07:00:00:000 to 09:00:00:000 ;\r\n----4\tE1 = 10:00:00:000 to 12:00:00:000 ;\r\n----5\tE1 = 13:00:00:000 to 16:00:00:000 ;\r\n----6\tE1 = 17:00:00:000 to 18:00:00:000 ; E2 = 19:00:00:000 to 20:00:00:000\r\n--$EndRegion: ResultSet:: Id, StartTime, EndTime\r\n--\r\n--$EndRegion: Approach #2\r\n--\r\n/* ===== ** Approach #3 ** ================================================================================================================================== */\r\n--$BeginRegion: Approach #3\r\n--\r\n--$BeginRegion: Raw Data Input:: Id, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000\r\n----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000\r\n----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000\r\n----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000\r\n----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000\r\n--$EndRegion: Raw Data Input:: Id, StartTime, EndTime\r\n--\r\nSELECT DISTINCT ST.Id,\r\n\t\t\t\tST.StartTime,\r\n\t\t\t\tET.EndTime\r\nFROM (\r\n\t\t SELECT T1.Id, T1.StartTime\r\n\t\t FROM #SampleData AS T1\r\n\t\t LEFT OUTER JOIN #SampleData AS T2\r\n\t\t\t ON T2.Id = T1.Id AND T2.StartTime < T1.StartTime AND T2.EndTime >= T1.StartTime\r\n\t\t WHERE T2.StartTime IS NULL\r\n\t ) AS ST\r\nINNER JOIN (\r\n\t\t\t   SELECT T3.Id, T3.EndTime\r\n\t\t\t   FROM #SampleData AS T3\r\n\t\t\t   LEFT OUTER JOIN #SampleData AS T4\r\n\t\t\t\t   ON T4.Id = T3.Id AND T4.EndTime > T3.EndTime AND T4.StartTime <= T3.EndTime\r\n\t\t\t   WHERE T4.StartTime IS NULL\r\n\t\t   ) AS ET\r\n\tON ET.Id = ST.Id AND ET.EndTime > ST.StartTime\r\nLEFT OUTER JOIN (\r\n\t\t\t\t\tSELECT T5.Id, T5.EndTime\r\n\t\t\t\t\tFROM #SampleData AS T5\r\n\t\t\t\t\tLEFT OUTER JOIN #SampleData AS T6\r\n\t\t\t\t\t\tON T6.Id = T5.Id AND T6.EndTime > T5.EndTime AND T6.StartTime <= T5.EndTime\r\n\t\t\t\t\tWHERE T6.StartTime IS NULL\r\n\t\t\t\t) AS ET2\r\n\tON ET2.Id = ET.Id AND ET2.EndTime > ST.StartTime AND ET2.EndTime < ET.EndTime\r\nWHERE ET2.EndTime IS NULL;\r\n--\r\n--$BeginRegion: ResultSet:: Id, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00:000 to 06:00:00:000 ;\r\n----3\tE1 = 07:00:00:000 to 09:00:00:000 ;\r\n----4\tE1 = 10:00:00:000 to 12:00:00:000 ;\r\n----5\tE1 = 13:00:00:000 to 16:00:00:000 ;\r\n----6\tE1 = 17:00:00:000 to 18:00:00:000 ; E2 = 19:00:00:000 to 20:00:00:000\r\n--$EndRegion: ResultSet:: Id, StartTime, EndTime\r\n--\r\n--$EndRegion: Approach #3"
}