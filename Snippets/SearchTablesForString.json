{
  "id": "bb27a020-8bb4-424d-b4a3-451f1dc1b4d7",
  "prefix": "SearchTablesForString",
  "description": "Search All Tables Data which Contains @SearchString in Text Columns like %char% and %text%",
  "body": "/* =============================================================================================================================================================\r\n-- Server\t\t: Local Server\r\n-- Database\t\t: User Database\r\n-- Script\t\t: SearchTablesForString\r\n-- Description\t: Search All Tables which Contain Text Columns like %char% and %text%.\r\n-- Usage\t\t: @SchemaName = Filter To Search All Tables that Belong to a Specefic Schema \"@SchemaName\"\r\n--\t\t\t\t  @EXECorPRINT = \"1\" is Most Efficient for Smaller Tables Having TableRowCount <= 100000.\r\n--\t\t\t\t  @EXECorPRINT = \"0\" is Most Efficient for Larger Tables Having TableRowCount >= 100000. This will Print All Statements Required for Searching. \r\n============================================================================================================================================================= */\r\nDECLARE @SearchString NVARCHAR(1024); SET @SearchString = '$String_To_Search$'; --Provide the \"String To Be Searched\" here\r\nDECLARE @SchemaName NVARCHAR(128); SET @SchemaName = '$SchName$';\r\nDECLARE @EXECorPRINT BIT; SET @EXECorPRINT = 1; -- 1 :: Smaller Tables <= 100000 Rows | 0 :: Larger Tables >= 100000 Rows\r\n--\r\n/* ===== ** DO NOT CHANGE CODE BELOW FROM HERE ** =========================================================================================================== */\r\nSET NOCOUNT ON;\r\nSET @SearchString = LTRIM(RTRIM(@SearchString)); --Forcefully Removing Spaces if Any in @SearchString\r\nIF LTRIM(RTRIM(@SchemaName)) = '' SET @SchemaName = NULL; --Forcefully Setting to NULL to pass in the Where Condition\r\nDECLARE @SQLcmd NVARCHAR(MAX);\r\n--$BeginRegion: Temp Table ##SearchResults for Results\r\nSET @SQLcmd --\r\n\t = N'IF OBJECT_ID(''tempdb..##SearchResults'', ''U'') IS NOT NULL' + CHAR(10) --\r\n\t + N'\tDROP TABLE ##SearchResults;' + CHAR(10) --\r\n\t + N'CREATE TABLE ##SearchResults' + CHAR(10) --\r\n\t + N'(' + CHAR(10) --\r\n\t + N'\tDatabaseName NVARCHAR(128) NULL,' + CHAR(10) --\r\n\t + N'\tSchemaName NVARCHAR(128) NULL,' + CHAR(10) --\r\n\t + N'\tTableName NVARCHAR(128) NULL,' + CHAR(10) --\r\n\t + N'\tColumnName NVARCHAR(128) NULL,' + CHAR(10) --\r\n\t + N'\tColumnDataType NVARCHAR(128) NULL,' + CHAR(10) --\r\n\t + N'\tTableRowCount INT NULL,' + CHAR(10) --\r\n\t + N'\tStringOccuranceCount INT NULL' + CHAR(10) --\r\n\t + N');';\r\nIF @EXECorPRINT = 1 EXECUTE sys.sp_executesql @CMD = @SQLcmd; ELSE PRINT @SQLcmd + CHAR(10) + 'GO' + '--';\r\n--$EndRegion: Temp Table ##SearchResults for Results\r\n--\r\n--$BeginRegion: SearchTableColumn_Cursor\r\nDECLARE @DBname NVARCHAR(128), @SCHname NVARCHAR(128), @TBLname NVARCHAR(128), @COLname NVARCHAR(128), @COLdatatype NVARCHAR(128);\r\n--\r\nDECLARE SearchTableColumn_Cursor CURSOR LOCAL FAST_FORWARD FOR\r\nSELECT COL.TABLE_CATALOG, COL.TABLE_SCHEMA, COL.TABLE_NAME, COL.COLUMN_NAME, COL.DATA_TYPE\r\nFROM INFORMATION_SCHEMA.COLUMNS AS COL\r\nINNER JOIN INFORMATION_SCHEMA.TABLES AS TBL ON TBL.TABLE_SCHEMA = COL.TABLE_SCHEMA AND TBL.TABLE_NAME = COL.TABLE_NAME \r\nWHERE TBL.TABLE_TYPE = 'BASE TABLE' \r\n\tAND (COL.TABLE_SCHEMA = @SchemaName OR @SchemaName IS NULL) --Optional Filter\r\n\tAND COL.DATA_TYPE LIKE '%char%' OR COL.DATA_TYPE LIKE '%text%';\r\n--\r\nOPEN SearchTableColumn_Cursor;\r\nFETCH NEXT FROM SearchTableColumn_Cursor INTO @DBname, @SCHname, @TBLname, @COLname, @COLdatatype;\r\n--\r\nWHILE @@FETCH_STATUS = 0 \r\nBEGIN\r\n\tSET @SQLcmd = NULL; --Reset Value\r\n\tSET @SQLcmd --\r\n\t\t = N'INSERT INTO ##SearchResults(DatabaseName, SchemaName, TableName, ColumnName, ColumnDataType, TableRowCount, StringOccuranceCount)' + CHAR(10) --\r\n\t\t + N'SELECT ''' + @DBname + ''' AS \"DatabaseName\",' + CHAR(10) --\r\n\t\t + N'\t''' + @SCHname + ''' AS \"SchemaName\",' + CHAR(10) --\r\n\t\t + N'\t''' + @TBLname + ''' AS \"TableName\",' + CHAR(10) --\r\n\t\t + N'\t''' + @COLname + ''' AS \"ColumnName\",' + CHAR(10) --\r\n\t\t + N'\t''' + @COLdatatype + ''' AS \"ColumnDataType\",' + CHAR(10) --\r\n\t\t + N'\t(SELECT COUNT(1) FROM [' + @DBname + '].[' + @SCHname + '].[' + @TBLname + '] WITH (NOLOCK)) AS \"TableRowCount\",' + CHAR(10) --\r\n\t\t + N'\tCOUNT(1) AS \"StringOccuranceCount\"' + CHAR(10) --\r\n\t\t + N'FROM [' + @DBname + '].[' + @SCHname + '].[' + @TBLname + '] WITH (NOLOCK)' + CHAR(10) --\r\n\t\t + N'WHERE [' + @COLname + '] LIKE ''%' + @SearchString + '%'';';\r\n\t--\r\n\tIF @EXECorPRINT = 1 EXECUTE sys.sp_executesql @CMD = @SQLcmd; ELSE PRINT @SQLcmd + CHAR(10) + 'GO';\r\n\t--\r\n\tFETCH NEXT FROM SearchTableColumn_Cursor INTO @DBname, @SCHname, @TBLname, @COLname, @COLdatatype;\r\nEND;\r\nCLOSE SearchTableColumn_Cursor;\r\nDEALLOCATE SearchTableColumn_Cursor;\r\n--$EndRegion: SearchTableColumn_Cursor\r\n--\r\n--\r\nSET @SQLcmd --\r\n\t = N'SELECT DatabaseName, SchemaName, TableName, ColumnName, ColumnDataType, TableRowCount, StringOccuranceCount,' + CHAR(10) --\r\n\t + N'\t\t(''SELECT REPLACE([''+ColumnName+''], '''''+@SearchString+''''', ''''**''+'''+@SearchString+'''+''**'''') AS [''+ColumnName+'' (@SearchString Found)], *' + CHAR(10) --\r\n\t + N'\t\t\tFROM [''+DatabaseName+''].[''+SchemaName+''].[''+TableName+''] WHERE [''+ColumnName+''] LIKE ''''%'+@SearchString+'%'''';'') AS SearchQuery' + CHAR(10) --\r\n\t + N'FROM ##SearchResults' + CHAR(10) --\r\n\t + N'WHERE StringOccuranceCount<>0;';\r\n--\r\nIF @EXECorPRINT = 1 BEGIN EXECUTE sys.sp_executesql @CMD = @SQLcmd; PRINT @SQLcmd; END; ELSE PRINT N'--' + CHAR(10) + @SQLcmd + CHAR(10) + 'GO';",
  "placeholders": [
    {
      "name": "String_To_Search",
      "defaultValue": "String_To_Search"
    },
    {
      "name": "SchName",
      "defaultValue": " "
    }
  ]
}