{
  "id": "8b0e6917-8e24-4830-a412-583d899f4fc5",
  "prefix": "msdb_PurgeProcess",
  "description": "Purging or Cleaning of MSDB History Tables",
  "body": "/* =============================================================================================================================================================\r\n-- Server\t\t: LOCAL SERVER\r\n-- Database\t\t: msdb\r\n-- Script\t\t: msdb_PurgeProcess\r\n-- Description\t: Purging or Cleaning of MSDB History Tables\r\n-- Usage\t\t: Execute in msdb for Retaining History for Days = \"@DaysToRetainHistory\"\r\n-- History\t\t:\r\n-- Refer Links\t: https://thomasswilliams.github.io/sqlserver/2021/05/09/clear-msdb-history.html\r\n\t\t\t\t  https://www.madeiradata.com/post/keep-your-msdb-clean\r\n\t\t\t\t  https://www.madeiradata.com/post/keep-your-msdb-clean-part-2\r\n============================================================================================================================================================= */\r\n--\r\n/* ===== ** Ad-Hoc Process to Purge MSDB History Tables ** ================================================================================================== */\r\n--$BeginRegion: Process #1: Ad-Hoc Purging\r\nDECLARE @DaysToRetainHistory INT; SET @DaysToRetainHistory = 90;\r\nSET NOCOUNT ON;\r\nDECLARE @CutOffDate DATETIME; SET @CutOffDate = CAST((GETDATE() - @DaysToRetainHistory) AS DATE);\r\nPRINT 'MSDB MAINTAINANCE: DELETING HISTORY OLDER THAN: \"' + CONVERT(VARCHAR(32), @CutOffDate, 113) + '\"';\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sp_delete_backuphistory\r\n-- https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-delete-backuphistory-transact-sql\r\nPRINT '' + CHAR(10) + 'DELETING BACKUP HISTORY OLDER THAN: \"' + CONVERT(VARCHAR(32), @CutOffDate, 120) + '\"';\r\nEXECUTE msdb.dbo.sp_delete_backuphistory --Reduces the size of the backup and restore history tables by deleting the entries older than the specified date.\r\n\t@oldest_date = @CutOffDate; --@oldest_date retained in the backup and restore history tables with NO default.\r\n--$EndRegion: Purging msdb.dbo.sp_delete_backuphistory\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sp_delete_database_backuphistory\r\n-- https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-delete-database-backuphistory-transact-sql\r\n/* --Not Required as we are Purging All the Data Before @CutOffDate.\r\nEXECUTE msdb.dbo.sp_delete_database_backuphistory --Deletes information about the specified database from the backup and restore history tables.\r\n\t@database_name = NULL; --@database_name specifies the name of the database involved in backup and restore operations with NO default.\r\n*/\r\n--$EndRegion: Purging msdb.dbo.sp_delete_database_backuphistory\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sysmail_delete_mailitems_sp\r\n-- https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sysmail-delete-mailitems-sp-transact-sql \r\nPRINT '' + CHAR(10) + 'DELETING SYS MAIL ITEMS OLDER THAN: \"' + CONVERT(VARCHAR(32), @CutOffDate, 120) + '\"';\r\nEXECUTE msdb.dbo.sysmail_delete_mailitems_sp --Permanently deletes e-mail messages from the Database Mail internal tables.\r\n\t@sent_before = @CutOffDate, --Deletes e-mails up to the date and time provided as the @sent_before argument. NULL indicates all dates.\r\n\t@sent_status = NULL; --Deletes e-mails of the type specified by @sent_status. { sent | unsent | retrying | failed }. NULL indicates all statuses.\r\n--$EndRegion: Purging msdb.dbo.sysmail_delete_mailitems_sp\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sp_purge_jobhistory\r\n-- https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-purge-jobhistory-transact-sql\r\nPRINT '' + CHAR(10) + 'DELETING AGENT JOB LOG HISTORY OLDER THAN: \"' + CONVERT(VARCHAR(32), @CutOffDate, 120) + '\"';\r\nEXECUTE msdb.dbo.sp_purge_jobhistory --Removes the history records for a job.\r\n\t@job_name = NULL, --The name { name from dbo.sysjobs } of the job for which to delete the history records. NULL indicates all jobs.\r\n\t@job_id = NULL, --The id { job_id from dbo.sysjobs } of the job for the records to be deleted. NULL indicates all jobs.\r\n\t@oldest_date = @CutOffDate; --This removes records that are older than the @oldest_date specified. NULL indicates all dates.\r\n--$EndRegion: Purging msdb.dbo.sp_purge_jobhistory\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sysmail_delete_log_sp\r\n-- https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sysmail-delete-log-sp-transact-sql\r\nPRINT '' + CHAR(10) + 'DELETING DATABASE MAIL LOG HISTORY LOGGED BEFORE: \"' + CONVERT(VARCHAR(32), @CutOffDate, 120) + '\"';\r\nEXECUTE msdb.dbo.sysmail_delete_log_sp --Deletes events in the Database Mail log or those events meeting a date or type criteria.\r\n\t@logged_before = @CutOffDate, --Deletes entries up to the date and time specified by the @logged_before parameter. NULL indicates all dates.\r\n\t@event_type = NULL; --Deletes log entries of specified @event_type. { success | warning | error | informational }. NULL indicates all event_types.\r\n--$EndRegion: Purging msdb.dbo.sysmail_delete_log_sp\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sp_maintplan_delete_log\r\n-- https://sswug.org/alexanderchigrik/sql-server/nine-undocumented-sql-server-2014-database-maintenance-plan-stored-procedures/\r\nPRINT '' + CHAR(10) + 'DELETING MAINTAINANCE PLAN HISTORY BEFORE: \"' + CONVERT(VARCHAR(32), @CutOffDate, 120) + '\"';\r\nEXECUTE msdb.dbo.sp_maintplan_delete_log --Deletes the maintenance plan log entries.\r\n\t@plan_id = NULL, --The ID of the maintenance plan. NULL indicates all plans.\r\n\t@subplan_id = NULL, --The ID of the maintenance subplan. NULL indicates all subplans.\r\n\t@oldest_time = @CutOffDate; --This removes records that are older than the @oldest_time specified. NULL indicates all dates.\r\n--$EndRegion: Purging msdb.dbo.sp_maintplan_delete_log\r\n--\r\n--$BeginRegion: Purging msdb.dbo.sysjobactivity and msdb.dbo.syssessions\r\nDELETE JA --Level 1 Deletion\r\nFROM msdb.dbo.sysjobactivity AS JA\r\nINNER JOIN msdb.dbo.syssessions AS S ON S.session_id = JA.session_id\r\nWHERE S.agent_start_date <= @CutOffDate;\r\n\r\nDELETE FROM msdb.dbo.syssessions --Level 0 Deletion\r\nWHERE agent_start_date <= @CutOffDate;\r\n--$EndRegion: Purging msdb.dbo.sysjobactivity and msdb.dbo.syssessions\r\n--\r\nGO\r\n--$EndRegion: Process #1: Ad-Hoc Purging\r\n--\r\n--\r\n/* ===== ** Loop Process to Purge MSDB History Tables in chunks ** ========================================================================================== */\r\n--$BeginRegion: Process #2: Loop Purging in Chunks\r\nDECLARE @DaysToRetainHistory INT; SET @DaysToRetainHistory = 90;\r\nSET NOCOUNT ON;\r\nDECLARE @CutOffDate DATETIME; SET @CutOffDate = CAST((GETDATE() - @DaysToRetainHistory) AS DATE);\r\nDECLARE @MinLogDate DATE;\r\nSELECT @MinLogDate = CAST(MIN(A.MinDateTime) AS DATE)\r\nFROM \r\n\t(\r\n\t\t--$BeginRegion: Getting MIN Date from History Tables\r\n\t\tSELECT MIN(backup_start_date) AS \"MinDateTime\" FROM msdb.dbo.backupset UNION\r\n\t\tSELECT MIN(backup_finish_date) AS \"MinDateTime\" FROM msdb.dbo.backupset UNION\r\n\t\tSELECT MIN(restore_date) AS \"MinDateTime\" FROM msdb.dbo.restorehistory UNION\r\n\t\tSELECT MIN(send_request_date) AS \"MinDateTime\" FROM msdb.dbo.sysmail_allitems UNION\r\n\t\tSELECT MIN(sent_date) AS \"MinDateTime\" FROM msdb.dbo.sysmail_allitems UNION\r\n\t\tSELECT MIN(last_mod_date) AS \"MinDateTime\" FROM msdb.dbo.sysmail_allitems UNION\r\n\t\tSELECT MIN(log_date) AS \"MinDateTime\" FROM msdb.dbo.sysmail_log UNION\r\n\t\tSELECT MIN(last_mod_date) AS \"MinDateTime\" FROM msdb.dbo.sysmail_log UNION\r\n\t\tSELECT MIN(start_time) AS \"MinDateTime\" FROM msdb.dbo.sysmaintplan_log UNION\r\n\t\tSELECT MIN(end_time) AS \"MinDateTime\" FROM msdb.dbo.sysmaintplan_log UNION\r\n\t\tSELECT MIN(start_time) AS \"MinDateTime\" FROM msdb.dbo.sysmaintplan_logdetail UNION\r\n\t\tSELECT MIN(end_time) AS \"MinDateTime\" FROM msdb.dbo.sysmaintplan_logdetail UNION\r\n\t\tSELECT MIN(agent_start_date) AS \"MinDateTime\" FROM msdb.dbo.syssessions\r\n\t\t--$EndRegion: Getting MIN Date from History Tables\r\n\t) AS A\r\nWHERE A.MinDateTime IS NOT NULL;\r\n--\r\nIF @MinLogDate IS NULL PRINT 'MSDB HISTORY TABLES ARE EMPTY..!';\r\nELSE IF @MinLogDate >= @CutOffDate PRINT 'NO OLD DATA PRESENT IN MSDB HISTORY TABLES BEFORE @CutOffDate: \"' + CONVERT(VARCHAR(32), @CutOffDate, 113) + '\"';\r\nELSE \r\nBEGIN\r\n    PRINT 'DELETING HISTORY OLDER THAN: \"' + CONVERT(VARCHAR(32), @CutOffDate, 113) + '\" AND LOOPING For: ' + CONVERT(VARCHAR(8), DATEDIFF(DAY,@MinLogDate,@CutOffDate)) + ' Days';\r\n    --\r\n    WHILE (@MinLogDate <= @CutOffDate) --Looping Through Each Day From @MinLogDate Till @CutOffDate\r\n\tBEGIN\r\n        PRINT 'DELETING HISTORY LOGGED ON: \"' + CONVERT(VARCHAR(32), @MinLogDate, 113) + '\"';\r\n        --\r\n\t\tBEGIN TRANSACTION;\r\n\t\t\tEXEC msdb.dbo.sp_delete_backuphistory @oldest_date = @MinLogDate;\r\n\t\t\tEXEC msdb.dbo.sp_maintplan_delete_log @plan_id = NULL, @subplan_id = NULL, @oldest_time = @MinLogDate;\r\n\t\t\tEXEC msdb.dbo.sp_purge_jobhistory @job_name = NULL, @job_id = NULL, @oldest_date = @MinLogDate;\r\n\t\t\tEXEC msdb.dbo.sysmail_delete_mailitems_sp @sent_before = @MinLogDate;\r\n\t\t\tEXEC msdb.dbo.sysmail_delete_log_sp @logged_before = @MinLogDate;\r\n\t\t\tDELETE JA FROM msdb.dbo.sysjobactivity AS JA INNER JOIN msdb.dbo.syssessions AS S ON S.session_id = JA.session_id WHERE S.agent_start_date <= @MinLogDate;\r\n\t\t\tDELETE FROM msdb.dbo.syssessions WHERE agent_start_date <= @MinLogDate;\r\n\t\tCOMMIT TRANSACTION;\r\n        --\r\n        SET @MinLogDate = DATEADD(DAY, 1, @MinLogDate); --Incrementing Each Day For Loop Process\r\n    END;\r\nEND;\r\n--$EndRegion: Process #2: Loop Purging in Chunks"
}