{
  "id": "3be5beb6-9f48-4389-be34-e28af143f0cc",
  "prefix": "GapsAndIslands_FindingAvailableDateRangeEvents",
  "description": "Finding Available DateRange Events (aka. Gaps) with Different Approaches (Gaps And Islands Concept)",
  "body": "/* =================================================================================================================================================================================\r\n-- Database\t\t: User Database\r\n-- Script\t\t: Finding Available DateRange Events (aka. Gaps) with Different Approaches (Gaps And Islands Concept)\r\n-- Description\t: Finding Available DateRange Events (aka. Gaps) of below Scenarios with Event1(E1) and Event2 (E2)\r\n-- Concept\t\t: Gaps Concept in SQL Server\r\n----$BeginRegion: Test Events for Demonstrating \"Finding Available DateRange Events\"\r\n\t----Input:: ID, StartTime, EndTime\r\n\t----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000 => 2nd Event Started Just After 1st Event Completed with 1 second Diff -- Finish to Start\r\n\t----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000 => 2nd Event Started While 1st Event is Still in Progress -- Start to Start with Lag -- OverLapped\r\n\t----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000 => 2nd Event Completed Along with 1st Event eventhough 2nd Event Started Later -- Finish to Finish\r\n\t----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000 => 2nd Event Started Along with 1st Event But 2nd Event Completed Later -- Start to Start\r\n\t----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000 => 2nd Event Started After 1st Event and Completed Before 1st Event -- Complete Overlapped Event\r\n\t----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000 => 2nd Event Started with Gap After 1st Event Completed -- Finish to Start with Lag -- No OverLap\r\n----$EndRegion: Test Events for Demonstrating \"Finding Available DateRange Events\"\r\n-- Usage\t\t: Use the Sample Data and Choose an Approach to Get the Required Result Set\r\n\t--Approach #1: This Approach is helpful to Find Gaps in Between the Events.\r\n\t--Approach #2: This Approach is Similar to Approach #1\r\n\t--Approach #3: This Approach uses Window Functions (LEAD or LAG) which are Applicable from SQL >= v2012\r\n\t--Conclusion : Approach #1 is best suited for any given DataRanges. However Approach #3 is Best Optimised and Very Fast Execution if SQL > 2012\r\n\t--**Note     : Add More Events (E3, E4, E5.... so on) in the TestEvents Table (##SampleData) for the Same ID and Check the ResultSet.\r\n\t--If The EventsTable DoesNot have \"ID\" column, Then Mark the Value of ID column to 1 for all the events. (Most StackOverFlow Approaches have this kind of Events without ID).\r\n-- History\t\t:\r\n-- Refer Links\t: https://stackoverflow.com/questions/9604400/sql-query-to-show-gaps-between-multiple-date-ranges\r\n================================================================================================================================================================================= */\r\nUSE tempdb;\r\nGO\r\n--\r\n--$BeginRegion: ##SampleData Table with Sample Data\r\nIF OBJECT_ID('tempdb..##SampleData', 'U') IS NOT NULL\r\n\tDROP TABLE ##SampleData;\r\nCREATE TABLE ##SampleData (ID INT NULL, StartTime DATETIME NULL, EndTime DATETIME NULL);\r\nINSERT INTO ##SampleData(ID, StartTime, EndTime)\r\nVALUES-- ID, Event #1 (E1), Event #2 (E2)\r\n\t(1, N'2010-01-01 00:00:00.000', N'2010-01-01 00:30:00.000'), (1, N'2010-01-01 00:30:01.000', N'2010-01-01 02:00:00.000'),\r\n\t(2, N'2010-01-01 03:00:00.000', N'2010-01-01 05:00:00.000'), (2, N'2010-01-01 04:00:00.000', N'2010-01-01 06:00:00.000'),\r\n\t(3, N'2010-01-01 07:00:00.000', N'2010-01-01 09:00:00.000'), (3, N'2010-01-01 08:00:00.000', N'2010-01-01 09:00:00.000'),\r\n\t(4, N'2010-01-01 10:00:00.000', N'2010-01-01 11:00:00.000'), (4, N'2010-01-01 10:00:00.000', N'2010-01-01 12:00:00.000'),\r\n\t(5, N'2010-01-01 13:00:00.000', N'2010-01-01 16:00:00.000'), (5, N'2010-01-01 14:00:00.000', N'2010-01-01 15:00:00.000'),\r\n\t(6, N'2010-01-01 17:00:00.000', N'2010-01-01 18:00:00.000'), (6, N'2010-01-01 19:00:00.000', N'2010-01-01 20:00:00.000');\r\n--\r\nSELECT ID, StartTime, EndTime FROM ##SampleData ORDER BY ID ASC, StartTime ASC, EndTime ASC;\r\n--$EndRegion: ##SampleData Table with Sample Data\r\nGO\r\n--\r\n/* ===== ** Approach #1 ** ================================================================================================================================== */\r\n--$BeginRegion: Approach #1\r\n--\r\n--$BeginRegion: Raw Data Input:: ID, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000\r\n----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000\r\n----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000\r\n----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000\r\n----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000\r\n--$EndRegion: Raw Data Input:: ID, StartTime, EndTime\r\n--\r\nSELECT DISTINCT T1.ID,\r\n\t\t\t\tT1.EndTime AS \"GapStartTime\",\r\n\t\t\t\tT2.StartTime AS \"GapEndTime\"\r\nFROM ##SampleData AS T1\r\nINNER JOIN ##SampleData AS T2\r\n\tON T2.ID = T1.ID\r\n\t   AND T2.StartTime > T1.EndTime\r\n\t   AND T2.StartTime = (\r\n\t\t\t\t\t\t\t  SELECT MIN(T3.StartTime)\r\n\t\t\t\t\t\t\t  FROM ##SampleData AS T3\r\n\t\t\t\t\t\t\t  WHERE T3.ID = T2.ID\r\n\t\t\t\t\t\t\t\t\tAND T3.StartTime > T1.EndTime\r\n\t\t\t\t\t\t  )\r\nWHERE NOT EXISTS (\r\n\t\t\t\t\t SELECT *\r\n\t\t\t\t\t FROM ##SampleData AS T4\r\n\t\t\t\t\t WHERE T4.ID = T1.ID\r\n\t\t\t\t\t\t   AND T4.StartTime < T1.EndTime\r\n\t\t\t\t\t\t   AND T4.EndTime > T1.EndTime\r\n\t\t\t\t )\r\nORDER BY T1.ID ASC, GapStartTime ASC, GapEndTime ASC;\r\n--\r\n--$BeginRegion: ResultSet:: ID, StartTime, EndTime\r\n----1\tE1 = 00:30:00.000 to 00:30:01.000 ;\r\n----6\tE1 = 18:00:00.000 to 19:00:00:000 ;\r\n--$EndRegion: ResultSet:: ID, StartTime, EndTime\r\n--\r\n--$EndRegion: Approach #1\r\nGO\r\n--\r\n/* ===== ** Approach #2 ** ================================================================================================================================== */\r\n--$BeginRegion: Approach #2\r\n--\r\n--$BeginRegion: Raw Data Input:: ID, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000\r\n----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000\r\n----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000\r\n----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000\r\n----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000\r\n--$EndRegion: Raw Data Input:: ID, StartTime, EndTime\r\n--\r\nSELECT T3.ID,\r\n\t   T4.EndTime AS \"GapStartTime\",\r\n\t   T3.StartTime AS \"GapEndTime\"\r\nFROM (\r\n\t\t SELECT DISTINCT T1.ID, T1.StartTime, ROW_NUMBER() OVER (ORDER BY T1.StartTime) AS \"RN3\"\r\n\t\t FROM ##SampleData AS T1\r\n\t\t WHERE NOT EXISTS (\r\n\t\t\t\t\t\t\t  SELECT *\r\n\t\t\t\t\t\t\t  FROM ##SampleData AS T2\r\n\t\t\t\t\t\t\t  WHERE T2.ID = T1.ID\r\n\t\t\t\t\t\t\t\t\tAND T2.StartTime < T1.StartTime\r\n\t\t\t\t\t\t\t\t\tAND T2.EndTime > T1.StartTime\r\n\t\t\t\t\t\t  )\r\n\t ) AS T3\r\nINNER JOIN (\r\n\t\t\t   SELECT DISTINCT T1.ID, T1.EndTime, ROW_NUMBER() OVER (ORDER BY T1.EndTime) AS \"RN4\"\r\n\t\t\t   FROM ##SampleData AS T1\r\n\t\t\t   WHERE NOT EXISTS (\r\n\t\t\t\t\t\t\t\t\tSELECT *\r\n\t\t\t\t\t\t\t\t\tFROM ##SampleData AS T2\r\n\t\t\t\t\t\t\t\t\tWHERE T2.ID = T1.ID\r\n\t\t\t\t\t\t\t\t\t\t  AND T2.StartTime < T1.EndTime\r\n\t\t\t\t\t\t\t\t\t\t  AND T2.EndTime > T1.EndTime\r\n\t\t\t\t\t\t\t\t)\r\n\t\t   ) AS T4\r\n\tON T4.ID = T3.ID\r\n\t   AND T4.RN4 = T3.RN3 - 1\r\nWHERE T4.EndTime < T3.StartTime\r\nORDER BY T3.ID ASC, GapStartTime ASC, GapEndTime ASC;\r\n--\r\n--$BeginRegion: ResultSet:: ID, StartTime, EndTime\r\n----1\tE1 = 00:30:00.000 to 00:30:01.000 ;\r\n----6\tE1 = 18:00:00.000 to 19:00:00:000 ;\r\n--$EndRegion: ResultSet:: ID, StartTime, EndTime\r\n--\r\n--$EndRegion: Approach #2\r\nGO\r\n--\r\n/* ===== ** Approach #3 ** ================================================================================================================================== */\r\n--$BeginRegion: Approach #3\r\n--\r\n--$BeginRegion: Raw Data Input:: ID, StartTime, EndTime\r\n----1\tE1 = 00:00:00.000 to 00:30:00.000 ; E2 = 00:30:01.000 to 02:00:00.000\r\n----2\tE1 = 03:00:00.000 to 05:00:00.000 ; E2 = 04:00:00.000 to 06:00:00.000\r\n----3\tE1 = 07:00:00.000 to 09:00:00.000 ; E2 = 08:00:00.000 to 09:00:00.000\r\n----4\tE1 = 10:00:00.000 to 11:00:00.000 ; E2 = 10:00:00.000 to 12:00:00.000\r\n----5\tE1 = 13:00:00.000 to 16:00:00.000 ; E2 = 14:00:00.000 to 15:00:00.000\r\n----6\tE1 = 17:00:00.000 to 18:00:00.000 ; E2 = 19:00:00.000 to 20:00:00.000\r\n--$EndRegion: Raw Data Input:: ID, StartTime, EndTime\r\n--\r\nSELECT T2.ID,\r\n\t   T2.AvailableStartDate AS \"GapStartTime\",\r\n\t   T2.AvailableEndDate AS \"GapEndTime\"\r\nFROM (\r\n\t\t SELECT T1.ID,\r\n\t\t\t\tMAX(T1.EndTime) OVER (PARTITION BY T1.ID ORDER BY T1.StartTime ASC) AS \"AvailableStartDate\",\r\n\t\t\t\tLEAD(T1.StartTime, 1, NULL) OVER (PARTITION BY T1.ID ORDER BY T1.StartTime ASC, T1.EndTime ASC) AS \"AvailableEndDate\"\r\n\t\t FROM ##SampleData AS T1\r\n\t\t WHERE T1.EndTime > T1.StartTime\r\n\t ) AS T2\r\nWHERE T2.AvailableEndDate > T2.AvailableStartDate\r\nORDER BY T2.ID ASC, GapStartTime ASC, GapEndTime ASC;\r\n--\r\n--$BeginRegion: ResultSet:: ID, StartTime, EndTime\r\n----1\tE1 = 00:30:00.000 to 00:30:01.000 ;\r\n----6\tE1 = 18:00:00.000 to 19:00:00:000 ;\r\n--$EndRegion: ResultSet:: ID, StartTime, EndTime\r\n--\r\n--$EndRegion: Approach #3"
}