{
  "id": "d99bb61b-355a-4440-bc9d-99e1f29ccaf0",
  "prefix": "mvpED_sp_HumanEvents",
  "description": "Run a quick Extended Events trace to collect data about what’s currently happening on a server, or set up permanent Extended Events sessions and log their data off to permanent tables.",
  "body": "SET ANSI_NULLS ON;\r\nSET ANSI_PADDING ON;\r\nSET ANSI_WARNINGS ON;\r\nSET ARITHABORT ON;\r\nSET CONCAT_NULL_YIELDS_NULL ON;\r\nSET QUOTED_IDENTIFIER ON;\r\nSET STATISTICS TIME, IO OFF;\r\nGO\r\n\r\n/*\r\n██╗  ██╗██╗   ██╗███╗   ███╗ █████╗ ███╗   ██╗      \r\n██║  ██║██║   ██║████╗ ████║██╔══██╗████╗  ██║      \r\n███████║██║   ██║██╔████╔██║███████║██╔██╗ ██║      \r\n██╔══██║██║   ██║██║╚██╔╝██║██╔══██║██║╚██╗██║      \r\n██║  ██║╚██████╔╝██║ ╚═╝ ██║██║  ██║██║ ╚████║      \r\n╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝      \r\n                                                    \r\n███████╗██╗   ██╗███████╗███╗   ██╗████████╗███████╗\r\n██╔════╝██║   ██║██╔════╝████╗  ██║╚══██╔══╝██╔════╝\r\n█████╗  ██║   ██║█████╗  ██╔██╗ ██║   ██║   ███████╗\r\n██╔══╝  ╚██╗ ██╔╝██╔══╝  ██║╚██╗██║   ██║   ╚════██║\r\n███████╗ ╚████╔╝ ███████╗██║ ╚████║   ██║   ███████║\r\n╚══════╝  ╚═══╝  ╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝\r\n*/\r\n\r\nIF OBJECT_ID('dbo.sp_HumanEvents') IS  NULL\r\n   BEGIN\r\n       EXEC ('CREATE PROCEDURE dbo.sp_HumanEvents AS RETURN 138;');\r\n   END;\r\nGO\r\n\r\nALTER PROCEDURE [dbo].[sp_HumanEvents]\r\n( \r\n    @event_type sysname = N'query',\r\n    @query_duration_ms integer = 500,\r\n    @query_sort_order nvarchar(10) = N'cpu',\r\n    @blocking_duration_ms integer = 500,\r\n    @wait_type nvarchar(4000) = N'ALL',\r\n    @wait_duration_ms integer = 10,\r\n    @client_app_name sysname = N'',\r\n    @client_hostname sysname = N'',\r\n    @database_name sysname = N'',\r\n    @session_id nvarchar(7) = N'',\r\n    @sample_divisor integer = 5,\r\n    @username sysname = N'',\r\n    @object_name sysname = N'',\r\n    @object_schema sysname = N'dbo', \r\n    @requested_memory_mb integer = 0,\r\n    @seconds_sample integer = 10,\r\n    @gimme_danger bit = 0,\r\n    @keep_alive bit = 0,\r\n    @custom_name nvarchar(256) = N'',\r\n    @output_database_name sysname = N'',\r\n    @output_schema_name sysname = N'dbo',\r\n    @delete_retention_days integer = 3,\r\n    @cleanup bit = 0,\r\n    @max_memory_kb bigint = 102400,\r\n    @version varchar(30) = NULL OUTPUT,\r\n    @version_date datetime = NULL OUTPUT,\r\n    @debug bit = 0,\r\n    @help bit = 0 \r\n)\r\nWITH RECOMPILE\r\nAS\r\nBEGIN\r\n\r\nSET STATISTICS XML OFF;\r\nSET NOCOUNT, XACT_ABORT ON;\r\nSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\nSELECT \r\n    @version = '2.92', \r\n    @version_date = '20211101';\r\n\r\nIF @help = 1\r\nBEGIN\r\n    /*Warnings, I guess*/\r\n    SELECT [WARNING WARNING WARNING] = \r\n        N'warning! achtung! peligro! chardonnay!' UNION ALL \r\n    SELECT N'misuse of this procedure can harm performance' UNION ALL\r\n    SELECT N'be very careful about introducing observer overhead, especially when gathering query plans' UNION ALL\r\n    SELECT N'be even more careful when setting up permanent sessions!' UNION ALL\r\n    SELECT N'for additional support: http://bit.ly/sp_HumanEvents';\r\n \r\n \r\n    /*Introduction*/\r\n    SELECT\r\n        introduction = N'allow me to reintroduce myself' UNION ALL\r\n    SELECT N'this can be used to start a time-limited extended event session to capture various things:' UNION ALL\r\n    SELECT N'  * blocking' UNION ALL \r\n    SELECT N'  * query performance and plans' UNION ALL \r\n    SELECT N'  * compilations' UNION ALL \r\n    SELECT N'  * recompilations' UNION ALL \r\n    SELECT N'  * wait stats'; \r\n\r\n\r\n    /*Limitations*/\r\n    SELECT\r\n        limitations = N'frigid shortcomings' UNION ALL\r\n    SELECT N'you need to be on at least SQL Server 2012 SP4 or higher to run this' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'if your version isn''t patched to where query_hash_signed is an available xe action, this won''t run' UNION ALL\r\n    SELECT N'sp_HumanEvents is designed to make getting information from common extended events easier. with that in mind,' UNION ALL\r\n    SELECT N'some of the customization is limited, and right now you can''t just choose your own adventure.' UNION ALL    \r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'because i don''t want to create files, i''m using the ring buffer, which also has some pesky limitations.' UNION ALL\r\n    SELECT N'https://techcommunity.microsoft.com/t5/sql-server-support/you-may-not-see-the-data-you-expect-in-extended-event-ring/ba-p/315838' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'in order to use the \"blocking\" session, you must enable the blocked process report' UNION ALL\r\n    SELECT N'https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/blocked-process-threshold-server-configuration-option';   \r\n \r\n \r\n    /*Usage*/\r\n    SELECT \r\n        parameter = \r\n            ap.name,\r\n        t.name,\r\n        description = \r\n            CASE ap.name WHEN N'@event_type' THEN N'used to pick which session you want to run'\r\n                         WHEN N'@query_duration_ms' THEN N'(>=) used to set a minimum query duration to collect data for'\r\n                         WHEN N'@query_sort_order' THEN 'when you use the \"query\" event, lets you choose which metrics to sort results by'\r\n                         WHEN N'@blocking_duration_ms' THEN N'(>=) used to set a minimum blocking duration to collect data for'\r\n                         WHEN N'@wait_type' THEN N'(inclusive) filter to only specific wait types'\r\n                         WHEN N'@wait_duration_ms' THEN N'(>=) used to set a minimum time per wait to collect data for'\r\n                         WHEN N'@client_app_name' THEN N'(inclusive) filter to only specific app names'\r\n                         WHEN N'@client_hostname' THEN N'(inclusive) filter to only specific host names'\r\n                         WHEN N'@database_name' THEN N'(inclusive) filter to only specific databases'\r\n                         WHEN N'@session_id' THEN N'(inclusive) filter to only a specific session id, or a sample of session ids'\r\n                         WHEN N'@sample_divisor' THEN N'the divisor for session ids when sampling a workload, e.g. SPID % 5'\r\n                         WHEN N'@username' THEN N'(inclusive) filter to only a specific user'\r\n                         WHEN N'@object_name' THEN N'(inclusive) to only filter to a specific object name'\r\n                         WHEN N'@object_schema' THEN N'(inclusive) the schema of the object you want to filter to; only needed with blocking events'\r\n                         WHEN N'@requested_memory_mb' THEN N'(>=) the memory grant a query must ask for to have data collected'\r\n                         WHEN N'@seconds_sample' THEN N'the duration in seconds to run the event session for'\r\n                         WHEN N'@gimme_danger' THEN N'used to override default minimums for query, wait, and blocking durations. only use if you''re okay with potentially adding a lot of observer overhead on your system, or for testing purposes.'\r\n                         WHEN N'@debug' THEN N'use to print out dynamic SQL'\r\n                         WHEN N'@keep_alive' THEN N'creates a permanent session, either to watch live or log to a table from'\r\n                         WHEN N'@custom_name' THEN N'if you want to custom name a permanent session'\r\n                         WHEN N'@output_database_name' THEN N'the database you want to log data to'\r\n                         WHEN N'@output_schema_name' THEN N'the schema you want to log data to'\r\n                         WHEN N'@delete_retention_days' THEN N'how many days of logged data you want to keep'\r\n                         WHEN N'@cleanup' THEN N'deletes all sessions, tables, and views. requires output database and schema.'\r\n                         WHEN N'@max_memory_kb' THEN N'set a max ring buffer size to log data to'\r\n                         WHEN N'@help' THEN N'well you''re here so you figured this one out'\r\n                         WHEN N'@version' THEN N'to make sure you have the most recent bits'\r\n                         WHEN N'@version_date' THEN N'to make sure you have the most recent bits'\r\n                         ELSE N'????' \r\n            END,\r\n        valid_inputs = \r\n           CASE ap.name WHEN N'@event_type' THEN N'\"blocking\", \"query\", \"waits\", \"recompiles\", \"compiles\" and certain variations on those words'\r\n                        WHEN N'@query_duration_ms' THEN N'an integer'\r\n                        WHEN N'@query_sort_order' THEN '\"cpu\", \"reads\", \"writes\", \"duration\", \"memory\", \"spills\", and you can add \"avg\" to sort by averages, e.g. \"avg cpu\"'\r\n                        WHEN N'@blocking_duration_ms' THEN N'an integer'\r\n                        WHEN N'@wait_type' THEN N'a single wait type, or a CSV list of wait types'\r\n                        WHEN N'@wait_duration_ms' THEN N'an integer'\r\n                        WHEN N'@client_app_name' THEN N'a stringy thing'\r\n                        WHEN N'@client_hostname' THEN N'a stringy thing'\r\n                        WHEN N'@database_name' THEN N'a stringy thing'\r\n                        WHEN N'@session_id' THEN N'an integer, or \"sample\" to sample a workload'\r\n                        WHEN N'@sample_divisor' THEN N'an integer'\r\n                        WHEN N'@username' THEN N'a stringy thing'\r\n                        WHEN N'@object_name' THEN N'a stringy thing'\r\n                        WHEN N'@object_schema' THEN N'a stringy thing'\r\n                        WHEN N'@requested_memory_mb' THEN N'an integer'\r\n                        WHEN N'@seconds_sample' THEN N'an integer'\r\n                        WHEN N'@gimme_danger' THEN N'1 or 0'\r\n                        WHEN N'@debug' THEN N'1 or 0'\r\n                        WHEN N'@keep_alive' THEN N'1 or 0'\r\n                        WHEN N'@custom_name' THEN N'a stringy thing'\r\n                        WHEN N'@output_database_name' THEN N'a valid database name'\r\n                        WHEN N'@output_schema_name' THEN N'a valid schema'\r\n                        WHEN N'@delete_retention_days' THEN N'a POSITIVE integer'\r\n                        WHEN N'@cleanup' THEN N'1 or 0'\r\n                        WHEN N'@max_memory_kb' THEN N'an integer'\r\n                        WHEN N'@help' THEN N'1 or 0'\r\n                        WHEN N'@version' THEN N'none, output'\r\n                        WHEN N'@version_date' THEN N'none, output'\r\n                        ELSE N'????' \r\n           END,\r\n        defaults = \r\n           CASE ap.name WHEN N'@event_type' THEN N'\"query\"'\r\n                        WHEN N'@query_duration_ms' THEN N'500 (ms)'\r\n                        WHEN N'@query_sort_order' THEN N'\"cpu\"'\r\n                        WHEN N'@blocking_duration_ms' THEN N'500 (ms)'\r\n                        WHEN N'@wait_type' THEN N'\"all\", which uses a list of \"interesting\" waits'\r\n                        WHEN N'@wait_duration_ms' THEN N'10 (ms)'\r\n                        WHEN N'@client_app_name' THEN N'intentionally left blank'\r\n                        WHEN N'@client_hostname' THEN N'intentionally left blank'\r\n                        WHEN N'@database_name' THEN N'intentionally left blank'\r\n                        WHEN N'@session_id' THEN N'intentionally left blank'\r\n                        WHEN N'@sample_divisor' THEN N'5'\r\n                        WHEN N'@username' THEN N'intentionally left blank'\r\n                        WHEN N'@object_name' THEN N'intentionally left blank'\r\n                        WHEN N'@object_schema' THEN N'dbo'\r\n                        WHEN N'@requested_memory_mb' THEN N'0'\r\n                        WHEN N'@seconds_sample' THEN N'10'\r\n                        WHEN N'@gimme_danger' THEN N'0'\r\n                        WHEN N'@keep_alive' THEN N'0'\r\n                        WHEN N'@custom_name' THEN N'intentionally left blank'\r\n                        WHEN N'@output_database_name' THEN N'intentionally left blank'\r\n                        WHEN N'@output_schema_name' THEN N'dbo'\r\n                        WHEN N'@delete_retention_days' THEN N'3 (days)'\r\n                        WHEN N'@debug' THEN N'0'\r\n                        WHEN N'@cleanup' THEN N'0'\r\n                        WHEN N'@max_memory_kb' THEN N'102400'\r\n                        WHEN N'@help' THEN N'0'\r\n                        WHEN N'@version' THEN N'none, output'\r\n                        WHEN N'@version_date' THEN N'none, output'\r\n                        ELSE N'????' \r\n           END \r\n    FROM sys.all_parameters AS ap\r\n    JOIN sys.all_objects AS o\r\n        ON ap.object_id = o.object_id\r\n    JOIN sys.types AS t\r\n        ON  ap.system_type_id = t.system_type_id\r\n        AND ap.user_type_id = t.user_type_id\r\n    WHERE o.name = N'sp_HumanEvents'\r\n    OPTION(RECOMPILE);\r\n\r\n\r\n    /*Example calls*/\r\n    SELECT \r\n        example_calls = N'EXAMPLE CALLS' UNION ALL    \r\n    SELECT N'note that not all filters are compatible with all sessions' UNION ALL\r\n    SELECT N'this is handled dynamically, but please don''t think you''re crazy if one \"doesn''t work\"' UNION ALL\r\n    SELECT N'to capture all types of \"completed\" queries that have run for at least one second for 20 seconds from a specific database' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''query'', @query_duration_ms = 1000, @seconds_sample = 20, @database_name = ''YourMom'';' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'or that have asked for 1gb of memory' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''query'', @query_duration_ms = 1000, @seconds_sample = 20, @requested_memory_mb = 1024;' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'maybe you want to find unparameterized queries from a poorly written app' UNION ALL\r\n    SELECT N'newer versions will use sql_statement_post_compile, older versions will use uncached_sql_batch_statistics and sql_statement_recompile' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''compilations'', @client_app_name = N''GL00SNIFЯ'', @session_id = ''sample'', @sample_divisor = 3;' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'perhaps you think queries recompiling are the cause of your problems!' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''recompilations'', @seconds_sample = 30;' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'look, blocking is annoying. just turn on RCSI, you goblin.' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''blocking'', @seconds_sample = 60, @blocking_duration_ms = 5000;' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'i mean wait stats are probably a meme but whatever' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''waits'', @wait_duration_ms = 10, @seconds_sample = 100, @wait_type = N''all'';' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'note that THREADPOOL is SOS_WORKER in xe-land. why? i dunno.' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'EXEC dbo.sp_HumanEvents @event_type = ''waits'', @wait_duration_ms = 10, @seconds_sample = 100, @wait_type = N''SOS_WORKER,RESOURCE_SEMAPHORE,YOUR_MOM'';' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'to set up a permanent session for compiles, but you can specify any of the session types here' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL    \r\n    SELECT N'EXEC sp_HumanEvents @event_type = N''compiles'', @debug = 1, @keep_alive = 1;' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'to log to a database named whatever, and a schema called dbo' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL    \r\n    SELECT N'EXEC sp_HumanEvents @debug = 1, @output_database_name = N''whatever'', @output_schema_name = N''dbo'';' UNION ALL\r\n    SELECT REPLICATE(N'-', 100);\r\n\r\n\r\n    /*Views*/\r\n    SELECT \r\n        views_and_stuff = N'views that get created when you log to tables' UNION ALL\r\n    SELECT N'these will get created in the same database that your output tables get created in for simplicity' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'HumanEvents_Queries: View to look at data pulled from logged queries' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'HumanEvents_WaitsByQueryAndDatabase: waits generated grouped by query and database. this is best effort, as the query grouping relies on them being present in the plan cache' UNION ALL\r\n    SELECT N'HumanEvents_WaitsByDatabase: waits generated grouped by database' UNION ALL\r\n    SELECT N'HumanEvents_WaitsTotal: total waits' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'HumanEvents_Blocking: view to assemble blocking chains' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'HumanEvents_CompilesByDatabaseAndObject: compiles by database and object' UNION ALL\r\n    SELECT N'HumanEvents_CompilesByQuery: compiles by query' UNION ALL\r\n    SELECT N'HumanEvents_CompilesByDuration: compiles by duration length' UNION ALL\r\n    SELECT N'HumanEvents_Compiles_Legacy: compiles on older versions that don''t support new events' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'HumanEvents_Parameterization: data collected from the parameterization event' UNION ALL\r\n    SELECT REPLICATE(N'-', 100) UNION ALL\r\n    SELECT N'HumanEvents_RecompilesByDatabaseAndObject: recompiles by database and object' UNION ALL\r\n    SELECT N'HumanEvents_RecompilesByQuery: recompiles by query' UNION ALL\r\n    SELECT N'HumanEvents_RecompilesByDuration: recompiles by long duration' UNION ALL\r\n    SELECT N'HumanEvents_Recompiles_Legacy: recompiles on older versions that don''t support new events' UNION ALL\r\n    SELECT REPLICATE(N'-', 100);\r\n\r\n\r\n    /*License to F5*/\r\n    SELECT \r\n        mit_license_yo = N'i am MIT licensed, so like, do whatever' UNION ALL\r\n    SELECT N'see printed messages for full license';\r\n    RAISERROR(N'\r\nMIT License\r\n\r\nCopyright 2020 Darling Data, LLC \r\n\r\nhttps://www.erikdarlingdata.com/\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), \r\nto deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute,\r\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the \r\nfollowing conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE \r\nFOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION \r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n', 0, 1) WITH NOWAIT; \r\n\r\nRETURN;\r\nEND;\r\n\r\nBEGIN TRY\r\n\r\nCREATE TABLE #drop_commands \r\n( \r\n    id integer IDENTITY PRIMARY KEY, \r\n    drop_command nvarchar(1000) \r\n);\r\n\r\nCREATE TABLE #user_waits\r\n(\r\n    wait_type nvarchar(60)\r\n);\r\n\r\nCREATE TABLE #papers_please\r\n(\r\n    ahem sysname\r\n);\r\n\r\nCREATE TABLE #human_events_xml_internal \r\n(\r\n    human_events_xml xml\r\n);  \r\n\r\nCREATE TABLE #wait\r\n(\r\n    wait_type sysname\r\n);\r\n\r\nCREATE TABLE #human_events_worker\r\n(\r\n    id integer NOT NULL PRIMARY KEY IDENTITY,\r\n    event_type sysname NOT NULL,\r\n    event_type_short sysname NOT NULL,\r\n    is_table_created bit NOT NULL DEFAULT 0,\r\n    is_view_created bit NOT NULL DEFAULT 0,\r\n    last_checked datetime NOT NULL DEFAULT '19000101',\r\n    last_updated datetime NOT NULL DEFAULT '19000101',\r\n    output_database sysname NOT NULL,\r\n    output_schema sysname NOT NULL,\r\n    output_table nvarchar(400) NOT NULL\r\n);\r\n\r\nCREATE UNIQUE NONCLUSTERED INDEX no_dupes \r\nON #human_events_worker \r\n    (output_table) \r\nWITH \r\n    (IGNORE_DUP_KEY = ON);\r\n\r\nCREATE TABLE #view_check \r\n(\r\n    id integer PRIMARY KEY IDENTITY, \r\n    view_name sysname NOT NULL, \r\n    view_definition varbinary(MAX) NOT NULL,\r\n    output_database sysname NOT NULL DEFAULT N'',\r\n    output_schema sysname NOT NULL DEFAULT N'',\r\n    output_table sysname NOT NULL DEFAULT N'',\r\n    view_converted AS CONVERT(nvarchar(MAX), view_definition), \r\n    view_converted_length AS DATALENGTH(CONVERT(nvarchar(MAX), view_definition))\r\n);\r\n\r\n\r\n/*\r\nI mean really stop it with the unsupported versions\r\n*/\r\nDECLARE \r\n    @v decimal(5,0) = \r\n        PARSENAME\r\n        (\r\n            CONVERT\r\n            (\r\n                nvarchar(128), \r\n                SERVERPROPERTY('ProductVersion')\r\n            ), \r\n            4 \r\n        ),\r\n    @mv integer = \r\n        PARSENAME\r\n        (\r\n            CONVERT\r\n            (\r\n                nvarchar(128), \r\n                SERVERPROPERTY('ProductVersion')\r\n            ), \r\n            2 \r\n        ),\r\n    @azure bit = \r\n        CASE \r\n            WHEN CONVERT\r\n                 (\r\n                     int, \r\n                     SERVERPROPERTY('EngineEdition')\r\n                 ) = 5\r\n            THEN 1\r\n            ELSE 0\r\n        END,\r\n    @drop_old_sql nvarchar(1000) = N'',\r\n    @waitfor nvarchar(20) = N'',\r\n    @session_name nvarchar(512) = N'',\r\n    @session_with nvarchar(MAX) = N'',\r\n    @session_sql nvarchar(MAX) = N'',\r\n    @start_sql nvarchar(MAX) = N'',\r\n    @stop_sql  nvarchar(MAX) = N'',\r\n    @drop_sql  nvarchar(MAX) = N'',\r\n    @session_filter nvarchar(MAX) = N'',\r\n    @session_filter_limited nvarchar(MAX) = N'',\r\n    @session_filter_query_plans nvarchar(MAX) = N'',\r\n    @session_filter_waits nvarchar(MAX) = N'',\r\n    @session_filter_recompile nvarchar(MAX)= N'',\r\n    @session_filter_statement_completed nvarchar(MAX) = N'',\r\n    @session_filter_blocking nvarchar(MAX) = N'',\r\n    @session_filter_parameterization nvarchar(MAX) = N'',\r\n    @query_duration_filter nvarchar(MAX) = N'',\r\n    @blocking_duration_ms_filter nvarchar(MAX) = N'',\r\n    @wait_type_filter nvarchar(MAX) = N'',\r\n    @wait_duration_filter nvarchar(MAX) = N'',\r\n    @client_app_name_filter nvarchar(MAX) = N'',\r\n    @client_hostname_filter nvarchar(MAX) = N'',\r\n    @database_name_filter nvarchar(MAX) = N'',\r\n    @session_id_filter nvarchar(MAX) = N'',\r\n    @username_filter nvarchar(MAX) = N'',\r\n    @object_name_filter nvarchar(MAX) = N'',\r\n    @requested_memory_mb_filter nvarchar(MAX) = N'',\r\n    @compile_events bit = 0,\r\n    @parameterization_events bit = 0,\r\n    @x xml,\r\n    @fully_formed_babby nvarchar(1000) = N'',\r\n    @s_out int,\r\n    @s_sql nvarchar(MAX) = N'',\r\n    @s_params nvarchar(MAX) = N'',\r\n    @object_id sysname = N'',\r\n    @requested_memory_kb nvarchar(11) = N'',\r\n    @the_sleeper_must_awaken nvarchar(MAX) = N'',\r\n    @min_id int,\r\n    @max_id int,\r\n    @event_type_check sysname,\r\n    @object_name_check nvarchar(1000) = N'',\r\n    @table_sql nvarchar(MAX) = N'',\r\n    @view_tracker bit,\r\n    @spe nvarchar(MAX) = N'.sys.sp_executesql ',\r\n    @view_sql nvarchar(MAX) = N'',\r\n    @view_database sysname = N'',\r\n    @date_filter datetime,\r\n    @Time time,\r\n    @delete_tracker int,\r\n    @the_deleter_must_awaken nvarchar(MAX) = N'',\r\n    @executer nvarchar(MAX),\r\n    @cleanup_sessions nvarchar(MAX) = N'',\r\n    @cleanup_tables nvarchar(MAX) = N'',\r\n    @drop_holder nvarchar(MAX) = N'',\r\n    @cleanup_views nvarchar(MAX) = N'',\r\n    @nc10 nvarchar(2) = NCHAR(10);\r\n\r\n/*check to make sure we're on a usable version*/\r\nIF \r\n( \r\n    @v < 11\r\n      OR (@v = 11 \r\n           AND @mv < 7001) \r\n)\r\n    BEGIN\r\n        RAISERROR(N'This darn thing doesn''t seem to work on versions older than 2012 SP4.', 11, 1) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\n\r\n/*one more check here for old versions. loiterers should arrested.*/\r\nIF NOT EXISTS\r\n(\r\n    SELECT\r\n        1/0\r\n    FROM sys.dm_xe_packages AS xp\r\n    JOIN sys.dm_xe_objects AS xo\r\n        ON xp.guid = xo.package_guid\r\n    WHERE (xo.capabilities IS NULL\r\n             OR xo.capabilities & 1 = 0)\r\n    AND   (xp.capabilities IS NULL\r\n             OR xp.capabilities & 1 = 0)\r\n    AND xo.object_type = N'action'\r\n    AND xo.name = N'query_hash_signed'\r\n)\r\n    BEGIN\r\n        RAISERROR(N'This server hasn''t been patched up to a supported version that has the query_hash_signed action.', 11, 1) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\n\r\n/*clean up any old/dormant sessions*/    \r\nIF @azure = 0\r\nBEGIN\r\n    INSERT \r\n        #drop_commands WITH (TABLOCK) \r\n    (\r\n        drop_command\r\n    )\r\n    SELECT \r\n        N'DROP EVENT SESSION ' + \r\n        ses.name + \r\n        N' ON SERVER;'\r\n    FROM sys.server_event_sessions AS ses\r\n    LEFT JOIN sys.dm_xe_sessions AS dxe\r\n        ON dxe.name = ses.name\r\n    WHERE ses.name LIKE N'HumanEvents%'\r\n    AND   ( dxe.create_time < DATEADD(MINUTE, -1, SYSDATETIME())\r\n    OR      dxe.create_time IS NULL ) \r\n    OPTION(RECOMPILE);\r\nEND;\r\n\r\nIF @azure = 1\r\nBEGIN\r\n    INSERT \r\n        #drop_commands WITH (TABLOCK) \r\n    (\r\n        drop_command\r\n    )\r\n    SELECT \r\n        N'DROP EVENT SESSION '  \r\n        + ses.name + \r\n        N' ON DATABASE;'\r\n    FROM sys.database_event_sessions AS ses\r\n    LEFT JOIN sys.dm_xe_database_sessions AS dxe\r\n        ON dxe.name = ses.name\r\n    WHERE ses.name LIKE N'HumanEvents%'\r\n    AND   ( dxe.create_time < DATEADD(MINUTE, -1, SYSDATETIME())\r\n    OR      dxe.create_time IS NULL ) \r\n    OPTION(RECOMPILE);\r\nEND;\r\n\r\nIF EXISTS\r\n(    \r\n    SELECT \r\n        1/0\r\n    FROM #drop_commands AS dc\r\n)\r\nBEGIN \r\n    RAISERROR(N'Found old sessions, dropping those.', 0, 1) WITH NOWAIT;\r\n    \r\n    DECLARE drop_cursor CURSOR \r\n        LOCAL STATIC FOR\r\n    \r\n    SELECT  \r\n        drop_command \r\n    FROM #drop_commands;\r\n    \r\n    OPEN drop_cursor;\r\n    FETCH NEXT FROM drop_cursor \r\n        INTO @drop_old_sql;\r\n    \r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN             \r\n        PRINT @drop_old_sql;\r\n        EXEC(@drop_old_sql);    \r\n        \r\n        FETCH NEXT \r\n        FROM drop_cursor \r\n        INTO @drop_old_sql;\r\n    END;\r\n    \r\n    CLOSE drop_cursor;\r\n    DEALLOCATE drop_cursor;\r\nEND;\r\n\r\nRAISERROR(N'Setting up some variables', 0, 1) WITH NOWAIT;\r\n\r\n/* Give sessions super unique names in case more than one person uses it at a time */\r\nIF @keep_alive = 0\r\nBEGIN\r\n    SET @session_name += \r\n            REPLACE\r\n            (\r\n                N'HumanEvents_' + \r\n                @event_type + \r\n                N'_' + \r\n                CONVERT\r\n                (\r\n                    nvarchar(36), \r\n                    NEWID()\r\n                ), \r\n                N'-', \r\n                N''\r\n            ); \r\nEND;\r\n\r\nIF @keep_alive = 1\r\nBEGIN\r\n    SET @session_name += \r\n            N'keeper_HumanEvents_'  + \r\n            @event_type + \r\n            CASE \r\n                WHEN @custom_name <> N'' \r\n                THEN N'_' + @custom_name \r\n                ELSE N'' \r\n            END;\r\nEND;\r\n\r\n\r\n/* set a lower max memory setting for azure */\r\nIF @azure = 1\r\nBEGIN\r\n    SELECT TOP (1) \r\n        @max_memory_kb = \r\n            CONVERT\r\n            (\r\n                bigint, \r\n                (max_memory * .10) * 1024\r\n            )\r\n    FROM sys.dm_user_db_resource_governance\r\n    WHERE UPPER(database_name) = UPPER(QUOTENAME(@database_name))\r\n    OR    @database_name = ''\r\n    ORDER BY max_memory DESC;\r\n\r\n    RAISERROR(N'Setting lower max memory for ringbuffer due to Azure, setting to %m kb',  0, 1, @max_memory_kb) WITH NOWAIT;\r\nEND;\r\n\r\n/* session create options */\r\nSET @session_with = N'    \r\nADD TARGET package0.ring_buffer\r\n        ( SET max_memory = ' + RTRIM(@max_memory_kb) + N' )\r\nWITH\r\n        (\r\n            MAX_MEMORY = ' + RTRIM(@max_memory_kb) + N'KB,\r\n            EVENT_RETENTION_MODE = ALLOW_SINGLE_EVENT_LOSS,\r\n            MAX_DISPATCH_LATENCY = 5 SECONDS,\r\n            MAX_EVENT_SIZE = 0KB,\r\n            MEMORY_PARTITION_MODE = PER_CPU,\r\n            TRACK_CAUSALITY = OFF,\r\n            STARTUP_STATE = OFF\r\n        );' + @nc10;\r\n\r\n/* azure can't create on server, just database */\r\nSET @session_sql = \r\n    N'\r\nCREATE EVENT SESSION ' + @session_name +\r\n    CASE \r\n        WHEN @azure = 0\r\n        THEN N'\r\n    ON SERVER '\r\n        ELSE N'\r\n    ON DATABASE '\r\n    END;\r\n\r\n/* STOP. DROP. SHUT'EM DOWN OPEN UP SHOP. */\r\nSET @start_sql = \r\n    N'ALTER EVENT SESSION ' + \r\n    @session_name + \r\n    N' ON ' + \r\n    CASE \r\n        WHEN @azure = 1 \r\n        THEN 'DATABASE' \r\n        ELSE 'SERVER' \r\n    END + \r\n    ' STATE = START;' + \r\n    @nc10;\r\n\r\nSET @stop_sql  = \r\n    N'ALTER EVENT SESSION ' + \r\n    @session_name + \r\n    N' ON ' + \r\n    CASE \r\n        WHEN @azure = 1 \r\n        THEN 'DATABASE' \r\n        ELSE 'SERVER' \r\n    END + \r\n    ' STATE = STOP;' + \r\n    @nc10;\r\n\r\nSET @drop_sql  = \r\n    N'DROP EVENT SESSION '  + \r\n    @session_name + \r\n    N' ON ' + \r\n    CASE \r\n        WHEN @azure = 1 \r\n        THEN 'DATABASE' \r\n        ELSE 'SERVER' \r\n    END + \r\n    ';' + \r\n    @nc10;\r\n\r\n\r\n/*Some sessions can use all general filters*/\r\nSET @session_filter = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n/*Others can't use all of them, like app and host name*/\r\nSET @session_filter_limited = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n/*query plans can filter on requested memory, too, along with the limited filters*/\r\nSET @session_filter_query_plans = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n/*only wait stats can filter on wait types, but can filter on everything else*/\r\nSET @session_filter_waits = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n/*only wait stats can filter on wait types, but can filter on everything else*/\r\nSET @session_filter_recompile = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n/*sql_statement_completed can do everything except object name*/\r\nSET @session_filter_statement_completed = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n/*for blocking because blah blah*/\r\nSET @session_filter_blocking = @nc10 + N'         sqlserver.is_system = 1 ' + @nc10;\r\n/*for parameterization because blah blah*/\r\nSET @session_filter_parameterization = @nc10 + N'            sqlserver.is_system = 0 ' + @nc10;\r\n\r\n\r\nRAISERROR(N'Checking for some event existence', 0, 1) WITH NOWAIT;\r\n/* Determines if we use the new event or the old event(s) to track compiles */\r\nIF EXISTS\r\n(\r\n    SELECT \r\n        1/0 \r\n    FROM sys.dm_xe_objects AS dxo \r\n    WHERE dxo.name = N'sql_statement_post_compile'\r\n)\r\nBEGIN \r\n    SET @compile_events = 1; \r\nEND;\r\n\r\n\r\n/* Or if we use this event at all! */\r\nIF EXISTS\r\n(\r\n    SELECT \r\n        1/0 \r\n    FROM sys.dm_xe_objects AS dxo \r\n    WHERE dxo.name = N'query_parameterization_data'\r\n)\r\nBEGIN \r\n    SET @parameterization_events = 1; \r\nEND;\r\n\r\n\r\n/* You know what I don't wanna deal with? NULLs. */\r\nRAISERROR(N'Nixing NULLs', 0, 1) WITH NOWAIT;\r\nSET @event_type            = ISNULL(@event_type, N'');\r\nSET @client_app_name       = ISNULL(@client_app_name, N'');\r\nSET @client_hostname       = ISNULL(@client_hostname, N'');\r\nSET @database_name         = ISNULL(@database_name, N'');\r\nSET @session_id            = ISNULL(@session_id, N'');\r\nSET @username              = ISNULL(@username, N'');\r\nSET @object_name           = ISNULL(@object_name, N'');\r\nSET @object_schema         = ISNULL(@object_schema, N'');\r\nSET @custom_name           = ISNULL(@custom_name, N'');\r\nSET @output_database_name  = ISNULL(@output_database_name, N'');\r\nSET @output_schema_name    = ISNULL(@output_schema_name, N'');\r\n\r\n/*I'm also very forgiving of some white space*/\r\nSET @database_name = RTRIM(LTRIM(@database_name));\r\n\r\n/*Assemble the full object name for easier wrangling*/\r\nSET @fully_formed_babby = \r\n        QUOTENAME(@database_name) + \r\n        N'.' + \r\n        QUOTENAME(@object_schema) + \r\n        N'.' + \r\n        QUOTENAME(@object_name);\r\n\r\n/*Some sanity checking*/\r\nRAISERROR(N'Sanity checking event types', 0, 1) WITH NOWAIT;\r\n/* You can only do this right now. */\r\nIF LOWER(@event_type) NOT IN \r\n        ( \r\n            N'waits',\r\n            N'blocking',\r\n            N'locking',\r\n            N'queries',\r\n            N'compiles',\r\n            N'recompiles',\r\n            N'wait',\r\n            N'block',\r\n            N'blocks',\r\n            N'lock',\r\n            N'locks',\r\n            N'query',\r\n            N'compile',\r\n            N'recompile',\r\n            N'compilation',\r\n            N'recompilation',\r\n            N'compilations',\r\n            N'recompilations' \r\n        )\r\nBEGIN\r\n    RAISERROR(N'You have chosen a value for @event_type... poorly. use @help = 1 to see valid arguments.', 11, 1) WITH NOWAIT;\r\n    RAISERROR(N'What on earth is %s?', 11, 1, @event_type) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n\r\nRAISERROR(N'Checking query duration filter', 0, 1) WITH NOWAIT;\r\n/* Set these durations to non-crazy numbers unless someone asks for @gimme_danger = 1\r\n   ignore compile and recompile because this is a filter on query compilation time 🙄 */\r\nIF \r\n( \r\n    LOWER(@event_type) LIKE N'%quer%' \r\n      AND @event_type NOT LIKE N'%comp%'\r\n      AND @gimme_danger = 0 \r\n)\r\n      AND \r\n(\r\n    @query_duration_ms < 500 \r\n      OR @query_duration_ms IS NULL \r\n)\r\nBEGIN\r\n    RAISERROR(N'You chose a really dangerous value for @query_duration', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'If you really want that, please set @gimme_danger = 1, and re-run', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'Setting @query_duration to 500', 0, 1) WITH NOWAIT;\r\n    SET @query_duration_ms = 500;\r\nEND;\r\n\r\n\r\nRAISERROR(N'Checking wait duration filter', 0, 1) WITH NOWAIT;\r\nIF \r\n( \r\n    LOWER(@event_type) LIKE N'%wait%' \r\n      AND @gimme_danger = 0 \r\n)\r\n      AND \r\n(   @wait_duration_ms < 10 \r\n      OR @wait_duration_ms IS NULL \r\n) \r\nBEGIN\r\n    RAISERROR(N'You chose a really dangerous value for @wait_duration_ms', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'If you really want that, please set @gimme_danger = 1, and re-run', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'Setting @wait_duration_ms to 10', 0, 1) WITH NOWAIT;\r\n    SET @wait_duration_ms = 10;\r\nEND;\r\n\r\n\r\nRAISERROR(N'Checking block duration filter', 0, 1) WITH NOWAIT;\r\nIF \r\n( \r\n    LOWER(@event_type) LIKE N'%lock%' \r\n      AND @gimme_danger = 0 \r\n)\r\n      AND \r\n(\r\n    @blocking_duration_ms < 500 \r\n      OR @blocking_duration_ms IS NULL \r\n) \r\nBEGIN\r\n    RAISERROR(N'You chose a really dangerous value for @blocking_duration_ms', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'If you really want that, please set @gimme_danger = 1, and re-run', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'Setting @blocking_duration_ms to 500', 0, 1) WITH NOWAIT;\r\n    SET @blocking_duration_ms = 500;\r\nEND;\r\n\r\n\r\nRAISERROR(N'Checking query sort order', 0, 1) WITH NOWAIT;\r\nIF @query_sort_order NOT IN \r\n( \r\n    N'cpu', \r\n    N'reads', \r\n    N'writes', \r\n    N'duration', \r\n    N'memory', \r\n    N'spills',    \r\n    N'avg cpu', \r\n    N'avg reads', \r\n    N'avg writes', \r\n    N'avg duration', \r\n    N'avg memory', \r\n    N'avg spills' \r\n)\r\nBEGIN\r\n   RAISERROR(N'That sort order (%s) you chose is so out of this world that i''m ignoring it', 0, 1, @query_sort_order) WITH NOWAIT;\r\n   SET @query_sort_order = N'cpu';\r\nEND;\r\n\r\n\r\nRAISERROR(N'Parsing any supplied waits', 0, 1) WITH NOWAIT;\r\nSET @wait_type = UPPER(@wait_type);\r\n/* This will hold the CSV list of wait types someone passes in */\r\n\r\nINSERT \r\n    #user_waits WITH(TABLOCK)\r\nSELECT \r\n    LTRIM\r\n    (\r\n        RTRIM\r\n        (\r\n            waits.wait_type\r\n        )\r\n    ) AS wait_type\r\nFROM\r\n(\r\n    SELECT \r\n        wait_type = \r\n            x.x.value('(./text())[1]', 'nvarchar(60)')\r\n    FROM \r\n    ( \r\n      SELECT \r\n          wait_type =  \r\n              CONVERT\r\n              (\r\n                  xml, \r\n                  N'<x>' + \r\n                  REPLACE\r\n                  (\r\n                      REPLACE\r\n                      (\r\n                          @wait_type, \r\n                          N',', \r\n                          N'</x><x>'\r\n                      ), \r\n                      N' ', \r\n                      N''\r\n                  ) + \r\n                  N'</x>'\r\n              ).query('.')\r\n    ) AS w \r\n    CROSS APPLY wait_type.nodes('x') AS x(x)\r\n) AS waits\r\nWHERE @wait_type <> N'ALL'\r\nOPTION(RECOMPILE);\r\n\r\n\r\n/*\r\nIf someone is passing in specific waits, let's make sure that\r\nthey're valid waits by checking them against what's available.\r\n*/\r\nIF @wait_type <> N'ALL'\r\nBEGIN\r\nRAISERROR(N'Checking wait validity', 0, 1) WITH NOWAIT;\r\n\r\n    /* There's no THREADPOOL in XE map values, it gets registered as SOS_WORKER */\r\n    SET @wait_type = \r\n            REPLACE\r\n            (\r\n                @wait_type, \r\n                N'THREADPOOL', \r\n                N'SOS_WORKER'\r\n            );\r\n\r\n    SELECT DISTINCT \r\n        invalid_waits = \r\n             uw.wait_type\r\n    INTO #invalid_waits\r\n    FROM #user_waits AS uw\r\n    WHERE NOT EXISTS\r\n          (\r\n              SELECT \r\n                  1/0\r\n              FROM sys.dm_xe_map_values AS dxmv\r\n              WHERE  dxmv.map_value COLLATE Latin1_General_BIN = uw.wait_type COLLATE Latin1_General_BIN\r\n              AND    dxmv.name = N'wait_types'\r\n          )\r\n    OPTION(RECOMPILE);\r\n    \r\n    /* If we find any invalid waits, let people know */\r\n    IF @@ROWCOUNT > 0    \r\n    BEGIN\r\n        SELECT \r\n            invalid_waits = \r\n                N'You have chosen some invalid wait types'\r\n        \r\n        UNION ALL\r\n        \r\n        SELECT \r\n            iw.invalid_waits\r\n        FROM #invalid_waits AS iw\r\n        OPTION(RECOMPILE);\r\n        \r\n        RAISERROR(N'Waidaminnithataintawait', 11, 1) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\n\r\nEND;\r\n\r\n\r\n/*\r\nIf someone is passing in non-blank values, let's try to limit our SQL injection exposure a little bit\r\n*/\r\nIF \r\n( \r\n    @client_app_name <> N''\r\n    OR @client_hostname <> N''\r\n    OR @database_name <> N''\r\n    OR @session_id <> N''\r\n    OR @username <> N''\r\n    OR @object_name <> N''\r\n    OR @object_schema NOT IN (N'dbo', N'') \r\n    OR @custom_name <> N''       \r\n    OR @output_database_name <> N''\r\n    OR @output_schema_name NOT IN (N'dbo', N'') \r\n)\r\nBEGIN\r\nRAISERROR(N'Checking for unsanitary inputs', 0, 1) WITH NOWAIT;\r\n    \r\n    INSERT \r\n        #papers_please WITH(TABLOCK)\r\n    (\r\n        ahem\r\n    )\r\n    SELECT \r\n        UPPER(pp.ahem)\r\n    FROM \r\n    (\r\n        VALUES\r\n            (@client_app_name),\r\n            (@client_hostname),\r\n            (@database_name),\r\n            (@session_id),\r\n            (@username),\r\n            (@object_name),\r\n            (@object_schema),\r\n            (@custom_name),\r\n            (@output_database_name),\r\n            (@output_schema_name)\r\n    ) AS pp (ahem)\r\n    WHERE pp.ahem NOT IN (N'', N'dbo')\r\n    OPTION(RECOMPILE);\r\n\r\n    IF EXISTS\r\n    (\r\n        SELECT \r\n            1/0\r\n        FROM #papers_please AS pp\r\n        WHERE pp.ahem LIKE N'%SELECT%'\r\n        OR    pp.ahem LIKE N'%INSERT%'\r\n        OR    pp.ahem LIKE N'%UPDATE%'\r\n        OR    pp.ahem LIKE N'%DELETE%'\r\n        OR    pp.ahem LIKE N'%DROP%'\r\n        OR    pp.ahem LIKE N'%EXEC%'\r\n        OR    pp.ahem LIKE N'%BACKUP%'\r\n        OR    pp.ahem LIKE N'%RESTORE%'\r\n        OR    pp.ahem LIKE N'%ALTER%'\r\n        OR    pp.ahem LIKE N'%CREATE%'\r\n        OR    pp.ahem LIKE N'%SHUTDOWN%'\r\n        OR    pp.ahem LIKE N'%DBCC%'\r\n        OR    pp.ahem LIKE N'%CONFIGURE%'\r\n        OR    pp.ahem LIKE N'%XP[_]CMDSHELL%'\r\n    )\r\n    BEGIN\r\n        RAISERROR(N'Say... you wouldn''t happen to be trying some funny business, would you?', 11, 1) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\n\r\nEND;\r\n\r\n\r\n/* I just don't want anyone to be disappointed */\r\nRAISERROR(N'Avoiding disappointment', 0, 1) WITH NOWAIT;\r\nIF \r\n( \r\n    @wait_type <> N'' \r\n    AND @wait_type <> N'ALL' \r\n    AND LOWER(@event_type) NOT LIKE N'%wait%' \r\n)\r\nBEGIN\r\n    RAISERROR(N'You can''t filter on wait stats unless you use the wait stats event.', 11, 1) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n\r\n/* This is probably important, huh? */\r\nRAISERROR(N'Are we trying to filter for a blocking session?', 0, 1) WITH NOWAIT;\r\n\r\n/* blocking events need a database name to resolve objects */\r\nIF \r\n( \r\n    LOWER(@event_type) LIKE N'%lock%' \r\n    AND DB_ID(@database_name) IS NULL \r\n    AND @object_name <> N'' \r\n)\r\nBEGIN\r\n    RAISERROR(N'The blocking event can only filter on an object_id, and we need a valid @database_name to resolve it correctly.', 11, 1) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n/* but could we resolve the object name? */\r\nIF \r\n( \r\n    LOWER(@event_type) LIKE N'%lock%' \r\n    AND @object_name <> N'' \r\n    AND OBJECT_ID(@fully_formed_babby) IS NULL \r\n)\r\nBEGIN\r\n    RAISERROR(N'We couldn''t find the object you''re trying to find: %s', 11, 1, @fully_formed_babby) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n/* no blocked process report, no love */\r\nRAISERROR(N'Validating if the Blocked Process Report is on, if the session is for blocking', 0, 1) WITH NOWAIT;\r\nIF @event_type LIKE N'%lock%'\r\nAND  EXISTS\r\n(\r\n    SELECT \r\n        1/0\r\n    FROM sys.configurations AS c\r\n    WHERE c.name = N'blocked process threshold (s)'\r\n    AND CONVERT(int, c.value_in_use) = 0\r\n)\r\nBEGIN\r\n        RAISERROR(N'You need to set up the blocked process report in order to use this:\r\n    EXEC sys.sp_configure ''show advanced options'', 1;\r\n    RECONFIGURE\r\n    EXEC sys.sp_configure ''blocked process threshold'', 5; /* Seconds of blocking before a report is generated */\r\n    RECONFIGURE\r\n    GO', 1, 0) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n/* validatabase name */\r\nRAISERROR(N'If there''s a database filter, is the name valid?', 0, 1) WITH NOWAIT;\r\nIF @database_name <> N''\r\nBEGIN\r\n    IF DB_ID(@database_name) IS NULL\r\n    BEGIN\r\n        RAISERROR(N'It looks like you''re looking for a database that doesn''t wanna be looked for (%s); check that spelling!', 11, 1, @database_name) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\nEND;\r\n\r\n\r\n/* session id has be be \"sampled\" or a number. */\r\nRAISERROR(N'If there''s a session id filter, is it valid?', 0, 1) WITH NOWAIT;\r\nIF\r\n(\r\n    LOWER(@session_id) NOT LIKE N'%sample%' \r\n    AND @session_id LIKE '%[^0-9]%' \r\n    AND LOWER(@session_id) <> N''\r\n)\r\nBEGIN\r\n   RAISERROR(N'That @session_id doesn''t look proper (%s). double check it for me.', 11, 1, @session_id) WITH NOWAIT;\r\n   RETURN;\r\nEND;\r\n\r\n\r\n/* some numbers won't be effective as sample divisors */\r\nRAISERROR(N'No dividing by zero', 0, 1) WITH NOWAIT;\r\nIF \r\n(\r\n    @sample_divisor < 2 \r\n    AND LOWER(@session_id) LIKE N'%sample%'\r\n)\r\nBEGIN\r\n    RAISERROR(N'@sample_divisor is used to divide @session_id when taking a sample of a workload.', 11, 1) WITH NOWAIT;\r\n    RAISERROR(N'we can''t really divide by zero, and dividing by 1 would be useless.', 11, 1) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n\r\n/*\r\nWe need to do some seconds math here, because WAITFOR is very stupid\r\n*/\r\nRAISERROR(N'Wait For It! Wait For it!', 0, 1) WITH NOWAIT;\r\nIF @seconds_sample > 1\r\nBEGIN\r\n    /* I really don't want this running for more than 10 minutes right now. */\r\n    IF \r\n    ( \r\n        @seconds_sample > 600 \r\n        AND @gimme_danger = 0 \r\n    )\r\n    BEGIN\r\n        RAISERROR(N'Yeah nah not more than 10 minutes', 10, 1) WITH NOWAIT;\r\n        RAISERROR(N'(unless you set @gimme_danger = 1)', 10, 1) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\n    \r\n    SELECT \r\n        @waitfor = \r\n            CONVERT\r\n            (\r\n                nvarchar(20), \r\n                DATEADD\r\n                (\r\n                    SECOND, \r\n                    @seconds_sample, \r\n                    0\r\n                 ), \r\n                 114\r\n            );\r\nEND;\r\n\r\n/* CH-CH-CH-CHECK-IT-OUT */\r\n\r\n/* check for existing session with the same name */\r\nRAISERROR(N'Make sure the session doesn''t exist already', 0, 1) WITH NOWAIT;\r\n\r\nIF @azure = 0\r\nBEGIN\r\n    IF EXISTS\r\n    (\r\n        SELECT \r\n            1/0\r\n        FROM sys.server_event_sessions AS ses\r\n        LEFT JOIN sys.dm_xe_sessions AS dxs \r\n            ON dxs.name = ses.name\r\n        WHERE ses.name = @session_name\r\n    )\r\n    BEGIN\r\n        RAISERROR('A session with the name %s already exists. dropping.', 0, 1, @session_name) WITH NOWAIT;\r\n        \r\n        EXEC sys.sp_executesql \r\n            @drop_sql;\r\n    END;\r\nEND;\r\nELSE\r\nBEGIN\r\n    IF EXISTS\r\n    (\r\n        SELECT \r\n            1/0\r\n        FROM sys.database_event_sessions AS ses\r\n        LEFT JOIN sys.dm_xe_database_sessions AS dxs \r\n            ON dxs.name = ses.name\r\n        WHERE ses.name = @session_name\r\n    )\r\n    BEGIN\r\n        RAISERROR('A session with the name %s already exists. dropping.', 0, 1, @session_name) WITH NOWAIT;\r\n        \r\n        EXEC sys.sp_executesql \r\n            @drop_sql;\r\n    END;\r\nEND;\r\n\r\n/* check that the output database exists */\r\nRAISERROR(N'Does the output database exist?', 0, 1) WITH NOWAIT;\r\nIF @output_database_name <> N''\r\nBEGIN\r\n    IF DB_ID(@output_database_name) IS NULL\r\n    BEGIN\r\n        RAISERROR(N'It looks like you''re looking for a database (%s) that doesn''t wanna be looked for; check that spelling!', 11, 1, @output_database_name) WITH NOWAIT;\r\n        RETURN;\r\n    END;\r\nEND;\r\n\r\n\r\n/* check that the output schema exists */\r\nRAISERROR(N'Does the output schema exist?', 0, 1) WITH NOWAIT;\r\nIF @output_schema_name NOT IN (N'dbo', N'')\r\nBEGIN\r\n    SELECT \r\n        @s_sql = N'\r\n    SELECT \r\n        @is_out = \r\n            COUNT_BIG(*) \r\n    FROM ' + QUOTENAME(@output_database_name) + N'.sys.schemas AS s\r\n    WHERE s.name = ' + QUOTENAME(@output_schema_name, '''') + N' \r\n    OPTION (RECOMPILE);',\r\n        @s_params  = \r\n            N'@is_out integer OUTPUT';\r\n    \r\n    EXEC sys.sp_executesql \r\n        @s_sql, \r\n        @s_params, \r\n        @is_out = @s_out OUTPUT;\r\n    \r\n    IF @s_out = 0\r\n    BEGIN\r\n        RAISERROR(N'It looks like the schema %s doesn''t exist in the database %s', 11, 1, @output_schema_name, @output_database_name);\r\n        RETURN;\r\n    END;\r\nEND;\r\n \r\n\r\n/* we need an output schema and database */\r\nRAISERROR(N'Is output database OR schema filled in?', 0, 1) WITH NOWAIT;\r\nIF \r\n(\r\n    LEN(@output_database_name + @output_schema_name) > 0\r\n    AND @output_schema_name <> N'dbo'\r\n    AND ( @output_database_name  = N'' \r\n    OR      @output_schema_name = N'' )\r\n)\r\nBEGIN\r\n    IF @output_database_name = N''\r\n        BEGIN\r\n            RAISERROR(N'@output_database_name can''t blank when outputting to tables or cleaning up', 11, 1) WITH NOWAIT;\r\n            RETURN;\r\n        END;\r\n    \r\n    IF @output_schema_name = N''\r\n        BEGIN\r\n            RAISERROR(N'@output_schema_name can''t blank when outputting to tables or cleaning up', 11, 1) WITH NOWAIT;\r\n            RETURN;\r\n        END;\r\nEND;\r\n\r\n\r\n/* no goofballing in custom names */\r\nRAISERROR(N'Is custom name something stupid?', 0, 1) WITH NOWAIT;\r\nIF \r\n( \r\n    PATINDEX(N'%[^a-zA-Z0-9]%', @custom_name) > 0 \r\n      OR @custom_name LIKE N'[0-9]%' \r\n)\r\nBEGIN\r\n    RAISERROR(N'Dunno if I like the looks of @custom_name: %s', 11, 1, @custom_name) WITH NOWAIT;\r\n    RAISERROR(N'You can''t use special characters, or leading numbers.', 11, 1, @custom_name) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n\r\n/* I'M LOOKING AT YOU */\r\nRAISERROR(N'Someone is going to try it.', 0, 1) WITH NOWAIT;\r\nIF @delete_retention_days < 0\r\nBEGIN\r\n    SET @delete_retention_days *= -1;\r\n    RAISERROR(N'Stay positive', 0, 1) WITH NOWAIT;\r\nEND;\r\n\r\n\r\n/*\r\nIf we're writing to a table, we don't want to do anything else\r\nOr anything else after this, really\r\nWe want the session to get set up\r\n*/\r\nRAISERROR(N'Do we skip to the GOTO and log tables?', 0, 1) WITH NOWAIT;\r\nIF \r\n( \r\n    @output_database_name <> N''\r\n    AND @output_schema_name <> N''\r\n    AND @cleanup = 0 \r\n)\r\nBEGIN\r\n    RAISERROR(N'Skipping all the other stuff and going to data logging', 0, 1) WITH NOWAIT;    \r\n        \r\n    GOTO output_results;\r\n    RETURN;\r\nEND;\r\n\r\n\r\n/* just finishing up the second coat now */\r\nRAISERROR(N'Do we skip to the GOTO and cleanup?', 0, 1) WITH NOWAIT;\r\nIF \r\n( \r\n    @output_database_name <> N''\r\n    AND @output_schema_name <> N''\r\n    AND @cleanup = 1 \r\n)\r\nBEGIN\r\n    RAISERROR(N'Skipping all the other stuff and going to cleanup', 0, 1) WITH NOWAIT;       \r\n    \r\n    GOTO cleanup;\r\n    RETURN;\r\nEND;\r\n\r\n\r\n/* Start setting up individual filters */\r\nRAISERROR(N'Setting up individual filters', 0, 1) WITH NOWAIT;\r\nIF @query_duration_ms > 0\r\nBEGIN\r\n    IF LOWER(@event_type) NOT LIKE N'%comp%' /* compile and recompile durations are tiny */\r\n    BEGIN\r\n        SET @query_duration_filter += N'     AND duration >= ' + CONVERT(nvarchar(20), (@query_duration_ms * 1000)) + @nc10;\r\n    END;\r\nEND;\r\n\r\nIF @blocking_duration_ms > 0\r\nBEGIN\r\n    SET @blocking_duration_ms_filter += N'     AND duration >= ' + CONVERT(nvarchar(20), (@blocking_duration_ms * 1000)) + @nc10;\r\nEND;\r\n\r\nIF @wait_duration_ms > 0\r\nBEGIN\r\n    SET @wait_duration_filter += N'     AND duration >= ' + CONVERT(nvarchar(20), (@wait_duration_ms)) + @nc10;\r\nEND;\r\n\r\nIF @client_app_name <> N''\r\nBEGIN\r\n    SET @client_app_name_filter += N'     AND sqlserver.client_app_name = N' + QUOTENAME(@client_app_name, '''') + @nc10;\r\nEND;\r\n\r\nIF @client_hostname <> N''\r\nBEGIN\r\n    SET @client_hostname_filter += N'     AND sqlserver.client_hostname = N' + QUOTENAME(@client_hostname, '''') + @nc10;\r\nEND;\r\n\r\nIF @database_name <> N''\r\nBEGIN\r\n    IF LOWER(@event_type) NOT LIKE N'%lock%'\r\n    BEGIN\r\n        SET @database_name_filter += N'     AND sqlserver.database_name = N' + QUOTENAME(@database_name, '''') + @nc10;\r\n    END;\r\n    IF LOWER(@event_type) LIKE N'%lock%'\r\n    BEGIN\r\n        SET @database_name_filter += N'     AND database_name = N' + QUOTENAME(@database_name, '''') + @nc10;\r\n    END;\r\nEND;\r\n\r\nIF @session_id <> N''\r\nBEGIN\r\n    IF LOWER(@session_id) NOT LIKE N'%sample%'\r\n        BEGIN\r\n            SET @session_id_filter += N'     AND sqlserver.session_id = ' + CONVERT(nvarchar(11), @session_id) + @nc10;\r\n        END;\r\n    IF LOWER(@session_id) LIKE N'%sample%'\r\n        BEGIN\r\n            SET @session_id_filter += N'     AND package0.divides_by_uint64(sqlserver.session_id, ' + CONVERT(nvarchar(11), @sample_divisor) + N') ' + @nc10;\r\n        END;\r\nEND;\r\n\r\nIF @username <> N''\r\nBEGIN\r\n    SET @username_filter += N'     AND sqlserver.username = N' + QUOTENAME(@username, '''') + @nc10;\r\nEND;\r\n\r\nIF @object_name <> N''\r\nBEGIN\r\n    IF @event_type LIKE N'%lock%'\r\n    BEGIN\r\n        SET @object_id = OBJECT_ID(@fully_formed_babby);\r\n        SET @object_name_filter += N'     AND object_id = ' + @object_id + @nc10;\r\n    END;\r\n    IF @event_type NOT LIKE N'%lock%'\r\n    BEGIN\r\n        SET @object_name_filter += N'     AND object_name = N' + QUOTENAME(@object_name, '''') + @nc10;\r\n    END;\r\nEND;\r\n\r\nIF @requested_memory_mb > 0\r\nBEGIN\r\n    SET @requested_memory_kb = @requested_memory_mb / 1024.;\r\n    SET @requested_memory_mb_filter += N'     AND requested_memory_kb >= ' + @requested_memory_kb + @nc10;\r\nEND;\r\n\r\n\r\n/* At this point we'll either put my list of interesting waits in a temp table, \r\n   or a list of user defined waits */\r\nIF LOWER(@event_type) LIKE N'%wait%'\r\nBEGIN    \r\n    \r\n    INSERT \r\n        #wait\r\n    (\r\n        wait_type \r\n    )\r\n    SELECT \r\n        x.wait_type\r\n    FROM \r\n    (\r\n        VALUES \r\n            (N'LCK_M_SCH_S'), \r\n            (N'LCK_M_SCH_M'), \r\n            (N'LCK_M_S'),\r\n            (N'LCK_M_U'), \r\n            (N'LCK_M_X'), \r\n            (N'LCK_M_IS'),\r\n            (N'LCK_M_IU'), \r\n            (N'LCK_M_IX'), \r\n            (N'LCK_M_SIU'),\r\n            (N'LCK_M_SIX'), \r\n            (N'LCK_M_UIX'), \r\n            (N'LCK_M_BU'),\r\n            (N'LCK_M_RS_S'), \r\n            (N'LCK_M_RS_U'), \r\n            (N'LCK_M_RIn_NL'),\r\n            (N'LCK_M_RIn_S'), \r\n            (N'LCK_M_RIn_U'),\r\n            (N'LCK_M_RIn_X'), \r\n            (N'LCK_M_RX_S'), \r\n            (N'LCK_M_RX_U'),\r\n            (N'LCK_M_RX_X'), \r\n            (N'LATCH_NL'), \r\n            (N'LATCH_KP'),\r\n            (N'LATCH_SH'), \r\n            (N'LATCH_UP'), \r\n            (N'LATCH_EX'),\r\n            (N'LATCH_DT'), \r\n            (N'PAGELATCH_NL'), \r\n            (N'PAGELATCH_KP'),\r\n            (N'PAGELATCH_SH'), \r\n            (N'PAGELATCH_UP'),\r\n            (N'PAGELATCH_EX'), \r\n            (N'PAGELATCH_DT'),\r\n            (N'PAGEIOLATCH_NL'), \r\n            (N'PAGEIOLATCH_KP'),\r\n            (N'PAGEIOLATCH_SH'), \r\n            (N'PAGEIOLATCH_UP'),\r\n            (N'PAGEIOLATCH_EX'), \r\n            (N'PAGEIOLATCH_DT'),\r\n            (N'IO_COMPLETION'), \r\n            (N'ASYNC_IO_COMPLETION'),\r\n            (N'NETWORK_IO'),\r\n            (N'WRITE_COMPLETION'), \r\n            (N'RESOURCE_SEMAPHORE'),\r\n            (N'RESOURCE_SEMAPHORE_QUERY_COMPILE'),\r\n            (N'RESOURCE_SEMAPHORE_MUTEX'),\r\n            (N'CMEMTHREAD'), \r\n            (N'CXCONSUMER'),\r\n            (N'CXPACKET'),\r\n            (N'EXECSYNC'),\r\n            (N'SOS_WORKER'),\r\n            (N'SOS_SCHEDULER_YIELD'), \r\n            (N'LOGBUFFER'),\r\n            (N'WRITELOG') \r\n    ) AS x (wait_type)\r\n    WHERE @wait_type = N'all'\r\n        \r\n    UNION ALL\r\n    \r\n    SELECT \r\n        uw.wait_type\r\n    FROM #user_waits AS uw\r\n    WHERE @wait_type <> N'all'\r\n    OPTION(RECOMPILE);\r\n    \r\n    /* This section creates a dynamic WHERE clause based on wait types\r\n       The problem is that wait type IDs change frequently, which sucks. */\r\n    WITH maps AS \r\n    ( \r\n        SELECT   \r\n            dxmv.map_key,\r\n            dxmv.map_value,\r\n            dxmv.map_key\r\n                - ROW_NUMBER() \r\n                      OVER \r\n                      ( \r\n                          ORDER BY \r\n                              dxmv.map_key \r\n                      ) AS rn\r\n        FROM sys.dm_xe_map_values AS dxmv\r\n        WHERE dxmv.name = N'wait_types'\r\n        AND   dxmv.map_value IN \r\n              ( \r\n                  SELECT \r\n                      w.wait_type \r\n                  FROM #wait AS w \r\n              )\r\n    ),\r\n         grps AS \r\n    ( \r\n        SELECT   \r\n            minkey = \r\n                MIN(maps.map_key),\r\n            maxkey = \r\n                MAX(maps.map_key)\r\n            FROM maps\r\n            GROUP BY maps.rn \r\n    )\r\n    SELECT \r\n        @wait_type_filter += \r\n            SUBSTRING\r\n            (\r\n                ( \r\n                    SELECT \r\n                        N'      AND  ((' +\r\n                        STUFF\r\n                        (\r\n                            ( \r\n                                SELECT \r\n                                    N'         OR ' + \r\n                                    CASE \r\n                                        WHEN grps.minkey < grps.maxkey\r\n                                        THEN + \r\n                                        N'(wait_type >= ' + \r\n                                        CONVERT\r\n                                        (\r\n                                            nvarchar(11), \r\n                                            grps.minkey\r\n                                        ) + \r\n                                        N' AND wait_type <= ' + \r\n                                        CONVERT\r\n                                        (\r\n                                            nvarchar(11), \r\n                                            grps.maxkey\r\n                                        ) + \r\n                                        N')' + \r\n                                        @nc10\r\n                                        ELSE N'(wait_type = ' + \r\n                                        CONVERT\r\n                                        (\r\n                                            nvarchar(11), \r\n                                            grps.minkey\r\n                                        ) + \r\n                                        N')' + \r\n                                        @nc10\r\n                                    END\r\n                                FROM grps FOR XML PATH(''), TYPE\r\n                            ).value('./text()[1]', 'nvarchar(max)')\r\n                            , \r\n                            1, \r\n                            13, \r\n                            N''\r\n                        ) \r\n                ), \r\n                0, \r\n                8000\r\n            ) + \r\n            N')';\r\nEND; \r\n\r\n/* End individual filters */\r\n\r\n/* This section sets event-dependent filters */\r\n\r\nRAISERROR(N'Combining session filters', 0, 1) WITH NOWAIT;\r\n/* For full filter-able sessions */\r\nSET @session_filter += \r\n    ( \r\n        ISNULL(@query_duration_filter, N'') +\r\n        ISNULL(@client_app_name_filter, N'') +\r\n        ISNULL(@client_hostname_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') +\r\n        ISNULL(@object_name_filter, N'') \r\n    );\r\n\r\n/* For waits specifically, because they also need to filter on wait type and wait duration */\r\nSET @session_filter_waits += \r\n    ( \r\n        ISNULL(@wait_duration_filter, N'') +\r\n        ISNULL(@wait_type_filter, N'') +\r\n        ISNULL(@client_app_name_filter, N'') +\r\n        ISNULL(@client_hostname_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') +\r\n        ISNULL(@object_name_filter, N'') \r\n    );\r\n\r\n/* For sessions that can't filter on client app or host name */\r\nSET @session_filter_limited += \r\n    ( \r\n        ISNULL(@query_duration_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') +\r\n        ISNULL(@object_name_filter, N'') \r\n    );\r\n\r\n/* For query plans, which can also filter on memory required */\r\nSET @session_filter_query_plans += \r\n    ( \r\n        ISNULL(@query_duration_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') +\r\n        ISNULL(@object_name_filter, N'') \r\n    );\r\n\r\n/* Recompile can have almost everything except... duration */\r\nSET @session_filter_recompile += \r\n    ( \r\n        ISNULL(@client_app_name_filter, N'') +\r\n        ISNULL(@client_hostname_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@object_name_filter, N'') +\r\n        ISNULL(@username_filter, N'')  \r\n    );\r\n\r\n/* Apparently statement completed can't filter on an object name so that's fun */\r\nSET @session_filter_statement_completed += \r\n    ( \r\n        ISNULL(@query_duration_filter, N'') +\r\n        ISNULL(@client_app_name_filter, N'') +\r\n        ISNULL(@client_hostname_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') \r\n    );\r\n\r\n/* Blocking woighoiughuohaeripugbapiouergb */\r\nSET @session_filter_blocking += \r\n    ( \r\n        ISNULL(@blocking_duration_ms_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') +\r\n        ISNULL(@object_name_filter, N'') +\r\n        ISNULL(@requested_memory_mb_filter, N'') \r\n    );\r\n\r\n/* The parameterization event is pretty limited in weird ways */\r\nSET @session_filter_parameterization += \r\n    ( \r\n        ISNULL(@client_app_name_filter, N'') +\r\n        ISNULL(@client_hostname_filter, N'') +\r\n        ISNULL(@database_name_filter, N'') +\r\n        ISNULL(@session_id_filter, N'') +\r\n        ISNULL(@username_filter, N'') \r\n    );\r\n\r\n\r\n/* This section sets up the event session definition */\r\nRAISERROR(N'Setting up the event session', 0, 1) WITH NOWAIT;\r\nSET @session_sql += \r\n        CASE WHEN LOWER(@event_type) LIKE N'%lock%'\r\n             THEN N' \r\n      ADD EVENT sqlserver.blocked_process_report \r\n        (WHERE ( ' + @session_filter_blocking + N' ))'\r\n             WHEN LOWER(@event_type) LIKE N'%quer%'\r\n             THEN N' \r\n      ADD EVENT sqlserver.module_end \r\n        (SET collect_statement = 1\r\n         ACTION (sqlserver.database_name, sqlserver.sql_text, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed)\r\n         WHERE ( ' + @session_filter + N' )),\r\n      ADD EVENT sqlserver.rpc_completed \r\n        (SET collect_statement = 1\r\n         ACTION(sqlserver.database_name, sqlserver.sql_text, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed)\r\n         WHERE ( ' + @session_filter + N' )),\r\n      ADD EVENT sqlserver.sp_statement_completed \r\n        (SET collect_object_name = 1, collect_statement = 1\r\n         ACTION(sqlserver.database_name, sqlserver.sql_text, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed) \r\n         WHERE ( ' + @session_filter + N' )),\r\n      ADD EVENT sqlserver.sql_statement_completed \r\n        (SET collect_statement = 1\r\n         ACTION(sqlserver.database_name, sqlserver.sql_text, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed)\r\n         WHERE ( ' + @session_filter_statement_completed + N' )),\r\n      ADD EVENT sqlserver.query_post_execution_showplan\r\n        (\r\n         ACTION(sqlserver.database_name, sqlserver.sql_text, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed)\r\n         WHERE ( ' + @session_filter_query_plans + N' ))'\r\n             WHEN LOWER(@event_type) LIKE N'%wait%' \r\n                    AND @v > 11\r\n             THEN N' \r\n      ADD EVENT sqlos.wait_completed\r\n        (SET collect_wait_resource = 1\r\n         ACTION (sqlserver.database_name, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed)\r\n         WHERE ( ' + @session_filter_waits + N' ))'\r\n             WHEN LOWER(@event_type) LIKE N'%wait%' \r\n                    AND @v = 11\r\n             THEN N' \r\n      ADD EVENT sqlos.wait_info\r\n        (\r\n         ACTION (sqlserver.database_name, sqlserver.plan_handle, sqlserver.query_hash_signed, sqlserver.query_plan_hash_signed)\r\n         WHERE ( ' + @session_filter_waits + N' ))'\r\n             WHEN LOWER(@event_type) LIKE N'%recomp%'\r\n             THEN CASE WHEN @compile_events = 1\r\n                       THEN N' \r\n      ADD EVENT sqlserver.sql_statement_post_compile \r\n        (SET collect_object_name = 1, collect_statement = 1\r\n         ACTION(sqlserver.database_name)\r\n         WHERE ( ' + @session_filter + N' ))'\r\n                       ELSE N' \r\n      ADD EVENT sqlserver.sql_statement_recompile \r\n        (SET collect_object_name = 1, collect_statement = 1\r\n         ACTION(sqlserver.database_name)\r\n         WHERE ( ' + @session_filter_recompile + N' ))'\r\n                 END\r\n             WHEN (LOWER(@event_type) LIKE N'%comp%' \r\n                     AND LOWER(@event_type) NOT LIKE N'%re%')\r\n             THEN CASE WHEN @compile_events = 1\r\n                       THEN N' \r\n      ADD EVENT sqlserver.sql_statement_post_compile \r\n        (SET collect_object_name = 1, collect_statement = 1\r\n         ACTION(sqlserver.database_name)\r\n         WHERE ( ' + @session_filter + N' ))'\r\n                       ELSE N'\r\n      ADD EVENT sqlserver.uncached_sql_batch_statistics\r\n        (\r\n         ACTION(sqlserver.database_name)\r\n         WHERE ( ' + @session_filter_recompile + N' )),             \r\n      ADD EVENT sqlserver.sql_statement_recompile \r\n        (SET collect_object_name = 1, collect_statement = 1\r\n         ACTION(sqlserver.database_name)\r\n         WHERE ( ' + @session_filter_recompile + N' ))'\r\n                  END\r\n                + CASE WHEN @parameterization_events = 1\r\n                       THEN N',\r\n      ADD EVENT sqlserver.query_parameterization_data\r\n        (\r\n         ACTION (sqlserver.database_name, sqlserver.plan_handle, sqlserver.sql_text)\r\n         WHERE ( ' + @session_filter_parameterization + N' ))'\r\n                       ELSE N''\r\n                  END \r\n            ELSE N'i have no idea what i''m doing.'\r\n        END;\r\n/* End event session definition */\r\n  \r\n\r\n/* This creates the event session */\r\nSET @session_sql += \r\n        @session_with;\r\n\r\nIF @debug = 1 BEGIN RAISERROR(@session_sql, 0, 1) WITH NOWAIT; END;\r\nEXEC (@session_sql);\r\n\r\n/* This starts the event session */\r\nIF @debug = 1 BEGIN RAISERROR(@start_sql, 0, 1) WITH NOWAIT; END;\r\nEXEC (@start_sql);\r\n\r\n/* bail out here if we want to keep the session */\r\nIF @keep_alive = 1\r\nBEGIN\r\n    RAISERROR(N'Session %s created, exiting.', 0, 1, @session_name) WITH NOWAIT;\r\n    RAISERROR(N'To collect data from it, run this proc from an agent job with an output database and schema name', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'Alternately, you can watch live data stream in by accessing the GUI', 0, 1) WITH NOWAIT;\r\n    RAISERROR(N'Just don''t forget to stop it when you''re done with it!', 0, 1) WITH NOWAIT;\r\n    RETURN;\r\nEND;\r\n\r\n\r\n/* NOW WE WAIT, MR. BOND */\r\nWAITFOR DELAY @waitfor;\r\n\r\n\r\n/* Dump whatever we got into a temp table */\r\nIF @azure = 0\r\nBEGIN\r\n    SELECT \r\n        @x = \r\n            CONVERT(xml, t.target_data)\r\n    FROM sys.dm_xe_session_targets AS t\r\n    JOIN sys.dm_xe_sessions AS s\r\n        ON s.address = t.event_session_address\r\n    WHERE s.name = @session_name\r\n    AND   t.target_name = N'ring_buffer'\r\n    OPTION (RECOMPILE);\r\nEND;\r\nELSE\r\nBEGIN\r\n    SELECT \r\n        @x = \r\n            CONVERT(xml, t.target_data)\r\n    FROM sys.dm_xe_database_session_targets AS t\r\n    JOIN sys.dm_xe_database_sessions AS s\r\n        ON s.address = t.event_session_address\r\n    WHERE s.name = @session_name\r\n    AND   t.target_name = N'ring_buffer'\r\n    OPTION (RECOMPILE);\r\nEND;\r\n\r\n\r\nSELECT \r\n    human_events_xml = \r\n        e.x.query('.')\r\nINTO   #human_events_xml\r\nFROM   @x.nodes('/RingBufferTarget/event') AS e(x)\r\nOPTION (RECOMPILE);\r\n\r\n\r\nIF @debug = 1\r\nBEGIN\r\n    SELECT N'#human_events_xml' AS table_name, * FROM #human_events_xml AS hex;\r\nEND;\r\n\r\n\r\n/*\r\nThis is where magic will happen\r\n*/\r\nIF LOWER(@event_type) LIKE N'%quer%'\r\nBEGIN;\r\n         WITH queries AS \r\n         (\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,\r\n                c.value('@name', 'nvarchar(256)') AS event_type,\r\n                c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                c.value('(data[@name=\"object_name\"]/value)[1]', 'nvarchar(256)') AS object_name,\r\n                c.value('(action[@name=\"sql_text\"]/value)[1]', 'nvarchar(MAX)') AS sql_text,\r\n                c.value('(data[@name=\"statement\"]/value)[1]', 'nvarchar(MAX)') AS statement,\r\n                c.query('(data[@name=\"showplan_xml\"]/value/*)[1]') AS showplan_xml,\r\n                c.value('(data[@name=\"cpu_time\"]/value)[1]', 'bigint') / 1000. AS cpu_ms,\r\n               (c.value('(data[@name=\"logical_reads\"]/value)[1]', 'bigint') * 8) / 1024. AS logical_reads,\r\n               (c.value('(data[@name=\"physical_reads\"]/value)[1]', 'bigint') * 8) / 1024. AS physical_reads,\r\n                c.value('(data[@name=\"duration\"]/value)[1]', 'bigint') / 1000. AS duration_ms,\r\n               (c.value('(data[@name=\"writes\"]/value)[1]', 'bigint') * 8) / 1024. AS writes,\r\n               (c.value('(data[@name=\"spills\"]/value)[1]', 'bigint') * 8) / 1024. AS spills_mb,\r\n                c.value('(data[@name=\"row_count\"]/value)[1]', 'bigint') AS row_count,\r\n                c.value('(data[@name=\"estimated_rows\"]/value)[1]', 'bigint') AS estimated_rows,\r\n                c.value('(data[@name=\"dop\"]/value)[1]', 'int') AS dop,\r\n                c.value('(data[@name=\"serial_ideal_memory_kb\"]/value)[1]', 'bigint') / 1024. AS serial_ideal_memory_mb,\r\n                c.value('(data[@name=\"requested_memory_kb\"]/value)[1]', 'bigint') / 1024. AS requested_memory_mb,\r\n                c.value('(data[@name=\"used_memory_kb\"]/value)[1]', 'bigint') / 1024. AS used_memory_mb,\r\n                c.value('(data[@name=\"ideal_memory_kb\"]/value)[1]', 'bigint') / 1024. AS ideal_memory_mb,\r\n                c.value('(data[@name=\"granted_memory_kb\"]/value)[1]', 'bigint') / 1024. AS granted_memory_mb,\r\n                CONVERT\r\n                (\r\n                    binary(8), \r\n                    c.value('(action[@name=\"query_plan_hash_signed\"]/value)[1]', 'bigint')\r\n                ) AS query_plan_hash_signed,\r\n                CONVERT\r\n                (\r\n                    binary(8), \r\n                    c.value('(action[@name=\"query_hash_signed\"]/value)[1]', 'bigint')\r\n                ) AS query_hash_signed,\r\n                c.value('xs:hexBinary((action[@name=\"plan_handle\"]/value/text())[1])', 'varbinary(64)') AS plan_handle\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            WHERE c.exist('(action[@name=\"query_hash_signed\"]/value[. != 0])') = 1\r\n         )\r\n         SELECT \r\n             q.*\r\n         INTO #queries\r\n         FROM queries AS q\r\n         OPTION (RECOMPILE);\r\n         \r\n         IF @debug = 1 BEGIN SELECT N'#queries' AS table_name, * FROM #queries AS q OPTION (RECOMPILE); END;\r\n\r\n         /* Add attribute StatementId to query plan if it is missing (versions before 2019) */\r\n         WITH XMLNAMESPACES(DEFAULT 'http://schemas.microsoft.com/sqlserver/2004/07/showplan')\r\n         UPDATE q1\r\n             SET showplan_xml.modify('insert attribute StatementId {\"1\"} \r\n                                      into (/ShowPlanXML/BatchSequence/Batch/Statements/StmtSimple)[1]')\r\n         FROM #queries AS q1\r\n         CROSS APPLY \r\n         (\r\n             SELECT TOP (1)\r\n                 q2.statement AS statement_text\r\n             FROM #queries AS q2\r\n             WHERE q1.query_hash_signed = q2.query_hash_signed\r\n             AND   q1.query_plan_hash_signed = q2.query_plan_hash_signed\r\n             AND   q2.statement IS NOT NULL\r\n             ORDER BY q2.event_time DESC\r\n         ) AS q2\r\n         WHERE q1.showplan_xml IS NOT NULL\r\n         AND   q1.showplan_xml.exist('/ShowPlanXML/BatchSequence/Batch/Statements/StmtSimple/@StatementId') = 0\r\n         OPTION (RECOMPILE);\r\n         \r\n         /* Add attribute StatementText to query plan if it is missing (all versions) */\r\n         WITH XMLNAMESPACES(DEFAULT 'http://schemas.microsoft.com/sqlserver/2004/07/showplan')\r\n         UPDATE q1\r\n             SET showplan_xml.modify('insert attribute StatementText {sql:column(\"q2.statement_text\")} \r\n                                      into (/ShowPlanXML/BatchSequence/Batch/Statements/StmtSimple)[1]')\r\n         FROM #queries AS q1\r\n         CROSS APPLY \r\n         (\r\n             SELECT TOP (1)\r\n                 q2.statement AS statement_text\r\n             FROM #queries AS q2\r\n             WHERE q1.query_hash_signed = q2.query_hash_signed\r\n             AND   q1.query_plan_hash_signed = q2.query_plan_hash_signed\r\n             AND   q2.statement IS NOT NULL\r\n             ORDER BY q2.event_time DESC\r\n         ) AS q2\r\n         WHERE q1.showplan_xml IS NOT NULL \r\n         AND   q1.showplan_xml.exist('/ShowPlanXML/BatchSequence/Batch/Statements/StmtSimple/@StatementText') = 0\r\n         OPTION (RECOMPILE);\r\n\r\n         WITH query_agg AS \r\n         (\r\n            SELECT \r\n                q.query_plan_hash_signed,\r\n                q.query_hash_signed,\r\n                CONVERT(varbinary(64), NULL) AS plan_handle,\r\n                /*totals*/\r\n                ISNULL(q.cpu_ms, 0.) AS total_cpu_ms,\r\n                ISNULL(q.logical_reads, 0.) AS total_logical_reads,\r\n                ISNULL(q.physical_reads, 0.) AS total_physical_reads,\r\n                ISNULL(q.duration_ms, 0.) AS total_duration_ms,\r\n                ISNULL(q.writes, 0.) AS total_writes,\r\n                ISNULL(q.spills_mb, 0.) AS total_spills_mb,\r\n                NULL AS total_used_memory_mb,\r\n                NULL AS total_granted_memory_mb,\r\n                ISNULL(q.row_count, 0.) AS total_rows,\r\n                /*averages*/\r\n                ISNULL(q.cpu_ms, 0.) AS avg_cpu_ms,\r\n                ISNULL(q.logical_reads, 0.) AS avg_logical_reads,\r\n                ISNULL(q.physical_reads, 0.) AS avg_physical_reads,\r\n                ISNULL(q.duration_ms, 0.) AS avg_duration_ms,\r\n                ISNULL(q.writes, 0.) AS avg_writes,\r\n                ISNULL(q.spills_mb, 0.) AS avg_spills_mb,\r\n                NULL AS avg_used_memory_mb,\r\n                NULL AS avg_granted_memory_mb,\r\n                ISNULL(q.row_count, 0) AS avg_rows                    \r\n            FROM #queries AS q\r\n            WHERE q.event_type <> N'query_post_execution_showplan'\r\n            \r\n            UNION ALL \r\n            \r\n            SELECT \r\n                q.query_plan_hash_signed,\r\n                q.query_hash_signed,\r\n                q.plan_handle,\r\n                /*totals*/\r\n                NULL AS total_cpu_ms,\r\n                NULL AS total_logical_reads,\r\n                NULL AS total_physical_reads,\r\n                NULL AS total_duration_ms,\r\n                NULL AS total_writes,\r\n                NULL AS total_spills_mb,                        \r\n                ISNULL(q.used_memory_mb, 0.) AS total_used_memory_mb,\r\n                ISNULL(q.granted_memory_mb, 0.) AS total_granted_memory_mb,\r\n                NULL AS total_rows,\r\n                /*averages*/\r\n                NULL AS avg_cpu_ms,\r\n                NULL AS avg_logical_reads,\r\n                NULL AS avg_physical_reads,\r\n                NULL AS avg_duration_ms,\r\n                NULL AS avg_writes,\r\n                NULL AS avg_spills_mb,\r\n                ISNULL(q.used_memory_mb, 0.) AS avg_used_memory_mb,\r\n                ISNULL(q.granted_memory_mb, 0.) AS avg_granted_memory_mb,\r\n                NULL AS avg_rows                    \r\n            FROM #queries AS q\r\n            WHERE q.event_type = N'query_post_execution_showplan'        \r\n         )\r\n         SELECT \r\n             qa.query_plan_hash_signed,\r\n             qa.query_hash_signed,\r\n             MAX(qa.plan_handle) AS plan_handle,\r\n             SUM(qa.total_cpu_ms) AS total_cpu_ms,\r\n             SUM(qa.total_logical_reads) AS total_logical_reads_mb,\r\n             SUM(qa.total_physical_reads) AS total_physical_reads_mb,\r\n             SUM(qa.total_duration_ms) AS total_duration_ms,\r\n             SUM(qa.total_writes) AS total_writes_mb,\r\n             SUM(qa.total_spills_mb) AS total_spills_mb,\r\n             SUM(qa.total_used_memory_mb) AS total_used_memory_mb,\r\n             SUM(qa.total_granted_memory_mb) AS total_granted_memory_mb,\r\n             SUM(qa.total_rows) AS total_rows,\r\n             AVG(qa.avg_cpu_ms) AS avg_cpu_ms,\r\n             AVG(qa.avg_logical_reads) AS avg_logical_reads_mb,\r\n             AVG(qa.avg_physical_reads) AS avg_physical_reads_mb,\r\n             AVG(qa.avg_duration_ms) AS avg_duration_ms,\r\n             AVG(qa.avg_writes) AS avg_writes_mb,\r\n             AVG(qa.avg_spills_mb) AS avg_spills_mb,\r\n             AVG(qa.avg_used_memory_mb) AS avg_used_memory_mb,\r\n             AVG(qa.avg_granted_memory_mb) AS avg_granted_memory_mb,\r\n             AVG(qa.avg_rows) AS avg_rows,\r\n             COUNT(qa.plan_handle) AS executions\r\n         INTO #totals\r\n         FROM query_agg AS qa\r\n         GROUP BY \r\n             qa.query_plan_hash_signed,\r\n             qa.query_hash_signed;\r\n         \r\n         IF @debug = 1 BEGIN SELECT N'#totals' AS table_name, * FROM #totals AS t OPTION (RECOMPILE); END;\r\n\r\n         WITH query_results AS\r\n         (\r\n             SELECT \r\n                 q.event_time,\r\n                 q.database_name,\r\n                 q.object_name,\r\n                 q2.statement_text,\r\n                 q.sql_text,\r\n                 q.showplan_xml,\r\n                 t.executions,\r\n                 t.total_cpu_ms,\r\n                 t.avg_cpu_ms,\r\n                 t.total_logical_reads_mb,\r\n                 t.avg_logical_reads_mb,\r\n                 t.total_physical_reads_mb,\r\n                 t.avg_physical_reads_mb,\r\n                 t.total_duration_ms,\r\n                 t.avg_duration_ms,\r\n                 t.total_writes_mb,\r\n                 t.avg_writes_mb,\r\n                 t.total_spills_mb,\r\n                 t.avg_spills_mb,\r\n                 t.total_used_memory_mb,\r\n                 t.avg_used_memory_mb,\r\n                 t.total_granted_memory_mb,\r\n                 t.avg_granted_memory_mb,\r\n                 t.total_rows,\r\n                 t.avg_rows,\r\n                 q.serial_ideal_memory_mb,\r\n                 q.requested_memory_mb,\r\n                 q.ideal_memory_mb,\r\n                 q.estimated_rows,\r\n                 q.dop,\r\n                 q.query_plan_hash_signed,\r\n                 q.query_hash_signed,\r\n                 q.plan_handle,\r\n                 n = \r\n                     ROW_NUMBER() \r\n                         OVER\r\n                         ( \r\n                             PARTITION BY \r\n                                 q.query_plan_hash_signed, \r\n                                 q.query_hash_signed, \r\n                                 q.plan_handle\r\n                             ORDER BY \r\n                                 q.query_plan_hash_signed, \r\n                                 q.query_hash_signed, \r\n                                 q.plan_handle \r\n                         )\r\n             FROM #queries AS q\r\n             JOIN #totals AS t\r\n                 ON  q.query_hash_signed = t.query_hash_signed\r\n                 AND q.query_plan_hash_signed = t.query_plan_hash_signed\r\n                 AND q.plan_handle = t.plan_handle\r\n             CROSS APPLY\r\n             (\r\n                 SELECT TOP (1) \r\n                     statement_text = \r\n                         q2.statement\r\n                 FROM #queries AS q2\r\n                 WHERE q.query_hash_signed = q2.query_hash_signed\r\n                 AND   q.query_plan_hash_signed = q2.query_plan_hash_signed\r\n                 AND   q2.statement IS NOT NULL\r\n                 ORDER BY q2.event_time DESC\r\n             ) AS q2\r\n             WHERE q.showplan_xml.exist('*') = 1\r\n         )\r\n         SELECT \r\n             q.event_time,\r\n             q.database_name,\r\n             q.object_name,\r\n             q.statement_text,\r\n             q.sql_text,\r\n             q.showplan_xml,\r\n             q.executions,\r\n             q.total_cpu_ms,\r\n             q.avg_cpu_ms,\r\n             q.total_logical_reads_mb,\r\n             q.avg_logical_reads_mb,\r\n             q.total_physical_reads_mb,\r\n             q.avg_physical_reads_mb,\r\n             q.total_duration_ms,\r\n             q.avg_duration_ms,\r\n             q.total_writes_mb,\r\n             q.avg_writes_mb,\r\n             q.total_spills_mb,\r\n             q.avg_spills_mb,\r\n             q.total_used_memory_mb,\r\n             q.avg_used_memory_mb,\r\n             q.total_granted_memory_mb,\r\n             q.avg_granted_memory_mb,\r\n             q.total_rows,\r\n             q.avg_rows,\r\n             q.serial_ideal_memory_mb,\r\n             q.requested_memory_mb,\r\n             q.ideal_memory_mb,\r\n             q.estimated_rows,\r\n             q.dop,\r\n             q.query_plan_hash_signed,\r\n             q.query_hash_signed,\r\n             q.plan_handle\r\n         FROM query_results AS q\r\n         WHERE q.n = 1\r\n         ORDER BY \r\n              CASE @query_sort_order\r\n                   WHEN N'cpu' THEN q.total_cpu_ms\r\n                   WHEN N'reads' THEN q.total_logical_reads_mb + q.total_physical_reads_mb\r\n                   WHEN N'writes' THEN q.total_writes_mb\r\n                   WHEN N'duration' THEN q.total_duration_ms\r\n                   WHEN N'spills' THEN q.total_spills_mb\r\n                   WHEN N'memory' THEN q.total_granted_memory_mb\r\n                   WHEN N'avg cpu' THEN q.avg_cpu_ms\r\n                   WHEN N'avg reads' THEN q.avg_logical_reads_mb + q.avg_physical_reads_mb\r\n                   WHEN N'avg writes' THEN q.avg_writes_mb\r\n                   WHEN N'avg duration' THEN q.avg_duration_ms\r\n                   WHEN N'avg spills' THEN q.avg_spills_mb\r\n                   WHEN N'avg memory' THEN q.avg_granted_memory_mb\r\n                   ELSE N'cpu'\r\n              END DESC\r\n         OPTION (RECOMPILE);\r\nEND;\r\n\r\n\r\nIF LOWER(@event_type) LIKE N'%comp%' AND LOWER(@event_type) NOT LIKE N'%re%'\r\nBEGIN\r\n\r\nIF @compile_events = 1\r\n    BEGIN\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,\r\n                c.value('@name', 'nvarchar(256)') AS event_type,\r\n                c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                c.value('(data[@name=\"object_name\"]/value)[1]', 'nvarchar(256)') AS object_name,\r\n                c.value('(data[@name=\"statement\"]/value)[1]', 'nvarchar(MAX)') AS statement_text,\r\n                c.value('(data[@name=\"cpu_time\"]/value)[1]', 'bigint') compile_cpu_ms,\r\n                c.value('(data[@name=\"duration\"]/value)[1]', 'bigint') compile_duration_ms\r\n            INTO #compiles_1\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            WHERE c.exist('(data[@name=\"is_recompile\"]/value[. = \"false\"])') = 1\r\n            AND   c.exist('@name[.= \"sql_statement_post_compile\"]') = 1\r\n            ORDER BY event_time\r\n            OPTION (RECOMPILE);\r\n\r\n            ALTER TABLE #compiles_1 ADD statement_text_checksum AS CHECKSUM(database_name + statement_text) PERSISTED;\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#compiles_1' AS table_name, * FROM #compiles_1 AS c OPTION(RECOMPILE); END;\r\n\r\n            WITH cbq AS \r\n            (\r\n                SELECT \r\n                    statement_text_checksum,\r\n                    COUNT_BIG(*) AS total_compiles,\r\n                    SUM(compile_cpu_ms) AS total_compile_cpu,\r\n                    AVG(compile_cpu_ms) AS avg_compile_cpu,\r\n                    MAX(compile_cpu_ms) AS max_compile_cpu,\r\n                    SUM(compile_duration_ms) AS total_compile_duration,\r\n                    AVG(compile_duration_ms) AS avg_compile_duration,\r\n                    MAX(compile_duration_ms) AS max_compile_duration\r\n                FROM #compiles_1\r\n                GROUP BY statement_text_checksum \r\n            )\r\n            SELECT \r\n                N'total compiles' AS pattern,\r\n                k.object_name,\r\n                k.statement_text,\r\n                c.total_compiles,\r\n                c.total_compile_cpu,\r\n                c.avg_compile_cpu,\r\n                c.max_compile_cpu,\r\n                c.total_compile_duration,\r\n                c.avg_compile_duration,\r\n                c.max_compile_duration\r\n            FROM cbq AS c\r\n            CROSS APPLY\r\n            (\r\n                SELECT TOP (1) \r\n                    k.*\r\n                FROM #compiles_1 AS k\r\n                WHERE c.statement_text_checksum = k.statement_text_checksum\r\n                ORDER BY k.event_time DESC\r\n            ) AS k\r\n            ORDER BY c.total_compiles DESC\r\n            OPTION(RECOMPILE);\r\n\r\n    END;\r\n\r\nIF @compile_events = 0\r\n    BEGIN\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,\r\n                c.value('@name', 'nvarchar(256)') AS event_type,\r\n                c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                c.value('(data[@name=\"object_name\"]/value)[1]', 'nvarchar(256)') AS object_name,\r\n                c.value('(data[@name=\"statement\"]/value)[1]', 'nvarchar(MAX)') AS statement_text\r\n            INTO #compiles_0\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            ORDER BY event_time\r\n            OPTION (RECOMPILE);\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#compiles_0' AS table_name, * FROM #compiles_0 AS c OPTION(RECOMPILE); END;\r\n\r\n            SELECT \r\n                c.event_time,\r\n                c.event_type,\r\n                c.database_name,\r\n                c.object_name,\r\n                c.statement_text\r\n            FROM #compiles_0 AS c\r\n            ORDER BY c.event_time\r\n            OPTION(RECOMPILE);\r\n\r\n    END;\r\n\r\nIF @parameterization_events  = 1\r\n    BEGIN\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,\r\n                c.value('@name', 'nvarchar(256)') AS event_type,\r\n                c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                c.value('(action[@name=\"sql_text\"]/value)[1]', 'nvarchar(MAX)') AS sql_text,\r\n                c.value('(data[@name=\"compile_cpu_time\"]/value)[1]', 'bigint') / 1000. AS compile_cpu_time_ms,\r\n                c.value('(data[@name=\"compile_duration\"]/value)[1]', 'bigint') / 1000. AS compile_duration_ms,\r\n                c.value('(data[@name=\"query_param_type\"]/value)[1]', 'int') AS query_param_type,\r\n                c.value('(data[@name=\"is_cached\"]/value)[1]', 'bit') AS is_cached,\r\n                c.value('(data[@name=\"is_recompiled\"]/value)[1]', 'bit') AS is_recompiled,\r\n                c.value('(data[@name=\"compile_code\"]/text)[1]', 'nvarchar(256)') AS compile_code,                  \r\n                c.value('(data[@name=\"has_literals\"]/value)[1]', 'bit') AS has_literals,\r\n                c.value('(data[@name=\"is_parameterizable\"]/value)[1]', 'bit') AS is_parameterizable,\r\n                c.value('(data[@name=\"parameterized_values_count\"]/value)[1]', 'bigint') AS parameterized_values_count,\r\n                c.value('xs:hexBinary((data[@name=\"query_plan_hash\"]/value/text())[1])', 'binary(8)') AS query_plan_hash,\r\n                c.value('xs:hexBinary((data[@name=\"query_hash\"]/value/text())[1])', 'binary(8)') AS query_hash,\r\n                c.value('xs:hexBinary((action[@name=\"plan_handle\"]/value/text())[1])', 'varbinary(64)') AS plan_handle, \r\n                c.value('xs:hexBinary((data[@name=\"statement_sql_hash\"]/value/text())[1])', 'varbinary(64)') AS statement_sql_hash\r\n            INTO #parameterization\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            WHERE c.exist('@name[. = \"query_parameterization_data\"]') = 1\r\n            AND   c.exist('(data[@name=\"is_recompiled\"]/value[. = \"false\"])') = 1\r\n            ORDER BY event_time\r\n            OPTION (RECOMPILE);\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#parameterization' AS table_name, * FROM #parameterization AS p OPTION(RECOMPILE); END;\r\n\r\n            WITH cpq AS \r\n            (\r\n                SELECT \r\n                    database_name,\r\n                    query_hash,\r\n                    COUNT_BIG(*) AS total_compiles,\r\n                    COUNT(DISTINCT query_plan_hash) AS plan_count,\r\n                    SUM(compile_cpu_time_ms) AS total_compile_cpu,\r\n                    AVG(compile_cpu_time_ms) AS avg_compile_cpu,\r\n                    MAX(compile_cpu_time_ms) AS max_compile_cpu,\r\n                    SUM(compile_duration_ms) AS total_compile_duration,\r\n                    AVG(compile_duration_ms) AS avg_compile_duration,\r\n                    MAX(compile_duration_ms) AS max_compile_duration\r\n                FROM #parameterization\r\n                GROUP BY \r\n                    database_name, \r\n                    query_hash\r\n               )\r\n               SELECT \r\n                   N'parameterization opportunities' AS pattern,\r\n                   c.database_name,\r\n                   k.sql_text,\r\n                   k.is_parameterizable,\r\n                   c.total_compiles,\r\n                   c.plan_count,\r\n                   c.total_compile_cpu,\r\n                   c.avg_compile_cpu,\r\n                   c.max_compile_cpu,\r\n                   c.total_compile_duration,\r\n                   c.avg_compile_duration,\r\n                   c.max_compile_duration,\r\n                   k.query_param_type,\r\n                   k.is_cached,\r\n                   k.is_recompiled,\r\n                   k.compile_code,\r\n                   k.has_literals,\r\n                   k.parameterized_values_count\r\n               FROM cpq AS c\r\n               CROSS APPLY\r\n               (\r\n                   SELECT TOP (1) \r\n                       k.*\r\n                   FROM #parameterization AS k\r\n                   WHERE k.query_hash = c.query_hash\r\n                   ORDER BY k.event_time DESC\r\n               ) AS k\r\n            ORDER BY c.total_compiles DESC\r\n            OPTION(RECOMPILE);\r\n    END;\r\n\r\nEND;\r\n\r\n\r\nIF LOWER(@event_type) LIKE N'%recomp%'\r\nBEGIN\r\n\r\nIF @compile_events = 1\r\n    BEGIN\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,\r\n                c.value('@name', 'nvarchar(256)') AS event_type,\r\n                c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                c.value('(data[@name=\"object_name\"]/value)[1]', 'nvarchar(256)') AS object_name,\r\n                c.value('(data[@name=\"recompile_cause\"]/text)[1]', 'nvarchar(256)') AS recompile_cause,\r\n                c.value('(data[@name=\"statement\"]/value)[1]', 'nvarchar(MAX)') AS statement_text,\r\n                c.value('(data[@name=\"cpu_time\"]/value)[1]', 'bigint') AS recompile_cpu_ms,\r\n                c.value('(data[@name=\"duration\"]/value)[1]', 'bigint') AS recompile_duration_ms\r\n            INTO #recompiles_1\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            WHERE c.exist('(data[@name=\"is_recompile\"]/value[. = \"false\"])') = 0\r\n            ORDER BY event_time\r\n            OPTION (RECOMPILE);\r\n\r\n            ALTER TABLE #recompiles_1 ADD statement_text_checksum AS CHECKSUM(database_name + statement_text) PERSISTED;\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#recompiles_1' AS table_name, * FROM #recompiles_1 AS r OPTION(RECOMPILE); END;\r\n\r\n            WITH cbq AS \r\n            (\r\n                SELECT \r\n                    statement_text_checksum,\r\n                    COUNT_BIG(*) AS total_recompiles,\r\n                    SUM(recompile_cpu_ms) AS total_recompile_cpu,\r\n                    AVG(recompile_cpu_ms) AS avg_recompile_cpu,\r\n                    MAX(recompile_cpu_ms) AS max_recompile_cpu,\r\n                    SUM(recompile_duration_ms) AS total_recompile_duration,\r\n                    AVG(recompile_duration_ms) AS avg_recompile_duration,\r\n                    MAX(recompile_duration_ms) AS max_recompile_duration\r\n                FROM #recompiles_1\r\n                GROUP BY statement_text_checksum \r\n            )\r\n            SELECT \r\n                N'total recompiles' AS pattern,\r\n                k.recompile_cause,\r\n                k.object_name,\r\n                k.statement_text,\r\n                c.total_recompiles,\r\n                c.total_recompile_cpu,\r\n                c.avg_recompile_cpu,\r\n                c.max_recompile_cpu,\r\n                c.total_recompile_duration,\r\n                c.avg_recompile_duration,\r\n                c.max_recompile_duration\r\n            FROM cbq AS c\r\n            CROSS APPLY\r\n            (\r\n                SELECT TOP(1) *\r\n                FROM #recompiles_1 AS k\r\n                WHERE c.statement_text_checksum = k.statement_text_checksum\r\n                ORDER BY k.event_time DESC\r\n            ) AS k\r\n            ORDER BY c.total_recompiles DESC\r\n            OPTION(RECOMPILE);\r\n\r\n    END;\r\n\r\nIF @compile_events = 0\r\n    BEGIN\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,\r\n                c.value('@name', 'nvarchar(256)') AS event_type,\r\n                c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                c.value('(data[@name=\"object_name\"]/value)[1]', 'nvarchar(256)') AS object_name,\r\n                c.value('(data[@name=\"recompile_cause\"]/text)[1]', 'nvarchar(256)') AS recompile_cause,\r\n                c.value('(data[@name=\"statement\"]/value)[1]', 'nvarchar(MAX)') AS statement_text\r\n            INTO #recompiles_0\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            ORDER BY event_time\r\n            OPTION (RECOMPILE);\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#recompiles_0' AS table_name, * FROM #recompiles_0 AS r OPTION(RECOMPILE); END;\r\n\r\n            SELECT \r\n                r.event_time,\r\n                r.event_type,\r\n                r.database_name,\r\n                r.object_name,\r\n                r.recompile_cause,\r\n                r.statement_text\r\n            FROM #recompiles_0 AS r\r\n            ORDER BY r.event_time\r\n            OPTION(RECOMPILE);\r\n\r\n    END;\r\nEND;\r\n\r\n\r\nIF LOWER(@event_type) LIKE N'%wait%'\r\nBEGIN;\r\n         WITH waits AS \r\n         (\r\n             SELECT \r\n                 DATEADD\r\n                 (\r\n                     MINUTE, \r\n                     DATEDIFF\r\n                     (\r\n                         MINUTE, \r\n                         GETUTCDATE(), \r\n                         SYSDATETIME()\r\n                     ), \r\n                     c.value('@timestamp', 'datetime2')\r\n                 ) AS event_time,\r\n                 c.value('@name', 'nvarchar(256)') AS event_type,\r\n                 c.value('(action[@name=\"database_name\"]/value)[1]', 'nvarchar(256)') AS database_name,                \r\n                 c.value('(data[@name=\"wait_type\"]/text)[1]', 'nvarchar(256)') AS wait_type,\r\n                 c.value('(data[@name=\"duration\"]/value)[1]', 'bigint')  AS duration_ms,\r\n                 c.value('(data[@name=\"signal_duration\"]/value)[1]', 'bigint') AS signal_duration_ms,\r\n                 CASE \r\n                     WHEN @v = 11 \r\n                     THEN N'Not Available < 2014' \r\n                     ELSE c.value('(data[@name=\"wait_resource\"]/value)[1]', 'nvarchar(256)') \r\n                 END AS wait_resource,\r\n                 CONVERT\r\n                 (\r\n                     binary(8), \r\n                     c.value('(action[@name=\"query_plan_hash_signed\"]/value)[1]', 'bigint')\r\n                 ) AS query_plan_hash_signed,\r\n                 CONVERT\r\n                 (\r\n                     binary(8), \r\n                     c.value('(action[@name=\"query_hash_signed\"]/value)[1]', 'bigint')\r\n                 ) AS query_hash_signed,\r\n                 c.value('xs:hexBinary((action[@name=\"plan_handle\"]/value/text())[1])', 'varbinary(64)') AS plan_handle\r\n             FROM \r\n             (\r\n                 SELECT TOP (2147483647) \r\n                     xet.human_events_xml\r\n                 FROM #human_events_xml AS xet\r\n                 WHERE ( xet.human_events_xml.exist('(//event/data[@name=\"duration\"]/value[. > 0])') = 1 \r\n                 OR        @gimme_danger = 1 )\r\n             ) AS c\r\n             OUTER APPLY c.human_events_xml.nodes('//event') AS oa(c)\r\n             )\r\n             SELECT \r\n                 w.*\r\n             INTO #waits_agg\r\n             FROM waits AS w\r\n             OPTION(RECOMPILE);\r\n            \r\n            IF @debug = 1 BEGIN SELECT N'#waits_agg' AS table_name, * FROM #waits_agg AS wa OPTION (RECOMPILE); END;\r\n\r\n            SELECT \r\n                N'total waits' AS wait_pattern,\r\n                MIN(wa.event_time) AS min_event_time,\r\n                MAX(wa.event_time) AS max_event_time,\r\n                wa.wait_type,\r\n                COUNT_BIG(*) AS total_waits,\r\n                SUM(wa.duration_ms) AS sum_duration_ms,\r\n                SUM(wa.signal_duration_ms) AS sum_signal_duration_ms,\r\n                SUM(wa.duration_ms) / COUNT_BIG(*) AS avg_ms_per_wait\r\n            FROM #waits_agg AS wa\r\n            GROUP BY wa.wait_type\r\n            ORDER BY sum_duration_ms DESC\r\n            OPTION (RECOMPILE);            \r\n\r\n            SELECT \r\n                N'total waits by database' AS wait_pattern,\r\n                MIN(wa.event_time) AS min_event_time,\r\n                MAX(wa.event_time) AS max_event_time,\r\n                wa.database_name,\r\n                wa.wait_type,\r\n                COUNT_BIG(*) AS total_waits,\r\n                SUM(wa.duration_ms) AS sum_duration_ms,\r\n                SUM(wa.signal_duration_ms) AS sum_signal_duration_ms,\r\n                SUM(wa.duration_ms) / COUNT_BIG(*) AS avg_ms_per_wait\r\n            FROM #waits_agg AS wa\r\n            GROUP BY \r\n                wa.database_name, \r\n                wa.wait_type\r\n            ORDER BY sum_duration_ms DESC\r\n            OPTION (RECOMPILE); \r\n\r\n            WITH plan_waits AS \r\n            (\r\n                SELECT \r\n                    N'total waits by query and database' AS wait_pattern,\r\n                    MIN(wa.event_time) AS min_event_time,\r\n                    MAX(wa.event_time) AS max_event_time,\r\n                    wa.database_name,\r\n                    wa.wait_type,\r\n                    COUNT_BIG(*) AS total_waits,\r\n                    wa.plan_handle,\r\n                    SUM(wa.duration_ms) AS sum_duration_ms,\r\n                    SUM(wa.signal_duration_ms) AS sum_signal_duration_ms,\r\n                    SUM(wa.duration_ms) / COUNT_BIG(*) AS avg_ms_per_wait\r\n                FROM #waits_agg AS wa\r\n                GROUP BY \r\n                    wa.database_name,\r\n                    wa.wait_type, \r\n                    wa.plan_handle                 \r\n            )\r\n            SELECT \r\n                pw.wait_pattern,\r\n                pw.min_event_time,\r\n                pw.max_event_time,\r\n                pw.database_name,\r\n                pw.wait_type,\r\n                pw.total_waits,\r\n                pw.sum_duration_ms,\r\n                pw.sum_signal_duration_ms,\r\n                pw.avg_ms_per_wait,\r\n                st.text,\r\n                qp.query_plan\r\n            FROM plan_waits AS pw\r\n            OUTER APPLY sys.dm_exec_query_plan(pw.plan_handle) AS qp\r\n            OUTER APPLY sys.dm_exec_sql_text(pw.plan_handle) AS st\r\n            ORDER BY pw.sum_duration_ms DESC\r\n            OPTION (RECOMPILE);\r\nEND;\r\n\r\n\r\nIF LOWER(@event_type) LIKE N'%lock%'\r\nBEGIN\r\n\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,        \r\n                DB_NAME(c.value('(data[@name=\"database_id\"]/value)[1]', 'int')) AS database_name,\r\n                c.value('(data[@name=\"database_id\"]/value)[1]', 'int') AS database_id,\r\n                c.value('(data[@name=\"object_id\"]/value)[1]', 'int') AS object_id,\r\n                c.value('(data[@name=\"transaction_id\"]/value)[1]', 'bigint') AS transaction_id,\r\n                c.value('(data[@name=\"resource_owner_type\"]/text)[1]', 'nvarchar(256)') AS resource_owner_type,\r\n                c.value('(//@monitorLoop)[1]', 'int') AS monitor_loop,\r\n                bd.value('(process/@spid)[1]', 'int') AS spid,\r\n                bd.value('(process/@ecid)[1]', 'int') AS ecid,\r\n                bd.value('(process/inputbuf/text())[1]', 'nvarchar(MAX)') AS query_text,\r\n                bd.value('(process/@waittime)[1]', 'bigint') AS wait_time,\r\n                bd.value('(process/@transactionname)[1]', 'nvarchar(256)') AS transaction_name,\r\n                bd.value('(process/@lasttranstarted)[1]', 'datetime2') AS last_transaction_started,\r\n                bd.value('(process/@waitresource)[1]', 'nvarchar(100)') AS wait_resource,\r\n                bd.value('(process/@lockMode)[1]', 'nvarchar(10)') AS lock_mode,\r\n                bd.value('(process/@status)[1]', 'nvarchar(10)') AS status,\r\n                bd.value('(process/@priority)[1]', 'int') AS priority,\r\n                bd.value('(process/@trancount)[1]', 'int') AS transaction_count,\r\n                bd.value('(process/@clientapp)[1]', 'nvarchar(256)') AS client_app,\r\n                bd.value('(process/@hostname)[1]', 'nvarchar(256)') AS host_name,\r\n                bd.value('(process/@loginname)[1]', 'nvarchar(256)') AS login_name,\r\n                bd.value('(process/@isolationlevel)[1]', 'nvarchar(50)') AS isolation_level,\r\n                bd.value('(process/executionStack/frame/@sqlhandle)[1]', 'nvarchar(100)') AS sqlhandle,\r\n                'blocked' AS activity,\r\n                c.query('.') AS blocked_process_report\r\n            INTO #blocked\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            OUTER APPLY oa.c.nodes('//blocked-process-report/blocked-process') AS bd(bd)\r\n            OPTION (RECOMPILE);\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#blocked' AS table_name, * FROM #blocked AS wa OPTION (RECOMPILE); END;\r\n\r\n            SELECT \r\n                DATEADD\r\n                (\r\n                    MINUTE, \r\n                    DATEDIFF\r\n                    (\r\n                        MINUTE, \r\n                        GETUTCDATE(), \r\n                        SYSDATETIME()\r\n                    ), \r\n                    c.value('@timestamp', 'datetime2')\r\n                ) AS event_time,        \r\n                DB_NAME(c.value('(data[@name=\"database_id\"]/value)[1]', 'int')) AS database_name,\r\n                c.value('(data[@name=\"database_id\"]/value)[1]', 'int') AS database_id,\r\n                c.value('(data[@name=\"object_id\"]/value)[1]', 'int') AS object_id,\r\n                c.value('(data[@name=\"transaction_id\"]/value)[1]', 'bigint') AS transaction_id,\r\n                c.value('(data[@name=\"resource_owner_type\"]/text)[1]', 'nvarchar(256)') AS resource_owner_type,\r\n                c.value('(//@monitorLoop)[1]', 'int') AS monitor_loop,\r\n                bg.value('(process/@spid)[1]', 'int') AS spid,\r\n                bg.value('(process/@ecid)[1]', 'int') AS ecid,\r\n                bg.value('(process/inputbuf/text())[1]', 'nvarchar(MAX)') AS query_text,\r\n                CONVERT(int, NULL) AS wait_time,\r\n                CONVERT(nvarchar(256), NULL) AS transaction_name,\r\n                CONVERT(datetime2, NULL) AS last_transaction_started,\r\n                CONVERT(nvarchar(100), NULL) AS wait_resource,\r\n                CONVERT(nvarchar(10), NULL) AS lock_mode,\r\n                bg.value('(process/@status)[1]', 'nvarchar(10)') AS status,\r\n                bg.value('(process/@priority)[1]', 'int') AS priority,\r\n                bg.value('(process/@trancount)[1]', 'int') AS transaction_count,\r\n                bg.value('(process/@clientapp)[1]', 'nvarchar(256)') AS client_app,\r\n                bg.value('(process/@hostname)[1]', 'nvarchar(256)') AS host_name,\r\n                bg.value('(process/@loginname)[1]', 'nvarchar(256)') AS login_name,\r\n                bg.value('(process/@isolationlevel)[1]', 'nvarchar(50)') AS isolation_level,\r\n                CONVERT(nvarchar(100), NULL) AS sqlhandle,\r\n                'blocking' AS activity,\r\n                c.query('.') AS blocked_process_report\r\n            INTO #blocking\r\n            FROM #human_events_xml AS xet\r\n            OUTER APPLY xet.human_events_xml.nodes('//event') AS oa(c)\r\n            OUTER APPLY oa.c.nodes('//blocked-process-report/blocking-process') AS bg(bg)\r\n            OPTION (RECOMPILE);\r\n\r\n            IF @debug = 1 BEGIN SELECT N'#blocking' AS table_name, * FROM #blocking AS wa OPTION (RECOMPILE); END;\r\n\r\n\r\n            SELECT TOP (2147483647)\r\n                kheb.event_time,\r\n                kheb.database_name,\r\n                kheb.contentious_object,\r\n                kheb.activity,\r\n                kheb.spid,\r\n                kheb.query_text,\r\n                kheb.wait_time,\r\n                kheb.status,\r\n                kheb.isolation_level,\r\n                kheb.last_transaction_started,\r\n                kheb.transaction_name,\r\n                kheb.wait_resource,\r\n                kheb.lock_mode,\r\n                kheb.priority,\r\n                kheb.transaction_count,\r\n                kheb.client_app,\r\n                kheb.host_name,\r\n                kheb.login_name,\r\n                kheb.blocked_process_report\r\n            FROM \r\n            (\r\n                \r\n                SELECT \r\n                    bg.*, \r\n                    OBJECT_NAME\r\n                    (\r\n                        object_id, \r\n                        bg.database_id\r\n                    ) AS contentious_object \r\n                    FROM #blocking AS bg\r\n                \r\n                UNION ALL \r\n                \r\n                SELECT \r\n                    bd.*, \r\n                    OBJECT_NAME\r\n                    (\r\n                        object_id, \r\n                        bd.database_id\r\n                    ) AS contentious_object \r\n                FROM #blocked AS bd\r\n            \r\n            ) AS kheb\r\n            ORDER BY kheb.event_time,\r\n                     CASE \r\n                         WHEN kheb.activity = 'blocking' \r\n                         THEN 1\r\n                         ELSE 999 \r\n                     END\r\n            OPTION(RECOMPILE);\r\n\r\nEND;\r\n\r\n/* End magic happening */\r\n\r\nIF @keep_alive = 0\r\nBEGIN\r\n    IF @debug = 1 BEGIN RAISERROR(@stop_sql, 0, 1) WITH NOWAIT; END;\r\n    RAISERROR(N'all done, stopping session', 0, 1) WITH NOWAIT;\r\n    EXEC (@stop_sql);\r\n    \r\n    IF @debug = 1 BEGIN RAISERROR(@drop_sql, 0, 1) WITH NOWAIT; END;\r\n   RAISERROR(N'and dropping session', 0, 1) WITH NOWAIT;\r\n   EXEC (@drop_sql);\r\nEND;\r\nRETURN;\r\n\r\n\r\n/*This section handles outputting data to tables*/\r\noutput_results:\r\nRAISERROR(N'Starting data collection.', 0, 1) WITH NOWAIT;\r\n\r\nWHILE 1 = 1\r\n    BEGIN\r\n    \r\n    IF @azure = 0\r\n    BEGIN\r\n        IF NOT EXISTS\r\n        (\r\n            /*If we don't find any sessions to poll from, wait 5 seconds and restart loop*/\r\n            SELECT \r\n                1/0\r\n            FROM sys.server_event_sessions AS ses\r\n            LEFT JOIN sys.dm_xe_sessions AS dxs\r\n                ON dxs.name = ses.name\r\n            WHERE ses.name LIKE N'keeper_HumanEvents_%'\r\n            AND   dxs.create_time IS NOT NULL\r\n        )\r\n        BEGIN\r\n            RAISERROR(N'No matching active session names found starting with keeper_HumanEvents', 0, 1) WITH NOWAIT;\r\n        END;\r\n        \r\n        /*If we find any stopped sessions, turn them back on*/\r\n        SELECT \r\n            @the_sleeper_must_awaken += \r\n                N'ALTER EVENT SESSION ' + \r\n                ses.name + \r\n                N' ON SERVER STATE = START;' + \r\n                @nc10\r\n        FROM sys.server_event_sessions AS ses\r\n        LEFT JOIN sys.dm_xe_sessions AS dxs\r\n            ON dxs.name = ses.name\r\n        WHERE ses.name LIKE N'keeper_HumanEvents_%'\r\n        AND   dxs.create_time IS NULL\r\n        OPTION (RECOMPILE);\r\n    END;\r\n    ELSE\r\n    BEGIN\r\n        /*If we don't find any sessions to poll from, wait 5 seconds and restart loop*/\r\n        IF NOT EXISTS\r\n        (\r\n            SELECT \r\n                1/0\r\n            FROM sys.database_event_sessions AS ses\r\n            LEFT JOIN sys.dm_xe_database_sessions AS dxs\r\n                ON dxs.name = ses.name\r\n            WHERE ses.name LIKE N'keeper_HumanEvents_%'\r\n            AND   dxs.create_time IS NOT NULL\r\n        )\r\n        BEGIN\r\n            RAISERROR(N'No matching active session names found starting with keeper_HumanEvents', 0, 1) WITH NOWAIT;\r\n        END;\r\n        \r\n        /*If we find any stopped sessions, turn them back on*/\r\n        SELECT \r\n            @the_sleeper_must_awaken += \r\n                N'ALTER EVENT SESSION ' + \r\n                ses.name + \r\n                N' ON DATABASE STATE = START;' + \r\n                @nc10\r\n        FROM sys.database_event_sessions AS ses\r\n        LEFT JOIN sys.dm_xe_database_sessions AS dxs\r\n            ON dxs.name = ses.name\r\n        WHERE ses.name LIKE N'keeper_HumanEvents_%'\r\n        AND   dxs.create_time IS NULL\r\n        OPTION (RECOMPILE);\r\n    END;\r\n\r\n    IF LEN(@the_sleeper_must_awaken) > 0\r\n    BEGIN     \r\n     IF @debug = 1 BEGIN RAISERROR(@the_sleeper_must_awaken, 0, 1) WITH NOWAIT; END;\r\n     RAISERROR(N'Starting keeper_HumanEvents... inactive sessions', 0, 1) WITH NOWAIT;\r\n     \r\n     EXEC sys.sp_executesql \r\n         @the_sleeper_must_awaken;\r\n    END;\r\n\r\n    IF \r\n    (\r\n        SELECT\r\n            COUNT_BIG(*)\r\n        FROM #human_events_worker AS hew\r\n    ) = 0\r\n    BEGIN\r\n    \r\n        /*Insert any sessions we find*/\r\n        IF @azure = 0\r\n        BEGIN\r\n            INSERT \r\n                #human_events_worker\r\n            ( \r\n                event_type, \r\n                event_type_short, \r\n                is_table_created, \r\n                is_view_created, \r\n                last_checked, \r\n                last_updated, \r\n                output_database, \r\n                output_schema, \r\n                output_table \r\n            )        \r\n            SELECT \r\n                s.name, \r\n                N'', \r\n                0, \r\n                0, \r\n                '19000101', \r\n                '19000101', \r\n                 @output_database_name, \r\n                 @output_schema_name, \r\n                 s.name\r\n            FROM sys.server_event_sessions AS s\r\n            LEFT JOIN sys.dm_xe_sessions AS r \r\n                ON r.name = s.name\r\n            WHERE s.name LIKE N'keeper_HumanEvents_%'\r\n            AND   r.create_time IS NOT NULL\r\n            OPTION (RECOMPILE);\r\n        END;\r\n        ELSE\r\n        BEGIN\r\n            INSERT \r\n                #human_events_worker\r\n            ( \r\n                event_type, \r\n                event_type_short, \r\n                is_table_created, \r\n                is_view_created, \r\n                last_checked, \r\n                last_updated, \r\n                output_database, \r\n                output_schema, \r\n                output_table \r\n            )        \r\n            SELECT \r\n                s.name, \r\n                N'', \r\n                0, \r\n                0, \r\n                '19000101', \r\n                '19000101', \r\n                 @output_database_name, \r\n                 @output_schema_name, \r\n                 s.name\r\n            FROM sys.database_event_sessions AS s\r\n            LEFT JOIN sys.dm_xe_database_sessions AS r \r\n                ON r.name = s.name\r\n            WHERE s.name LIKE N'keeper_HumanEvents_%'\r\n            AND   r.create_time IS NOT NULL\r\n            OPTION (RECOMPILE);\r\n        END;\r\n\r\n        /*If we're getting compiles, and the parameterization event is available*/\r\n        /*Add a row to the table so we account for it*/\r\n        IF @parameterization_events = 1\r\n           AND EXISTS \r\n           ( \r\n               SELECT \r\n                   1/0 \r\n               FROM #human_events_worker \r\n               WHERE event_type LIKE N'keeper_HumanEvents_compiles%' \r\n           )\r\n        BEGIN\r\n            INSERT \r\n                #human_events_worker \r\n            ( \r\n                event_type, \r\n                event_type_short, \r\n                is_table_created, \r\n                is_view_created, \r\n                last_checked, \r\n                last_updated, \r\n                output_database, \r\n                output_schema, \r\n                output_table \r\n            )\r\n            SELECT \r\n                event_type + \r\n                N'_parameterization', \r\n                N'', \r\n                1, \r\n                0, \r\n                last_checked, \r\n                last_updated, \r\n                output_database, \r\n                output_schema, \r\n                output_table + N'_parameterization'\r\n            FROM #human_events_worker \r\n            WHERE event_type LIKE N'keeper_HumanEvents_compiles%'\r\n            OPTION (RECOMPILE);\r\n        END;\r\n\r\n        /*Update this column for when we see if we need to create views.*/\r\n        UPDATE hew\r\n            SET hew.event_type_short = \r\n                    CASE \r\n                        WHEN hew.event_type LIKE N'%block%' \r\n                        THEN N'[_]Blocking'\r\n                        WHEN ( hew.event_type LIKE N'%comp%' \r\n                                 AND hew.event_type NOT LIKE N'%re%' )\r\n                        THEN N'[_]Compiles'\r\n                        WHEN hew.event_type LIKE N'%quer%'\r\n                        THEN N'[_]Queries'\r\n                        WHEN hew.event_type LIKE N'%recomp%'\r\n                        THEN N'[_]Recompiles'\r\n                        WHEN hew.event_type LIKE N'%wait%'\r\n                        THEN N'[_]Waits'\r\n                        ELSE N'?'\r\n                    END    \r\n        FROM #human_events_worker AS hew\r\n        WHERE hew.event_type_short = N''\r\n        OPTION(RECOMPILE);\r\n\r\n        IF @debug = 1 BEGIN SELECT N'#human_events_worker' AS table_name, * FROM #human_events_worker OPTION (RECOMPILE); END;\r\n\r\n    END;\r\n\r\n    /*This section is where tables that need tables get created*/\r\n    IF EXISTS\r\n    (\r\n        SELECT \r\n            1/0\r\n        FROM #human_events_worker AS hew\r\n        WHERE hew.is_table_created = 0   \r\n    )\r\n    BEGIN\r\n        RAISERROR(N'Sessions without tables found, starting loop.', 0, 1) WITH NOWAIT;\r\n        \r\n        SELECT \r\n            @min_id = \r\n                MIN(hew.id), \r\n            @max_id = \r\n                MAX(hew.id)\r\n        FROM #human_events_worker AS hew\r\n        WHERE hew.is_table_created = 0\r\n        OPTION (RECOMPILE);\r\n        \r\n        RAISERROR(N'While, while, while...', 0, 1) WITH NOWAIT;\r\n        WHILE @min_id <= @max_id\r\n        BEGIN\r\n            SELECT \r\n                @event_type_check  = \r\n                    hew.event_type,\r\n                @object_name_check = \r\n                    QUOTENAME(hew.output_database) + \r\n                    N'.' + \r\n                    QUOTENAME(hew.output_schema) + \r\n                    N'.' + \r\n                    hew.output_table\r\n            FROM #human_events_worker AS hew\r\n            WHERE hew.id = @min_id\r\n            AND   hew.is_table_created = 0\r\n            OPTION (RECOMPILE);\r\n        \r\n            IF OBJECT_ID(@object_name_check) IS NULL\r\n            BEGIN\r\n            RAISERROR(N'Generating create table statement for %s', 0, 1, @event_type_check) WITH NOWAIT;\r\n                SELECT \r\n                    @table_sql =  \r\n                        CASE \r\n                            WHEN @event_type_check LIKE N'%wait%'\r\n                            THEN N'CREATE TABLE ' + @object_name_check + @nc10 +\r\n                                 N'( id bigint PRIMARY KEY IDENTITY, server_name sysname NULL, event_time datetime2 NULL, event_type sysname NULL,  ' + @nc10 +\r\n                                 N'  database_name sysname NULL, wait_type nvarchar(60) NULL, duration_ms bigint NULL, signal_duration_ms bigint NULL, ' + @nc10 +\r\n                                 N'  wait_resource nvarchar(256) NULL,  query_plan_hash_signed binary(8) NULL, query_hash_signed binary(8) NULL, plan_handle varbinary(64) NULL );'\r\n                            WHEN @event_type_check LIKE N'%lock%'\r\n                            THEN N'CREATE TABLE ' + @object_name_check + @nc10 +\r\n                                 N'( id bigint PRIMARY KEY IDENTITY, server_name sysname NULL, event_time datetime2 NULL, ' + @nc10 +\r\n                                 N'  activity nvarchar(20) NULL, database_name sysname NULL, database_id integer NULL, object_id bigint NULL, contentious_object AS OBJECT_NAME(object_id, database_id), ' + @nc10 +\r\n                                 N'  transaction_id bigint NULL, resource_owner_type nvarchar(256) NULL, monitor_loop integer NULL, spid integer NULL, ecid integer NULL, query_text nvarchar(MAX) NULL, ' + \r\n                                 N'  wait_time bigint NULL, transaction_name nvarchar(256) NULL,  last_transaction_started nvarchar(30) NULL, wait_resource nvarchar(100) NULL, ' + @nc10 +\r\n                                 N'  lock_mode nvarchar(10) NULL, status nvarchar(10) NULL, priority integer NULL, transaction_count integer NULL, ' + @nc10 +\r\n                                 N'  client_app sysname NULL, host_name sysname NULL, login_name sysname NULL, isolation_level nvarchar(30) NULL, sql_handle varbinary(64) NULL, blocked_process_report XML NULL );'\r\n                            WHEN @event_type_check LIKE N'%quer%'\r\n                            THEN N'CREATE TABLE ' + @object_name_check + @nc10 +\r\n                                 N'( id bigint PRIMARY KEY IDENTITY, server_name sysname NULL, event_time datetime2 NULL, event_type sysname NULL, ' + @nc10 +\r\n                                 N'  database_name sysname NULL, object_name nvarchar(512) NULL, sql_text nvarchar(MAX) NULL, statement nvarchar(MAX) NULL, ' + @nc10 +\r\n                                 N'  showplan_xml XML NULL, cpu_ms decimal(18,2) NULL, logical_reads decimal(18,2) NULL, ' + @nc10 +\r\n                                 N'  physical_reads decimal(18,2) NULL,  duration_ms decimal(18,2) NULL, writes_mb decimal(18,2) NULL,' + @nc10 +\r\n                                 N'  spills_mb decimal(18,2) NULL, row_count decimal(18,2) NULL, estimated_rows decimal(18,2) NULL, dop integer NULL,  ' + @nc10 +\r\n                                 N'  serial_ideal_memory_mb decimal(18,2) NULL, requested_memory_mb decimal(18,2) NULL, used_memory_mb decimal(18,2) NULL, ideal_memory_mb decimal(18,2) NULL, ' + @nc10 +\r\n                                 N'  granted_memory_mb decimal(18,2) NULL, query_plan_hash_signed binary(8) NULL, query_hash_signed binary(8) NULL, plan_handle varbinary(64) NULL );'\r\n                            WHEN @event_type_check LIKE N'%recomp%'\r\n                            THEN N'CREATE TABLE ' + @object_name_check + @nc10 +\r\n                                 N'( id bigint PRIMARY KEY IDENTITY, server_name sysname NULL, event_time datetime2 NULL,  event_type sysname NULL,  ' + @nc10 +\r\n                                 N'  database_name sysname NULL, object_name nvarchar(512) NULL, recompile_cause nvarchar(256) NULL, statement_text nvarchar(MAX) NULL, statement_text_checksum AS CHECKSUM(database_name + statement_text) PERSISTED '\r\n                                 + CASE WHEN @compile_events = 1 THEN N', compile_cpu_ms bigint NULL, compile_duration_ms bigint NULL );' ELSE N' );' END\r\n                            WHEN @event_type_check LIKE N'%comp%' AND @event_type_check NOT LIKE N'%re%'\r\n                            THEN N'CREATE TABLE ' + @object_name_check + @nc10 +\r\n                                 N'( id bigint PRIMARY KEY IDENTITY, server_name sysname NULL, event_time datetime2 NULL,  event_type sysname NULL,  ' + @nc10 +\r\n                                 N'  database_name sysname NULL, object_name nvarchar(512) NULL, statement_text nvarchar(MAX) NULL, statement_text_checksum AS CHECKSUM(database_name + statement_text) PERSISTED '\r\n                                 + CASE WHEN @compile_events = 1 THEN N', compile_cpu_ms bigint NULL, compile_duration_ms bigint NULL );' ELSE N' );' END\r\n                                 + CASE WHEN @parameterization_events = 1 \r\n                                        THEN \r\n                                 @nc10 + \r\n                                 N'CREATE TABLE ' + @object_name_check + N'_parameterization' + @nc10 +\r\n                                 N'( id bigint PRIMARY KEY IDENTITY, server_name sysname NULL, event_time datetime2 NULL,  event_type sysname NULL,  ' + @nc10 +\r\n                                 N'  database_name sysname NULL, sql_text nvarchar(MAX) NULL, compile_cpu_time_ms bigint NULL, compile_duration_ms bigint NULL, query_param_type integer NULL,  ' + @nc10 +\r\n                                 N'  is_cached bit NULL, is_recompiled bit NULL, compile_code nvarchar(256) NULL, has_literals bit NULL, is_parameterizable bit NULL, parameterized_values_count bigint NULL, ' + @nc10 +\r\n                                 N'  query_plan_hash binary(8) NULL, query_hash binary(8) NULL, plan_handle varbinary(64) NULL, statement_sql_hash varbinary(64) NULL );'\r\n                                        ELSE N'' \r\n                                   END  \r\n                            ELSE N''\r\n                      END;          \r\n            END;        \r\n            \r\n            IF @debug = 1 BEGIN RAISERROR(@table_sql, 0, 1) WITH NOWAIT; END;\r\n            EXEC sys.sp_executesql \r\n                @table_sql;\r\n            \r\n            RAISERROR(N'Updating #human_events_worker to set is_table_created for %s', 0, 1, @event_type_check) WITH NOWAIT;\r\n            UPDATE #human_events_worker \r\n                SET is_table_created = 1 \r\n            WHERE id = @min_id \r\n            AND is_table_created = 0 \r\n            OPTION (RECOMPILE);\r\n\r\n            IF @debug = 1 BEGIN RAISERROR(N'@min_id: %i', 0, 1, @min_id) WITH NOWAIT; END;\r\n\r\n            RAISERROR(N'Setting next id after %i out of %i total', 0, 1, @min_id, @max_id) WITH NOWAIT;\r\n            \r\n            SET @min_id = \r\n            (\r\n                SELECT TOP (1) \r\n                    hew.id\r\n                FROM #human_events_worker AS hew\r\n                WHERE hew.id > @min_id\r\n                AND   hew.is_table_created = 0\r\n                ORDER BY hew.id\r\n            );\r\n\r\n            IF @debug = 1 BEGIN RAISERROR(N'new @min_id: %i', 0, 1, @min_id) WITH NOWAIT; END;\r\n\r\n            IF @min_id IS NULL BREAK;\r\n\r\n        END;\r\n    END;\r\n\r\n    /*This section handles creating or altering views*/\r\n    IF EXISTS\r\n    (   /* Any views not created */\r\n        SELECT \r\n            1/0\r\n        FROM #human_events_worker AS hew\r\n        WHERE hew.is_table_created = 1\r\n        AND   hew.is_view_created = 0\r\n    ) \r\n    OR \r\n    (   /* If the proc has been modified, maybe views have been added or changed? */\r\n        SELECT \r\n            modify_date \r\n        FROM sys.all_objects\r\n        WHERE type = N'P'\r\n        AND name = N'sp_HumanEvents' \r\n    ) < DATEADD(HOUR, -1, SYSDATETIME())\r\n    BEGIN\r\n\r\n    RAISERROR(N'Found views to create, beginning!', 0, 1) WITH NOWAIT;\r\n\r\n        IF \r\n        (\r\n            SELECT\r\n                COUNT_BIG(*)\r\n            FROM #view_check AS vc\r\n        ) = 0\r\n        BEGIN\r\n            \r\n            RAISERROR(N'#view_check was empty, creating and populating', 0, 1) WITH NOWAIT;\r\n            \r\n            /* These binary values are the view definitions. If I didn't do this, I would have been adding >50k lines of code in here. */\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_Blocking', 0x4300520045004100540045002000560049004500570020005B00640062006F005D002E005B00480075006D0061006E004500760065006E00740073005F0042006C006F0063006B0069006E0067005D000D000A00410053000D000A00530045004C00450043005400200054004F00500020002800320031003400370034003800330036003400370029000D000A00200020002000200020002000200020002000200020006B006800650062002E006500760065006E0074005F00740069006D0065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E00640061007400610062006100730065005F006E0061006D0065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E0063006F006E00740065006E00740069006F00750073005F006F0062006A006500630074002C000D000A00200020002000200020002000200020002000200020006B006800650062002E00610063007400690076006900740079002C000D000A00200020002000200020002000200020002000200020006B006800650062002E0073007000690064002C000D000A00200020002000200020002000200020002000200020006B006800650062002E00710075006500720079005F0074006500780074002C000D000A00200020002000200020002000200020002000200020006B006800650062002E0077006100690074005F00740069006D0065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E007300740061007400750073002C000D000A00200020002000200020002000200020002000200020006B006800650062002E00690073006F006C006100740069006F006E005F006C006500760065006C002C000D000A00200020002000200020002000200020002000200020006B006800650062002E006C006100730074005F007400720061006E00730061006300740069006F006E005F0073007400610072007400650064002C000D000A00200020002000200020002000200020002000200020006B006800650062002E007400720061006E00730061006300740069006F006E005F006E0061006D0065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E006C006F0063006B005F006D006F00640065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E007000720069006F0072006900740079002C000D000A00200020002000200020002000200020002000200020006B006800650062002E007400720061006E00730061006300740069006F006E005F0063006F0075006E0074002C000D000A00200020002000200020002000200020002000200020006B006800650062002E0063006C00690065006E0074005F006100700070002C000D000A00200020002000200020002000200020002000200020006B006800650062002E0068006F00730074005F006E0061006D0065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E006C006F00670069006E005F006E0061006D0065002C000D000A00200020002000200020002000200020002000200020006B006800650062002E0062006C006F0063006B00650064005F00700072006F0063006500730073005F007200650070006F00720074000D000A00460052004F004D002000640062006F002E006B00650065007000650072005F00480075006D0061006E004500760065006E00740073005F0062006C006F0063006B0069006E00670020004100530020006B006800650062000D000A004F00520044004500520020004200590020006B006800650062002E006500760065006E0074005F00740069006D0065002C000D000A00200020002000200020002000200020002000430041005300450020005700480045004E0020006B006800650062002E006100630074006900760069007400790020003D002000270062006C006F0063006B0069006E006700270020005400480045004E00200031000D000A002000200020002000200020002000200020002000200020002000200045004C0053004500200039003900390020000D000A0020002000200020002000200020002000200045004E0044000D000A00200020002000200020002000200020002000;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_CompilesByDatabaseAndObject', 0xr\n            WHERE @compile_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_CompilesByDuration', 0xr\n            WHERE @compile_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_CompilesByQuery', 0xr\n            WHERE @compile_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_Parameterization', 0xr\n            WHERE @parameterization_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_Queries', 0xr\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_RecompilesByDatabaseAndObject', 0xr\n            WHERE @compile_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_RecompilesByDuration', 0xr\n            WHERE @compile_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_RecompilesByQuery', 0xr\n            WHERE @compile_events = 1;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_WaitsByDatabase', r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_WaitsByQueryAndDatabase', 0xr\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_WaitsTotal', 0xr\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_Compiles_Legacy', 0x430052004500410054004500200056004900450057002000640062006F002E00480075006D0061006E004500760065006E00740073005F0043006F006D00700069006C00650073005F004C00650067006100630079000D000A00410053000D000A00530045004C00450043005400200054004F00500020002800320031003400370034003800330036003400380029000D000A0020002000200020002000200020006500760065006E0074005F00740069006D0065002C000D000A0020002000200020002000200020006500760065006E0074005F0074007900700065002C000D000A002000200020002000200020002000640061007400610062006100730065005F006E0061006D0065002C000D000A0020002000200020002000200020006F0062006A006500630074005F006E0061006D0065002C000D000A002000200020002000200020002000730074006100740065006D0065006E0074005F0074006500780074000D000A00460052004F004D0020005B007200650070006C006100630065005F006D0065005D000D000A004F00520044004500520020004200590020006500760065006E0074005F00740069006D0065003B00\r\n            WHERE @compile_events = 0;\r\n            INSERT #view_check (view_name, view_definition)\r\n            SELECT N'HumanEvents_Recompiles_Legacy', 0xr\n            WHERE @compile_events = 0;\r\n\r\n            RAISERROR(N'Updating #view_check with output database (%s) and schema (%s)', 0, 1, @output_database_name, @output_schema_name) WITH NOWAIT;\r\n            UPDATE #view_check \r\n                SET \r\n                    output_database = @output_database_name, \r\n                    output_schema = @output_schema_name \r\n            OPTION(RECOMPILE);\r\n            \r\n            RAISERROR(N'Updating #view_check with table names', 0, 1) WITH NOWAIT;\r\n            UPDATE vc \r\n                SET \r\n                    vc.output_table = hew.output_table\r\n            FROM #view_check AS vc\r\n            JOIN #human_events_worker AS hew\r\n                ON  vc.view_name LIKE N'%' + hew.event_type_short + N'%'\r\n                AND hew.is_table_created = 1\r\n                AND hew.is_view_created = 0\r\n            OPTION(RECOMPILE);\r\n        \r\n            UPDATE vc \r\n                SET \r\n                    vc.output_table = hew.output_table + N'_parameterization'\r\n            FROM #view_check AS vc\r\n            JOIN #human_events_worker AS hew\r\n                ON  vc.view_name = N'HumanEvents_Parameterization'\r\n                AND hew.output_table LIKE N'keeper_HumanEvents_compiles%'\r\n                AND hew.is_table_created = 1\r\n                AND hew.is_view_created = 0\r\n            OPTION(RECOMPILE);\r\n        \r\n            IF @debug = 1 BEGIN SELECT N'#view_check' AS table_name, * FROM #view_check AS vc OPTION(RECOMPILE); END;\r\n        \r\n        END;\r\n        \r\n        IF (@view_tracker IS NULL\r\n                OR @view_tracker = 0 )\r\n        BEGIN \r\n            RAISERROR(N'Starting view creation loop', 0, 1) WITH NOWAIT;\r\n            \r\n            SELECT \r\n               @min_id = MIN(vc.id), \r\n               @max_id = MAX(vc.id)\r\n            FROM #view_check AS vc\r\n            WHERE vc.output_table <> N''\r\n            AND   EXISTS\r\n            (\r\n                SELECT \r\n                    1/0\r\n                FROM #human_events_worker AS hew\r\n                WHERE vc.view_name LIKE N'%' + hew.event_type_short + N'%'\r\n                AND hew.is_table_created = 1\r\n                AND hew.is_view_created = 0\r\n            )\r\n            OPTION(RECOMPILE);\r\n            \r\n                WHILE @min_id <= @max_id\r\n                BEGIN\r\n                                \r\n                    SELECT \r\n                        @event_type_check  = \r\n                            LOWER(vc.view_name),\r\n                        @object_name_check = \r\n                            QUOTENAME(vc.output_database) + \r\n                            N'.' + \r\n                            QUOTENAME(vc.output_schema) + \r\n                            N'.' + \r\n                            QUOTENAME(vc.view_name),\r\n                        @view_database = \r\n                            QUOTENAME(vc.output_database),\r\n                        @view_sql = \r\n                            REPLACE\r\n                            (\r\n                                REPLACE\r\n                                (\r\n                                    REPLACE\r\n                                    ( \r\n                                        vc.view_converted, \r\n                                        N'[replace_me]', \r\n                                        QUOTENAME(vc.output_schema)  + \r\n                                        N'.'  + \r\n                                        vc.output_table \r\n                                    ),\r\n                                    N'[dbo]' + \r\n                                    '.' + \r\n                                    QUOTENAME(vc.view_name),\r\n                                    QUOTENAME(vc.output_schema) + \r\n                                    '.' + \r\n                                    QUOTENAME(vc.view_name) \r\n                                ),\r\n                                N'', \r\n                                N'''' \r\n                            )\r\n                    FROM #view_check AS vc\r\n                    WHERE vc.id = @min_id\r\n                    AND   vc.output_table <> N'';\r\n                \r\n                    IF OBJECT_ID(@object_name_check) IS NOT NULL\r\n                    BEGIN\r\n                      RAISERROR(N'Uh oh, found a view', 0, 1) WITH NOWAIT;\r\n                      SET \r\n                          @view_sql = \r\n                              REPLACE\r\n                              (\r\n                                  @view_sql, \r\n                                  N'CREATE VIEW', \r\n                                  N'ALTER VIEW'\r\n                              );\r\n                    END;\r\n                    \r\n                    SELECT @spe = @view_database + @spe;\r\n                    \r\n                    IF @debug = 1 BEGIN RAISERROR(@spe, 0, 1) WITH NOWAIT; END;\r\n            \r\n                    IF @debug = 1\r\n                    BEGIN \r\n                        PRINT SUBSTRING(@view_sql, 0, 4000);\r\n                        PRINT SUBSTRING(@view_sql, 4000, 8000);\r\n                        PRINT SUBSTRING(@view_sql, 8000, 12000);\r\n                        PRINT SUBSTRING(@view_sql, 12000, 16000);\r\n                        PRINT SUBSTRING(@view_sql, 16000, 20000);\r\n                        PRINT SUBSTRING(@view_sql, 20000, 24000);\r\n                        PRINT SUBSTRING(@view_sql, 24000, 28000);\r\n                        PRINT SUBSTRING(@view_sql, 28000, 32000);\r\n                        PRINT SUBSTRING(@view_sql, 32000, 36000);\r\n                        PRINT SUBSTRING(@view_sql, 36000, 40000);           \r\n                    END;\r\n                    \r\n                    RAISERROR(N'creating view %s', 0, 1, @event_type_check) WITH NOWAIT;\r\n                    EXEC @spe @view_sql;\r\n            \r\n                    IF @debug = 1 BEGIN RAISERROR(N'@min_id: %i', 0, 1, @min_id) WITH NOWAIT; END;\r\n            \r\n                    RAISERROR(N'Setting next id after %i out of %i total', 0, 1, @min_id, @max_id) WITH NOWAIT;\r\n                    \r\n                    SET @min_id = \r\n                    (\r\n                        SELECT TOP (1) \r\n                            vc.id\r\n                        FROM #view_check AS vc\r\n                        WHERE vc.id > @min_id\r\n                        AND   vc.output_table <> N''\r\n                        ORDER BY vc.id\r\n                    );\r\n            \r\n                    IF @debug = 1 BEGIN RAISERROR(N'new @min_id: %i', 0, 1, @min_id) WITH NOWAIT; END;\r\n            \r\n                    IF @min_id IS NULL BREAK;\r\n            \r\n                    SET @spe = N'.sys.sp_executesql ';\r\n            \r\n                END;\r\n            \r\n                UPDATE #human_events_worker \r\n                    SET \r\n                        is_view_created = 1 \r\n                OPTION(RECOMPILE);\r\n                SET @view_tracker = 1;        \r\n        END;\r\n    END;\r\n\r\n    /*This section handles inserting data into tables*/\r\n    IF EXISTS\r\n    (\r\n        SELECT \r\n            1/0\r\n        FROM #human_events_worker AS hew\r\n        WHERE hew.is_table_created = 1\r\n        AND   hew.last_checked < DATEADD(SECOND, -5, SYSDATETIME())\r\n    )\r\n    BEGIN\r\n    \r\n        RAISERROR(N'Sessions that need data found, starting loop.', 0, 1) WITH NOWAIT;\r\n        \r\n        SELECT \r\n            @min_id = MIN(hew.id), \r\n            @max_id = MAX(hew.id)\r\n        FROM #human_events_worker AS hew\r\n        WHERE hew.is_table_created = 1\r\n        OPTION (RECOMPILE);\r\n\r\n        WHILE @min_id <= @max_id\r\n        BEGIN\r\n\r\n            SELECT \r\n                @event_type_check  = \r\n                    hew.event_type,\r\n                @object_name_check = \r\n                    QUOTENAME(hew.output_database) + \r\n                    N'.' + \r\n                    QUOTENAME(hew.output_schema) + \r\n                    N'.' + \r\n                    hew.output_table,\r\n                @date_filter = \r\n                    DATEADD\r\n                    (\r\n                        MINUTE, \r\n                        DATEDIFF\r\n                        (\r\n                            MINUTE, \r\n                            SYSDATETIME(), \r\n                            GETUTCDATE()\r\n                        ), \r\n                        hew.last_checked\r\n                    )\r\n            FROM #human_events_worker AS hew\r\n            WHERE hew.id = @min_id\r\n            AND hew.is_table_created = 1;\r\n        \r\n            IF OBJECT_ID(@object_name_check) IS NOT NULL\r\n            BEGIN\r\n            RAISERROR(N'Generating insert table statement for %s', 0, 1, @event_type_check) WITH NOWAIT;\r\n                SELECT \r\n                    @table_sql =  \r\n                        CASE \r\n                        WHEN @event_type_check LIKE N'%wait%' /*Wait stats!*/\r\n                        THEN N'INSERT INTO ' + @object_name_check + N' WITH(TABLOCK) ' + @nc10 + \r\n                             N'( server_name, event_time, event_type, database_name, wait_type, duration_ms, ' + @nc10 +\r\n                             N'  signal_duration_ms, wait_resource,  query_plan_hash_signed, query_hash_signed, plan_handle )' + @nc10 +\r\n                             N'SELECT \r\n        @@SERVERNAME,\r\n        DATEADD\r\n        (\r\n            MINUTE, \r\n            DATEDIFF\r\n            (\r\n                 MINUTE, \r\n                 GETUTCDATE(), \r\n                 SYSDATETIME()\r\n             ), \r\n             c.value(''@timestamp'', ''datetime2'')\r\n        ) AS event_time,\r\n        c.value(''@name'', ''nvarchar(256)'') AS event_type,\r\n        c.value(''(action[@name=\"database_name\"]/value)[1]'', ''nvarchar(256)'') AS database_name,                \r\n        c.value(''(data[@name=\"wait_type\"]/text)[1]'', ''nvarchar(256)'') AS wait_type,\r\n        c.value(''(data[@name=\"duration\"]/value)[1]'', ''bigint'')  AS duration_ms,\r\n        c.value(''(data[@name=\"signal_duration\"]/value)[1]'', ''bigint'') AS signal_duration_ms,' + @nc10 +\r\nCASE \r\n    WHEN @v = 11 /*We can't get the wait resource on older versions of SQL Server*/\r\n    THEN N'        ''Not Available < 2014'', ' + @nc10\r\n    ELSE N'        c.value(''(data[@name=\"wait_resource\"]/value)[1]'', ''nvarchar(256)'')  AS wait_resource, ' + @nc10\r\nEND + N'        CONVERT\r\n                (\r\n                    binary(8), \r\n                    c.value(''(action[@name=\"query_plan_hash_signed\"]/value)[1]'', ''bigint'')\r\n                ) AS query_plan_hash_signed,\r\n        CONVERT\r\n        (\r\n            binary(8), \r\n            c.value(''(action[@name=\"query_hash_signed\"]/value)[1]'', ''bigint'')\r\n        ) AS query_hash_signed,\r\n        c.value(''xs:hexBinary((action[@name=\"plan_handle\"]/value/text())[1])'', ''varbinary(64)'') AS plan_handle\r\nFROM #human_events_xml_internal AS xet\r\nOUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\nWHERE c.exist(''(data[@name=\"duration\"]/value/text()[. > 0])'') = 1 \r\nAND   c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\nOPTION(RECOMPILE);'\r\n                        WHEN @event_type_check LIKE N'%lock%' /*Blocking!*/\r\n                                                              /*To cut down on nonsense, I'm only inserting new blocking scenarios*/\r\n                                                              /*Any existing blocking scenarios will update the blocking duration*/\r\n                        THEN N'INSERT INTO ' + @object_name_check + N' WITH(TABLOCK) ' + @nc10 + \r\n                             N'( server_name, event_time, activity, database_name, database_id, object_id, ' + @nc10 +\r\n                             N'  transaction_id, resource_owner_type, monitor_loop, spid, ecid, query_text, wait_time, ' + @nc10 +\r\n                             N'  transaction_name,  last_transaction_started, wait_resource, lock_mode, status, priority, ' + @nc10 +\r\n                             N'  transaction_count, client_app, host_name, login_name, isolation_level, sql_handle, blocked_process_report )' + @nc10 +\r\nN'\r\nSELECT server_name, event_time, activity, database_name, database_id, object_id, \r\n       transaction_id, resource_owner_type, monitor_loop, spid, ecid, text, waittime, \r\n       transactionname,  lasttranstarted, wait_resource, lockmode, status, priority, \r\n       trancount, clientapp, hostname, loginname, isolationlevel, sqlhandle, process_report\r\nFROM \r\n( \r\n    SELECT \r\n        x.*, \r\n        x = \r\n            ROW_NUMBER() \r\n                OVER\r\n                ( \r\n                    PARTITION BY \r\n                        x.spid, \r\n                        x.ecid, \r\n                        x.transaction_id, \r\n                        x.activity \r\n                    ORDER BY     \r\n                        x.spid, \r\n                        x.ecid, \r\n                        x.transaction_id, \r\n                        x.activity \r\n                )\r\n    FROM \r\n    (\r\n        SELECT \r\n            @@SERVERNAME AS server_name,\r\n            DATEADD\r\n            (\r\n                MINUTE, \r\n                DATEDIFF\r\n                (\r\n                    MINUTE, \r\n                    GETUTCDATE(), \r\n                    SYSDATETIME()\r\n                ), c.value(''@timestamp'', ''datetime2'')\r\n            ) AS event_time,        \r\n            ''blocked'' AS activity,\r\n            DB_NAME(c.value(''(data[@name=\"database_id\"]/value)[1]'', ''int'')) AS database_name,\r\n            c.value(''(data[@name=\"database_id\"]/value)[1]'', ''int'') AS database_id,\r\n            c.value(''(data[@name=\"object_id\"]/value)[1]'', ''int'') AS object_id,\r\n            c.value(''(data[@name=\"transaction_id\"]/value)[1]'', ''bigint'') AS transaction_id,\r\n            c.value(''(data[@name=\"resource_owner_type\"]/text)[1]'', ''nvarchar(256)'') AS resource_owner_type,\r\n            c.value(''(//@monitorLoop)[1]'', ''int'') AS monitor_loop,\r\n            bd.value(''(process/@spid)[1]'', ''int'') AS spid,\r\n            bd.value(''(process/@ecid)[1]'', ''int'') AS ecid,\r\n            bd.value(''(process/inputbuf/text())[1]'', ''nvarchar(MAX)'') AS text,\r\n            bd.value(''(process/@waittime)[1]'', ''bigint'') AS waittime,\r\n            bd.value(''(process/@transactionname)[1]'', ''nvarchar(256)'') AS transactionname,\r\n            bd.value(''(process/@lasttranstarted)[1]'', ''datetime2'') AS lasttranstarted,\r\n            bd.value(''(process/@waitresource)[1]'', ''nvarchar(100)'') AS wait_resource,\r\n            bd.value(''(process/@lockMode)[1]'', ''nvarchar(10)'') AS lockmode,\r\n            bd.value(''(process/@status)[1]'', ''nvarchar(10)'') AS status,\r\n            bd.value(''(process/@priority)[1]'', ''int'') AS priority,\r\n            bd.value(''(process/@trancount)[1]'', ''int'') AS trancount,\r\n            bd.value(''(process/@clientapp)[1]'', ''nvarchar(256)'') AS clientapp,\r\n            bd.value(''(process/@hostname)[1]'', ''nvarchar(256)'') AS hostname,\r\n            bd.value(''(process/@loginname)[1]'', ''nvarchar(256)'') AS loginname,\r\n            bd.value(''(process/@isolationlevel)[1]'', ''nvarchar(50)'') AS isolationlevel,\r\n            CONVERT\r\n            (\r\n                varbinary(64), \r\n                bd.value(''(process/executionStack/frame/@sqlhandle)[1]'', ''nvarchar(100)'')\r\n            ) AS sqlhandle,\r\n            c.query(''.'') AS process_report\r\n        FROM #human_events_xml_internal AS xet\r\n        OUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\n        OUTER APPLY oa.c.nodes(''//blocked-process-report/blocked-process'') AS bd(bd)\r\n        WHERE c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\n        \r\n        UNION ALL\r\n        \r\n        SELECT \r\n            @@SERVERNAME AS server_name,\r\n            DATEADD\r\n            (\r\n                MINUTE, \r\n                DATEDIFF\r\n                (\r\n                    MINUTE, \r\n                    GETUTCDATE(), \r\n                    SYSDATETIME()\r\n                ), \r\n                c.value(''@timestamp'', ''datetime2'')\r\n            ) AS event_time,        \r\n            ''blocking'' AS activity,\r\n            DB_NAME(c.value(''(data[@name=\"database_id\"]/value)[1]'', ''int'')) AS database_name,\r\n            c.value(''(data[@name=\"database_id\"]/value)[1]'', ''int'') AS database_id,\r\n            c.value(''(data[@name=\"object_id\"]/value)[1]'', ''int'') AS object_id,\r\n            c.value(''(data[@name=\"transaction_id\"]/value)[1]'', ''bigint'') AS transaction_id,\r\n            c.value(''(data[@name=\"resource_owner_type\"]/text)[1]'', ''nvarchar(256)'') AS resource_owner_type,\r\n            c.value(''(//@monitorLoop)[1]'', ''int'') AS monitor_loop,\r\n            bg.value(''(process/@spid)[1]'', ''int'') AS spid,\r\n            bg.value(''(process/@ecid)[1]'', ''int'') AS ecid,\r\n            bg.value(''(process/inputbuf/text())[1]'', ''nvarchar(MAX)'') AS text,\r\n            NULL AS waittime,\r\n            NULL AS transactionname,\r\n            NULL AS lasttranstarted,\r\n            NULL AS wait_resource,\r\n            NULL AS lockmode,\r\n            bg.value(''(process/@status)[1]'', ''nvarchar(10)'') AS status,\r\n            bg.value(''(process/@priority)[1]'', ''int'') AS priority,\r\n            bg.value(''(process/@trancount)[1]'', ''int'') AS trancount,\r\n            bg.value(''(process/@clientapp)[1]'', ''nvarchar(256)'') AS clientapp,\r\n            bg.value(''(process/@hostname)[1]'', ''nvarchar(256)'') AS hostname,\r\n            bg.value(''(process/@loginname)[1]'', ''nvarchar(256)'') AS loginname,\r\n            bg.value(''(process/@isolationlevel)[1]'', ''nvarchar(50)'') AS isolationlevel,\r\n            NULL AS sqlhandle,\r\n            c.query(''.'') AS process_report\r\n        FROM #human_events_xml_internal AS xet\r\n        OUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\n        OUTER APPLY oa.c.nodes(''//blocked-process-report/blocking-process'') AS bg(bg)\r\n        WHERE c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\n    ) AS x\r\n) AS x\r\nWHERE NOT EXISTS\r\n(\r\n    SELECT \r\n        1/0\r\n    FROM ' + @object_name_check + N' AS x2\r\n    WHERE x.database_id = x2.database_id\r\n    AND   x.object_id = x2.object_id\r\n    AND   x.transaction_id = x2.transaction_id\r\n    AND   x.spid = x2.spid\r\n    AND   x.ecid = x2.ecid\r\n    AND   x.clientapp = x2.client_app\r\n    AND   x.hostname = x2.host_name\r\n    AND   x.loginname = x2.login_name\r\n)\r\nAND x.x = 1\r\nOPTION (RECOMPILE);\r\n\r\nUPDATE x2\r\n    SET \r\n        x2.wait_time = x.waittime\r\nFROM ' + @object_name_check + N' AS x2\r\nJOIN \r\n(\r\n    SELECT \r\n        @@SERVERNAME AS server_name,       \r\n        ''blocked'' AS activity,\r\n        c.value(''(data[@name=\"database_id\"]/value)[1]'', ''int'') AS database_id,\r\n        c.value(''(data[@name=\"object_id\"]/value)[1]'', ''int'') AS object_id,\r\n        c.value(''(data[@name=\"transaction_id\"]/value)[1]'', ''bigint'') AS transaction_id,\r\n        c.value(''(//@monitorLoop)[1]'', ''int'') AS monitor_loop,\r\n        bd.value(''(process/@spid)[1]'', ''int'') AS spid,\r\n        bd.value(''(process/@ecid)[1]'', ''int'') AS ecid,\r\n        bd.value(''(process/@waittime)[1]'', ''bigint'') AS waittime,\r\n        bd.value(''(process/@clientapp)[1]'', ''nvarchar(256)'') AS clientapp,\r\n        bd.value(''(process/@hostname)[1]'', ''nvarchar(256)'') AS hostname,\r\n        bd.value(''(process/@loginname)[1]'', ''nvarchar(256)'') AS loginname\r\n    FROM #human_events_xml_internal AS xet\r\n    OUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\n    OUTER APPLY oa.c.nodes(''//blocked-process-report/blocked-process'') AS bd(bd)\r\n    WHERE c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\n) AS x\r\n    ON    x.database_id = x2.database_id\r\n    AND   x.object_id = x2.object_id\r\n    AND   x.transaction_id = x2.transaction_id\r\n    AND   x.spid = x2.spid\r\n    AND   x.ecid = x2.ecid\r\n    AND   x.clientapp = x2.client_app\r\n    AND   x.hostname = x2.host_name\r\n    AND   x.loginname = x2.login_name\r\nOPTION (RECOMPILE);\r\n'\r\n                       WHEN @event_type_check LIKE N'%quer%' /*Queries!*/\r\n                       THEN N'INSERT INTO ' + @object_name_check + N' WITH(TABLOCK) ' + @nc10 + \r\n                            N'( server_name, event_time, event_type, database_name, object_name, sql_text, statement, ' + @nc10 +\r\n                            N'  showplan_xml, cpu_ms, logical_reads, physical_reads, duration_ms, writes_mb, ' + @nc10 +\r\n                            N'  spills_mb, row_count, estimated_rows, dop,  serial_ideal_memory_mb, ' + @nc10 +\r\n                            N'  requested_memory_mb, used_memory_mb, ideal_memory_mb, granted_memory_mb, ' + @nc10 +\r\n                            N'  query_plan_hash_signed, query_hash_signed, plan_handle )' + @nc10 +\r\n                            N'SELECT \r\n    @@SERVERNAME, \r\n    DATEADD\r\n    (\r\n        MINUTE, \r\n        DATEDIFF\r\n        (\r\n            MINUTE, \r\n            GETUTCDATE(), \r\n            SYSDATETIME()\r\n        ), \r\n        c.value(''@timestamp'', ''datetime2'')\r\n    ) AS event_time,\r\n    c.value(''@name'', ''nvarchar(256)'') AS event_type,\r\n    c.value(''(action[@name=\"database_name\"]/value)[1]'', ''nvarchar(256)'') AS database_name,                \r\n    c.value(''(data[@name=\"object_name\"]/value)[1]'', ''nvarchar(256)'') AS [object_name],\r\n    c.value(''(action[@name=\"sql_text\"]/value)[1]'', ''nvarchar(MAX)'') AS sql_text,\r\n    c.value(''(data[@name=\"statement\"]/value)[1]'', ''nvarchar(MAX)'') AS statement,\r\n    c.query(''(data[@name=\"showplan_xml\"]/value/*)[1]'') AS [showplan_xml],\r\n    c.value(''(data[@name=\"cpu_time\"]/value)[1]'', ''bigint'') / 1000. AS cpu_ms,\r\n   (c.value(''(data[@name=\"logical_reads\"]/value)[1]'', ''bigint'') * 8) / 1024. AS logical_reads,\r\n   (c.value(''(data[@name=\"physical_reads\"]/value)[1]'', ''bigint'') * 8) / 1024. AS physical_reads,\r\n    c.value(''(data[@name=\"duration\"]/value)[1]'', ''bigint'') / 1000. AS duration_ms,\r\n   (c.value(''(data[@name=\"writes\"]/value)[1]'', ''bigint'') * 8) / 1024. AS writes_mb,\r\n   (c.value(''(data[@name=\"spills\"]/value)[1]'', ''bigint'') * 8) / 1024. AS spills_mb,\r\n    c.value(''(data[@name=\"row_count\"]/value)[1]'', ''bigint'') AS row_count,\r\n    c.value(''(data[@name=\"estimated_rows\"]/value)[1]'', ''bigint'') AS estimated_rows,\r\n    c.value(''(data[@name=\"dop\"]/value)[1]'', ''int'') AS dop,\r\n    c.value(''(data[@name=\"serial_ideal_memory_kb\"]/value)[1]'', ''bigint'') / 1024. AS serial_ideal_memory_mb,\r\n    c.value(''(data[@name=\"requested_memory_kb\"]/value)[1]'', ''bigint'') / 1024. AS requested_memory_mb,\r\n    c.value(''(data[@name=\"used_memory_kb\"]/value)[1]'', ''bigint'') / 1024. AS used_memory_mb,\r\n    c.value(''(data[@name=\"ideal_memory_kb\"]/value)[1]'', ''bigint'') / 1024. AS ideal_memory_mb,\r\n    c.value(''(data[@name=\"granted_memory_kb\"]/value)[1]'', ''bigint'') / 1024. AS granted_memory_mb,\r\n    CONVERT\r\n    (\r\n        binary(8), \r\n        c.value(''(action[@name=\"query_plan_hash_signed\"]/value)[1]'', ''bigint'')\r\n    ) AS query_plan_hash_signed,\r\n    CONVERT\r\n    (\r\n        binary(8), \r\n        c.value(''(action[@name=\"query_hash_signed\"]/value)[1]'', ''bigint'')\r\n    ) AS query_hash_signed,\r\n    c.value(''xs:hexBinary((action[@name=\"plan_handle\"]/value/text())[1])'', ''varbinary(64)'') AS plan_handle\r\nFROM #human_events_xml_internal AS xet\r\nOUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\nWHERE c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\nAND   c.exist(''(action[@name=\"query_hash_signed\"]/value[. != 0])'') = 1\r\nOPTION(RECOMPILE); '\r\n                       WHEN @event_type_check LIKE N'%recomp%' /*Recompiles!*/\r\n                       THEN N'INSERT INTO ' + @object_name_check + N' WITH(TABLOCK) ' + @nc10 + \r\n                            N'( server_name, event_time,  event_type,  ' + @nc10 +\r\n                            N'  database_name, object_name, recompile_cause, statement_text '\r\n                            + CASE WHEN @compile_events = 1 THEN N', compile_cpu_ms, compile_duration_ms )' ELSE N' )' END + @nc10 +\r\n                            N'SELECT \r\n    @@SERVERNAME,\r\n    DATEADD\r\n    (\r\n        MINUTE, \r\n        DATEDIFF\r\n        (\r\n            MINUTE, \r\n            GETUTCDATE(), \r\n            SYSDATETIME()\r\n        ), c.value(''@timestamp'', ''datetime2'')\r\n    ) AS event_time,\r\n    c.value(''@name'', ''nvarchar(256)'') AS event_type,\r\n    c.value(''(action[@name=\"database_name\"]/value)[1]'', ''nvarchar(256)'') AS database_name,                \r\n    c.value(''(data[@name=\"object_name\"]/value)[1]'', ''nvarchar(256)'') AS [object_name],\r\n    c.value(''(data[@name=\"recompile_cause\"]/text)[1]'', ''nvarchar(256)'') AS recompile_cause,\r\n    c.value(''(data[@name=\"statement\"]/value)[1]'', ''nvarchar(MAX)'') AS statement_text '\r\n   + CASE WHEN @compile_events = 1 /*Only get these columns if we're using the newer XE: sql_statement_post_compile*/\r\n          THEN \r\n   N'  , \r\n    c.value(''(data[@name=\"cpu_time\"]/value)[1]'', ''bigint'') AS compile_cpu_ms,\r\n    c.value(''(data[@name=\"duration\"]/value)[1]'', ''bigint'') AS compile_duration_ms'\r\n          ELSE N''\r\n     END + N'\r\nFROM #human_events_xml_internal AS xet\r\nOUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\nWHERE 1 = 1 '\r\n      + CASE WHEN @compile_events = 1 /*Same here, where we need to filter data*/\r\n             THEN \r\nN'\r\nAND c.exist(''(data[@name=\"is_recompile\"]/value[. = \"false\"])'') = 0 '\r\n             ELSE N''\r\n        END + N'\r\nAND c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\nORDER BY event_time\r\nOPTION (RECOMPILE);'\r\n                       WHEN @event_type_check LIKE N'%comp%' AND @event_type_check NOT LIKE N'%re%' /*Compiles!*/\r\n                       THEN N'INSERT INTO ' + REPLACE(@object_name_check, N'_parameterization', N'') + N' WITH(TABLOCK) ' + @nc10 + \r\n                            N'( server_name, event_time,  event_type,  ' + @nc10 +\r\n                            N'  database_name, object_name, statement_text '\r\n                            + CASE WHEN @compile_events = 1 THEN N', compile_cpu_ms, compile_duration_ms )' ELSE N' )' END + @nc10 +\r\n                            N'SELECT \r\n    @@SERVERNAME,\r\n    DATEADD\r\n    (\r\n        MINUTE, \r\n        DATEDIFF\r\n        (\r\n            MINUTE, \r\n            GETUTCDATE(), \r\n            SYSDATETIME()\r\n        ), \r\n        c.value(''@timestamp'', ''datetime2'')\r\n    ) AS event_time,\r\n    c.value(''@name'', ''nvarchar(256)'') AS event_type,\r\n    c.value(''(action[@name=\"database_name\"]/value)[1]'', ''nvarchar(256)'') AS database_name,                \r\n    c.value(''(data[@name=\"object_name\"]/value)[1]'', ''nvarchar(256)'') AS [object_name],\r\n    c.value(''(data[@name=\"statement\"]/value)[1]'', ''nvarchar(MAX)'') AS statement_text '\r\n   + CASE WHEN @compile_events = 1 /*Only get these columns if we're using the newer XE: sql_statement_post_compile*/\r\n          THEN \r\n   N'  , \r\n    c.value(''(data[@name=\"cpu_time\"]/value)[1]'', ''bigint'') AS compile_cpu_ms,\r\n    c.value(''(data[@name=\"duration\"]/value)[1]'', ''bigint'') AS compile_duration_ms'\r\n          ELSE N''\r\n     END + N'\r\nFROM #human_events_xml_internal AS xet\r\nOUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\nWHERE 1 = 1 '\r\n      + CASE WHEN @compile_events = 1 /*Just like above*/\r\n             THEN \r\nN' \r\nAND c.exist(''(data[@name=\"is_recompile\"]/value[. = \"false\"])'') = 1 '\r\n             ELSE N''\r\n        END + N'\r\nAND   c.exist(''@name[.= \"sql_statement_post_compile\"]'') = 1\r\nAND   c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\nORDER BY event_time\r\nOPTION (RECOMPILE);' + @nc10\r\n                            + CASE WHEN @parameterization_events = 1 /*The query_parameterization_data XE is only 2017+*/\r\n                                   THEN \r\n                            @nc10 + \r\n                            N'INSERT INTO ' + REPLACE(@object_name_check, N'_parameterization', N'') + N'_parameterization' + N' WITH(TABLOCK) ' + @nc10 + \r\n                            N'( server_name, event_time,  event_type, database_name, sql_text, compile_cpu_time_ms, ' + @nc10 +\r\n                            N'  compile_duration_ms, query_param_type, is_cached, is_recompiled, compile_code, has_literals, ' + @nc10 +\r\n                            N'  is_parameterizable, parameterized_values_count, query_plan_hash, query_hash, plan_handle, statement_sql_hash ) ' + @nc10 +\r\n                            N'SELECT \r\n    @@SERVERNAME,\r\n    DATEADD\r\n    (\r\n        MINUTE, \r\n        DATEDIFF\r\n        (\r\n            MINUTE, \r\n            GETUTCDATE(), \r\n            SYSDATETIME()\r\n        ), \r\n        c.value(''@timestamp'', ''datetime2'')\r\n    ) AS event_time,\r\n    c.value(''@name'', ''nvarchar(256)'') AS event_type,\r\n    c.value(''(action[@name=\"database_name\"]/value)[1]'', ''nvarchar(256)'') AS database_name,                \r\n    c.value(''(action[@name=\"sql_text\"]/value)[1]'', ''nvarchar(MAX)'') AS sql_text,\r\n    c.value(''(data[@name=\"compile_cpu_time\"]/value)[1]'', ''bigint'') / 1000. AS compile_cpu_time_ms,\r\n    c.value(''(data[@name=\"compile_duration\"]/value)[1]'', ''bigint'') / 1000. AS compile_duration_ms,\r\n    c.value(''(data[@name=\"query_param_type\"]/value)[1]'', ''int'') AS query_param_type,\r\n    c.value(''(data[@name=\"is_cached\"]/value)[1]'', ''bit'') AS is_cached,\r\n    c.value(''(data[@name=\"is_recompiled\"]/value)[1]'', ''bit'') AS is_recompiled,\r\n    c.value(''(data[@name=\"compile_code\"]/text)[1]'', ''nvarchar(256)'') AS compile_code,                  \r\n    c.value(''(data[@name=\"has_literals\"]/value)[1]'', ''bit'') AS has_literals,\r\n    c.value(''(data[@name=\"is_parameterizable\"]/value)[1]'', ''bit'') AS is_parameterizable,\r\n    c.value(''(data[@name=\"parameterized_values_count\"]/value)[1]'', ''bigint'') AS parameterized_values_count,\r\n    c.value(''xs:hexBinary((data[@name=\"query_plan_hash\"]/value/text())[1])'', ''binary(8)'') AS query_plan_hash,\r\n    c.value(''xs:hexBinary((data[@name=\"query_hash\"]/value/text())[1])'', ''binary(8)'') AS query_hash,\r\n    c.value(''xs:hexBinary((action[@name=\"plan_handle\"]/value/text())[1])'', ''varbinary(64)'') AS plan_handle, \r\n    c.value(''xs:hexBinary((data[@name=\"statement_sql_hash\"]/value/text())[1])'', ''varbinary(64)'') AS statement_sql_hash\r\nFROM #human_events_xml_internal AS xet\r\nOUTER APPLY xet.human_events_xml.nodes(''//event'') AS oa(c)\r\nWHERE c.exist(''@name[.= \"query_parameterization_data\"]'') = 1\r\nAND   c.exist(''(data[@name=\"is_recompiled\"]/value[. = \"false\"])'') = 1\r\nAND   c.exist(''@timestamp[. > sql:variable(\"@date_filter\")]'') = 1\r\nORDER BY event_time\r\nOPTION (RECOMPILE);'\r\n                                   ELSE N'' \r\n                              END  \r\n                       ELSE N''\r\n                  END;\r\n            \r\n            /* this table is only used for the inserts, hence the \"internal\" in the name */\r\n            IF @azure = 0\r\n            BEGIN\r\n                SELECT \r\n                    @x = \r\n                        CONVERT(xml, t.target_data)\r\n                FROM   sys.dm_xe_session_targets AS t\r\n                JOIN   sys.dm_xe_sessions AS s\r\n                    ON s.address = t.event_session_address\r\n                WHERE  s.name = @event_type_check\r\n                AND    t.target_name = N'ring_buffer';\r\n            END;\r\n            ELSE\r\n            BEGIN\r\n                SELECT \r\n                    @x = \r\n                        CONVERT(xml, t.target_data)\r\n                FROM   sys.dm_xe_database_session_targets AS t\r\n                JOIN   sys.dm_xe_database_sessions AS s\r\n                    ON s.address = t.event_session_address\r\n                WHERE  s.name = @event_type_check\r\n                AND    t.target_name = N'ring_buffer';\r\n            END;\r\n            \r\n            INSERT \r\n                #human_events_xml_internal WITH (TABLOCK)\r\n            (\r\n                human_events_xml\r\n            )            \r\n            SELECT \r\n                e.x.query('.') AS human_events_xml\r\n            FROM @x.nodes('/RingBufferTarget/event') AS e(x)\r\n            WHERE e.x.exist('@timestamp[. > sql:variable(\"@date_filter\")]') = 1\r\n            OPTION (RECOMPILE);\r\n            \r\n            IF @debug = 1\r\n            BEGIN \r\n                PRINT SUBSTRING(@table_sql, 0, 4000);\r\n                PRINT SUBSTRING(@table_sql, 4000, 8000);\r\n                PRINT SUBSTRING(@table_sql, 8000, 12000);\r\n                PRINT SUBSTRING(@table_sql, 12000, 16000);\r\n                PRINT SUBSTRING(@table_sql, 16000, 20000);\r\n                PRINT SUBSTRING(@table_sql, 20000, 24000);\r\n                PRINT SUBSTRING(@table_sql, 24000, 28000);\r\n                PRINT SUBSTRING(@table_sql, 28000, 32000);\r\n                PRINT SUBSTRING(@table_sql, 32000, 36000);\r\n                PRINT SUBSTRING(@table_sql, 36000, 40000);           \r\n            END;\r\n            \r\n            /* this executes the insert */\r\n            EXEC sys.sp_executesql \r\n                @table_sql, \r\n              N'@date_filter DATETIME', \r\n                @date_filter;\r\n            \r\n            /*Update the worker table's last checked, and conditionally, updated dates*/\r\n            UPDATE hew\r\n                SET \r\n                    hew.last_checked = \r\n                        SYSDATETIME(),\r\n                    hew.last_updated = \r\n                        CASE \r\n                            WHEN @@ROWCOUNT > 0 \r\n                            THEN SYSDATETIME()\r\n                            ELSE hew.last_updated\r\n                        END \r\n            FROM #human_events_worker AS hew\r\n            WHERE hew.id = @min_id\r\n            OPTION (RECOMPILE);\r\n            \r\n            IF @debug = 1 BEGIN SELECT N'#human_events_worker' AS table_name, * FROM #human_events_worker AS hew OPTION (RECOMPILE); END;\r\n            IF @debug = 1 BEGIN SELECT N'#human_events_xml_internal' AS table_name, * FROM #human_events_xml_internal AS hew OPTION (RECOMPILE); END;\r\n\r\n            /*Clear the table out between runs*/\r\n            TRUNCATE TABLE #human_events_xml_internal;\r\n\r\n            IF @debug = 1 BEGIN RAISERROR(N'@min_id: %i', 0, 1, @min_id) WITH NOWAIT; END;\r\n\r\n            RAISERROR(N'Setting next id after %i out of %i total', 0, 1, @min_id, @max_id) WITH NOWAIT;\r\n            \r\n            SET @min_id = \r\n            (\r\n                SELECT TOP (1) \r\n                    hew.id\r\n                FROM #human_events_worker AS hew\r\n                WHERE hew.id > @min_id\r\n                AND   hew.is_table_created = 1\r\n                ORDER BY hew.id\r\n            );\r\n\r\n            IF @debug = 1 BEGIN RAISERROR(N'new @min_id: %i', 0, 1, @min_id) WITH NOWAIT; END;\r\n\r\n            IF @min_id IS NULL BREAK;\r\n            \r\n            END;\r\n        END;\r\n    \r\n    END;\r\n\r\n\r\n/*This section handles deleting data from tables older than the retention period*/\r\n/*The idea is to only check once an hour so we're not constantly purging*/\r\nSET @Time = SYSDATETIME();\r\nIF \r\n( \r\n    DATEPART\r\n    (\r\n        MINUTE, \r\n        @Time\r\n    ) <= 5 \r\n)\r\nBEGIN     \r\n    \r\n    IF (@delete_tracker IS NULL\r\n            OR @delete_tracker <> DATEPART(HOUR, @Time) )\r\n    BEGIN     \r\n        \r\n        SELECT \r\n            @the_deleter_must_awaken += \r\n                N' DELETE FROM ' + \r\n                QUOTENAME(hew.output_database) + \r\n                N'.' +\r\n                QUOTENAME(hew.output_schema) + \r\n                N'.' +\r\n                QUOTENAME(hew.event_type) + \r\n                N' WHERE event_time < DATEADD\r\n                                      (\r\n                                          DAY, \r\n                                          (-1 * @delete_retention_days\r\n                                      ), \r\n                                      SYSDATETIME())\r\n                OPTION (RECOMPILE); ' + @nc10\r\n        FROM #human_events_worker AS hew\r\n        OPTION (RECOMPILE);\r\n        \r\n        IF @debug = 1 BEGIN RAISERROR(@the_deleter_must_awaken, 0, 1) WITH NOWAIT; END;\r\n        \r\n        /* execute the delete */\r\n        EXEC sys.sp_executesql \r\n            @the_deleter_must_awaken, \r\n          N'@delete_retention_days INT', \r\n            @delete_retention_days;\r\n        \r\n        /* set this to the hour it was last checked */\r\n        SET @delete_tracker = DATEPART(HOUR, SYSDATETIME());    \r\n    END;\r\nEND;\r\n\r\n/*Wait 5 seconds, then start the output loop again*/\r\nWAITFOR DELAY '00:00:05.000';\r\n\r\nEND;\r\n\r\n/*This section handles cleaning up stuff.*/\r\ncleanup:\r\nBEGIN     \r\n    RAISERROR(N'CLEAN UP PARTY TONIGHT', 0, 1) WITH NOWAIT;\r\n\r\n    SET @executer = QUOTENAME(@output_database_name) + N'.sys.sp_executesql ';\r\n\r\n    /*Clean up sessions, this isn't database-specific*/         \r\n    SELECT \r\n        @cleanup_sessions +=   \r\n            N'DROP EVENT SESSION ' + \r\n            ses.name + \r\n            N' ON SERVER;' + \r\n            @nc10  \r\n    FROM sys.server_event_sessions AS ses  \r\n    LEFT JOIN sys.dm_xe_sessions AS dxs  \r\n        ON dxs.name = ses.name  \r\n    WHERE ses.name LIKE N'%HumanEvents_%';  \r\n        \r\n    EXEC sys.sp_executesql \r\n        @cleanup_sessions;  \r\n    \r\n    IF @debug = 1 BEGIN RAISERROR(@cleanup_sessions, 0, 1) WITH NOWAIT; END;\r\n  \r\n\r\n    /*Clean up tables*/\r\n    RAISERROR(N'CLEAN UP PARTY TONIGHT', 0, 1) WITH NOWAIT;\r\n  \r\n    SELECT \r\n        @cleanup_tables += N'\r\n            SELECT \r\n                @i_cleanup_tables += \r\n                    N''DROP TABLE '' +  \r\n                    SCHEMA_NAME(s.schema_id) + \r\n                    N''.'' + \r\n                    QUOTENAME(s.name) + \r\n                    ''; '' + \r\n                    NCHAR(10)\r\n            FROM ' + QUOTENAME(@output_database_name) + N'.sys.tables AS s\r\n            WHERE s.name LIKE ''' + '%HumanEvents%' + N''';';\r\n    \r\n    EXEC sys.sp_executesql \r\n        @cleanup_tables, \r\n      N'@i_cleanup_tables nvarchar(MAX) OUTPUT', \r\n        @i_cleanup_tables = @drop_holder OUTPUT;  \r\n    \r\n    IF @debug = 1 \r\n    BEGIN\r\n        RAISERROR(@executer, 0, 1) WITH NOWAIT;\r\n        RAISERROR(@drop_holder, 0, 1) WITH NOWAIT;\r\n    END;\r\n    \r\n    EXEC @executer @drop_holder;\r\n  \r\n    /*Cleanup views*/\r\n    RAISERROR(N'CLEAN UP PARTY TONIGHT', 0, 1) WITH NOWAIT;\r\n\r\n    SET @drop_holder = N'';\r\n  \r\n    SELECT \r\n        @cleanup_views += N'\r\n            SELECT \r\n                @i_cleanup_views += \r\n                    N''DROP VIEW '' + \r\n                    SCHEMA_NAME(v.schema_id) + \r\n                    N''.'' + \r\n                    QUOTENAME(v.name) + \r\n                    ''; '' + \r\n                    NCHAR(10)\r\n            FROM ' + QUOTENAME(@output_database_name) + N'.sys.views AS v\r\n            WHERE v.name LIKE ''' + '%HumanEvents%' + N''';';\r\n    \r\n    EXEC sys.sp_executesql \r\n        @cleanup_views, \r\n      N'@i_cleanup_views nvarchar(MAX) OUTPUT', \r\n        @i_cleanup_views = @drop_holder OUTPUT;  \r\n    \r\n    IF @debug = 1 \r\n    BEGIN\r\n        RAISERROR(@executer, 0, 1) WITH NOWAIT;\r\n        RAISERROR(@drop_holder, 0, 1) WITH NOWAIT;\r\n    END;\r\n\r\n    EXEC @executer @drop_holder;\r\n\r\n    RETURN;\r\nEND; \r\n\r\n\r\nEND TRY\r\n\r\n/*Error handling, I guess*/\r\nBEGIN CATCH\r\n    BEGIN\r\n    \r\n    IF @@TRANCOUNT > 0 \r\n        ROLLBACK TRANSACTION;\r\n              \r\n        /*Only try to drop a session if we're not outputting*/\r\n        IF ( @output_database_name = N''\r\n              AND @output_schema_name = N'' )\r\n        BEGIN\r\n            IF @debug = 1 BEGIN RAISERROR(@stop_sql, 0, 1) WITH NOWAIT; END;\r\n            RAISERROR(N'all done, stopping session', 0, 1) WITH NOWAIT;\r\n            EXEC (@stop_sql);\r\n            \r\n            IF @debug = 1 BEGIN RAISERROR(@drop_sql, 0, 1) WITH NOWAIT; END;\r\n            RAISERROR(N'and dropping session', 0, 1) WITH NOWAIT;\r\n            EXEC (@drop_sql);\r\n        END;\r\n\r\n        THROW;\r\n\r\n        RETURN -138;\r\n    END;\r\nEND CATCH;\r\n\r\nEND;"
}