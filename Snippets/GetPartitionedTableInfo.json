{
  "id": "d54a19da-f1be-45e1-a8f8-638c56782c01",
  "prefix": "GetPartitionedTableInfo",
  "description": "Get Partitioned Table Information",
  "body": "/* =========================================================================================================================================\r\n-- Server\t\t: Local Server\r\n-- Database\t\t: User Database\r\n-- Script\t\t: GetPartitionedTableInformation\r\n-- Description\t: To Get Partitioned Table Information\r\n-- Usage\t\t:\r\n-- History\t\t:\r\n-- Link\t\t\t: https://www.cathrinewilhelmsen.net/table-partitioning-in-sql-server/\r\n--\t\t\t\t: https://www.youtube.com/watch?v=ZVAZZqFSsgU\r\n========================================================================================================================================= */\r\nSELECT\r\n    OBJECT_SCHEMA_NAME(PSTATS.object_id) AS SchemaName,\r\n    OBJECT_NAME(PSTATS.object_id) AS TableName,\r\n    PS.name AS PartitionSchemeName,\r\n    DS.name AS PartitionFilegroupName,\r\n    PF.name AS PartitionFunctionName,\r\n    CASE PF.boundary_value_on_right WHEN 0 THEN 'Range Left' ELSE 'Range Right' END AS PartitionFunctionRange,\r\n    CASE PF.boundary_value_on_right WHEN 0 THEN 'Upper Boundary' ELSE 'Lower Boundary' END AS PartitionBoundary,\r\n    PRV.value AS PartitionBoundaryValue,\r\n    C.name AS PartitionKey,\r\n    CASE\r\n       WHEN PF.boundary_value_on_right = 0 \r\n       THEN C.name + ' > ' + CAST(ISNULL(LAG(PRV.value) OVER(PARTITION BY PSTATS.object_id ORDER BY PSTATS.object_id, PSTATS.partition_number), '(-)Infinity') AS VARCHAR(100)) + ' and ' + C.name + ' <= ' + CAST(ISNULL(PRV.value, '(+)Infinity') AS VARCHAR(100)) \r\n       ELSE C.name + ' >= ' + CAST(ISNULL(PRV.value, '(-)Infinity') AS VARCHAR(100))  + ' and ' + C.name + ' < ' + CAST(ISNULL(LEAD(PRV.value) OVER(PARTITION BY PSTATS.object_id ORDER BY PSTATS.object_id, PSTATS.partition_number), '(+)Infinity') AS VARCHAR(100))\r\n    END AS PartitionRange,\r\n    PSTATS.partition_number AS PartitionNumber,\r\n    PSTATS.row_count AS PartitionRowCount,\r\n    P.data_compression_desc AS DataCompression\r\nFROM sys.dm_db_partition_stats AS PSTATS\r\nINNER JOIN sys.partitions AS P ON PSTATS.partition_id = P.partition_id\r\nINNER JOIN sys.destination_data_spaces AS DDS ON PSTATS.partition_number = DDS.destination_id\r\nINNER JOIN sys.data_spaces AS DS ON DDS.data_space_id = DS.data_space_id\r\nINNER JOIN sys.partition_schemes AS PS ON DDS.partition_scheme_id = PS.data_space_id\r\nINNER JOIN sys.partition_functions AS PF ON PS.function_id = PF.function_id\r\nINNER JOIN sys.indexes AS I ON PSTATS.object_id = I.object_id AND PSTATS.index_id = I.index_id AND DDS.partition_scheme_id = I.data_space_id AND I.type <= 1 /* Heap or Clustered Index */\r\nINNER JOIN sys.index_columns AS IC ON I.index_id = IC.index_id AND I.object_id = IC.object_id AND IC.partition_ordinal > 0\r\nINNER JOIN sys.columns AS C ON PSTATS.object_id = C.object_id AND IC.column_id = C.column_id\r\nLEFT JOIN sys.partition_range_values AS PRV ON PF.function_id = PRV.function_id AND PSTATS.partition_number = (CASE PF.boundary_value_on_right WHEN 0 THEN PRV.boundary_id ELSE (PRV.boundary_id+1) END)\r\n--WHERE PSTATS.object_id = OBJECT_ID('[schema_name].[table_name]')\r\nORDER BY TableName, PartitionNumber;"
}