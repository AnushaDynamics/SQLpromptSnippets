{
  "id": "a56d4317-ced5-46e9-b7af-4df7c6926d07",
  "prefix": "GetDuplicateIndexes",
  "description": "Find All Duplicate Indexes",
  "body": "/* =============================================================================================================================================================\r\n-- Server\t\t: LOCAL SERVER\r\n-- Database\t\t: USER DATABASE\r\n-- Script\t\t: GetDuplicateIndexes\r\n-- Description\t: Find All Duplicate Indexes\r\n-- Usage\t\t: Execute in Any User Database. @SCHname and @OBJname are Optional\r\n-- History\t\t:\r\n-- Refer Links\t:\r\n============================================================================================================================================================= */\r\nDECLARE @SCHname VARCHAR(128) = $SCHname$; --Optional\r\nDECLARE @OBJname VARCHAR(128) = $OBJname$; --Optional\r\n--\r\n;WITH _Indexes AS\r\n(\r\n\tSELECT CONVERT(VARCHAR(128), OBJECT_SCHEMA_NAME(I.object_id))COLLATE DATABASE_DEFAULT AS \"SchemaName\",\r\n\t\t   CONVERT(VARCHAR(128), OBJECT_NAME(I.object_id))COLLATE DATABASE_DEFAULT AS \"ObjectName\",\r\n\t\t   CONVERT(VARCHAR(60), O.type_desc)COLLATE DATABASE_DEFAULT AS \"ObjectType\",\r\n\t\t   COALESCE(CONVERT(VARCHAR(128), I.name)COLLATE DATABASE_DEFAULT, '') AS \"IndexName\",\r\n\t\t   I.index_id AS \"IndexID\",\r\n\t\t   CONVERT(VARCHAR(60), I.type_desc)COLLATE DATABASE_DEFAULT AS \"IndexType\",\r\n\t\t   DS.name AS \"FileGroup\",\r\n\t\t   ISNULL(STUFF((\r\n\t   \t\t\t\t\tSELECT ', ' + QUOTENAME(COL_NAME(I.object_id, IC.column_id)) + CASE WHEN IC.is_descending_key = 1 THEN ' DESC' ELSE ' ASC' END\r\n\t   \t\t\t\t\tFROM sys.index_columns AS IC WITH (NOLOCK)\r\n\t   \t\t\t\t\tWHERE I.object_id = IC.object_id AND I.index_id = IC.index_id AND IC.is_included_column = 0\r\n\t   \t\t\t\t\tORDER BY IC.index_column_id ASC\r\n\t   \t\t\t\t\tFOR XML PATH('')), 1, 1, ''), ''\r\n\t\t\t\t ) AS \"KeyColumnsList\",\r\n\t\t   ISNULL(STUFF((\r\n\t   \t\t\t\t\tSELECT ', ' + QUOTENAME(COL_NAME(I.object_id, IC.column_id))\r\n\t   \t\t\t\t\tFROM sys.index_columns AS IC WITH (NOLOCK)\r\n\t   \t\t\t\t\tWHERE I.object_id = IC.object_id AND I.index_id = IC.index_id AND IC.is_included_column = 1\r\n\t   \t\t\t\t\tORDER BY IC.index_column_id ASC\r\n\t   \t\t\t\t\tFOR XML PATH('')), 1, 1, ''), ''\r\n\t\t\t\t ) AS \"IncludedColumnsList\",\r\n\t\t   I.is_primary_key AS \"isPK\",\r\n\t\t   I.is_unique AS \"isU\",\r\n\t\t   I.is_unique_constraint AS \"isUQ\",\r\n\t\t   I.is_disabled AS \"isDisabled\"\r\n\tFROM sys.indexes AS I WITH (NOLOCK)\r\n\tINNER JOIN sys.objects AS O WITH (NOLOCK) ON O.object_id = I.object_id\r\n\tINNER JOIN sys.data_spaces AS DS WITH (NOLOCK) ON DS.data_space_id = I.data_space_id\r\n\tWHERE OBJECT_SCHEMA_NAME(I.object_id) <> 'sys' AND I.index_id <> 0\r\n\t\tAND (OBJECT_SCHEMA_NAME(I.object_id) = @SCHname OR @SCHname IS NULL)\r\n\t\tAND (OBJECT_NAME(I.object_id) = @OBJname OR @OBJname IS NULL)\r\n)\r\nSELECT DISTINCT DB_NAME() AS \"DatabaseName\",\r\n\t\t\t\tI1.SchemaName,\r\n\t\t\t\tI1.ObjectName,\r\n\t\t\t\tI1.ObjectType,\r\n\t\t\t\tI1.IndexName,\r\n\t\t\t\tI1.IndexType,\r\n\t\t\t\tI1.FileGroup,\r\n\t\t\t\tI1.KeyColumnsList,\r\n\t\t\t\tI1.IncludedColumnsList,\r\n\t\t\t\tI1.isPK,\r\n\t\t\t\tI1.isU,\r\n\t\t\t\tI1.isUQ,\r\n\t\t\t\tCASE I1.isPK\r\n\t\t\t\t\tWHEN 0\r\n\t\t\t\t\t\tTHEN CASE I1.isDisabled\r\n\t\t\t\t\t\t\tWHEN 0\r\n\t\t\t\t\t\t\t\tTHEN N'DROP INDEX ' + I1.IndexName + ' ON ' + I1.SchemaName + N'.' + I1.ObjectName + N';'\r\n\t\t\t\t\t\t\tELSE N'/* Index Disabled */'\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tELSE N'/* '+I1.IndexType+' Primary Key Index */'\r\n\t\t\t\tEND AS \"Drop_Index_Statement\"\r\nFROM _Indexes AS I1\r\nINNER JOIN _Indexes AS I2\r\n\tON I2.ObjectType = I1.ObjectType\r\n\t   AND I2.SchemaName = I1.SchemaName\r\n\t   AND I2.ObjectName = I1.ObjectName\r\n\t   AND I2.IndexName <> I1.IndexName AND I1.IndexType <> 'XML'\r\n\t   AND I2.KeyColumnsList = I1.KeyColumnsList\r\n\t   AND I2.IncludedColumnsList = I1.IncludedColumnsList\r\nWHERE 1=1\r\nORDER BY I1.SchemaName,\r\n\t\t I1.ObjectName,\r\n\t\t I1.IndexType,\r\n\t\t I1.KeyColumnsList,\r\n\t\t I1.IncludedColumnsList;",
  "placeholders": [
    {
      "name": "SCHname",
      "defaultValue": "NULL"
    },
    {
      "name": "OBJname",
      "defaultValue": "NULL"
    }
  ]
}