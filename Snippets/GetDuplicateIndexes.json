{
  "id": "a56d4317-ced5-46e9-b7af-4df7c6926d07",
  "prefix": "GetDuplicateIndexes",
  "description": "Find All Duplicate Indexes",
  "body": "/* =============================================================================================================================================================\r\n-- Server\t\t: LOCAL SERVER\r\n-- Database\t\t: USER DATABASE\r\n-- Script\t\t: GetDuplicateIndexes\r\n-- Description\t: Find All Duplicate Indexes\r\n-- Usage\t\t: Execute in Any User Database. @SCHname and @OBJname are Optional\r\n-- History\t\t:\r\n-- Refer Links\t:\r\n============================================================================================================================================================= */\r\nDECLARE @SCHname VARCHAR(128) = $SCHname$; --Optional\r\nDECLARE @OBJname VARCHAR(128) = $OBJname$; --Optional\r\n--\r\n;WITH _Indexes AS\r\n(\r\n\tSELECT\r\n\t\tSCHEMA_NAME(OBJ.schema_id) AS \"SchemaName\",\r\n\t\tCONVERT(VARCHAR(128), OBJ.name)COLLATE DATABASE_DEFAULT AS \"ObjectName\",\r\n\t\tCONVERT(VARCHAR(60), OBJ.type_desc)COLLATE DATABASE_DEFAULT AS \"ObjectType\",\r\n\t\tCOALESCE(CONVERT(VARCHAR(128), IDX.name)COLLATE DATABASE_DEFAULT ,'') AS \"IndexName\",\r\n\t\tIDX.index_id AS \"IndexID\",\r\n\t\tCONVERT(VARCHAR(60), IDX.type_desc)COLLATE DATABASE_DEFAULT AS \"IndexType\",\r\n\t\tIDX.is_disabled,\r\n\t\tCOALESCE(STUFF((SELECT ', ' + col_key_col.name\r\n\t\t\t\t\t\tFROM sys.objects AS tab_key WITH (NOLOCK)\r\n\t\t\t\t\t\tINNER JOIN sys.indexes AS idx_key_col WITH (NOLOCK) ON tab_key.object_id = idx_key_col.object_id\r\n\t\t\t\t\t\tINNER JOIN sys.index_columns AS idxcol_key_col WITH (NOLOCK) ON idx_key_col.object_id = idxcol_key_col.object_id\r\n\t\t\t\t\t\t\tAND idx_key_col.index_id = idxcol_key_col.index_id\r\n\t\t\t\t\t\tINNER JOIN sys.columns AS col_key_col WITH (NOLOCK) ON tab_key.object_id = col_key_col.object_id\r\n\t\t\t\t\t\t\tAND idxcol_key_col.column_id = col_key_col.column_id\r\n\t\t\t\t\t\tWHERE IDX.object_id = idx_key_col.object_id\r\n\t\t\t\t\t\t\tAND IDX.index_id = idx_key_col.index_id AND idxcol_key_col.is_included_column = 0\r\n\t\t\t\t\t\tORDER BY idxcol_key_col.key_ordinal ASC\r\n\t\t\t\t\t\tFOR XML PATH('')), 1, 2, ''), ''\r\n\t\t\t\t) AS \"KeyColumnsList\",\r\n\t\tCOALESCE(STUFF((SELECT ', ' + col_inc_col.name\r\n\t\t\t\t\t\tFROM sys.objects AS tab_inc\r\n\t\t\t\t\t\tINNER JOIN sys.indexes AS idx_inc_col WITH (NOLOCK) ON tab_inc.object_id = idx_inc_col.object_id\r\n\t\t\t\t\t\tINNER JOIN sys.index_columns AS idxcol_inc_col WITH (NOLOCK) ON idx_inc_col.object_id = idxcol_inc_col.object_id\r\n\t\t\t\t\t\t\tAND idx_inc_col.index_id = idxcol_inc_col.index_id\r\n\t\t\t\t\t\tINNER JOIN sys.columns AS col_inc_col WITH (NOLOCK) ON tab_inc.object_id = col_inc_col.object_id\r\n\t\t\t\t\t\t\tAND idxcol_inc_col.column_id = col_inc_col.column_id\r\n\t\t\t\t\t\tWHERE IDX.object_id = idx_inc_col.object_id\r\n\t\t\t\t\t\t\tAND IDX.index_id = idx_inc_col.index_id AND idxcol_inc_col.is_included_column = 1\r\n\t\t\t\t\t\tORDER BY idxcol_inc_col.key_ordinal ASC\r\n\t\t\t\t\t\tFOR XML PATH('')), 1, 2, ''), ''\r\n\t\t\t\t) AS \"IncludedColumnsList\",\r\n\t\tIDX.is_primary_key AS \"isPK\",\r\n\t\tIDX.is_unique AS \"isU\",\r\n\t\tIDX.is_unique_constraint AS \"isUQ\"\r\n\tFROM sys.indexes AS IDX WITH (NOLOCK)\r\n\tINNER JOIN sys.objects AS OBJ WITH (NOLOCK) ON OBJ.object_id = IDX.object_id\r\n\twhere SCHEMA_NAME(OBJ.schema_id) NOT IN ('sys')\r\n\t\tAND (SCHEMA_NAME(OBJ.schema_id) = @SCHname OR @SCHname IS NULL)\r\n\t\tAND (OBJ.name = @OBJname OR @OBJname IS NULL)\r\n)\r\nSELECT DISTINCT DB_NAME() AS \"DatabaseName\",\r\n\t\t\t\tI1.SchemaName,\r\n\t\t\t\tI1.ObjectName,\r\n\t\t\t\tI1.ObjectType,\r\n\t\t\t\tI1.IndexName,\r\n\t\t\t\tI1.IndexType,\r\n\t\t\t\tI1.KeyColumnsList,\r\n\t\t\t\tI1.IncludedColumnsList,\r\n\t\t\t\tI1.isPK,\r\n\t\t\t\tI1.isU,\r\n\t\t\t\tI1.isUQ,\r\n\t\t\t\tCASE I1.isPK\r\n\t\t\t\t\tWHEN 0\r\n\t\t\t\t\t\tTHEN CASE I1.is_disabled\r\n\t\t\t\t\t\t\tWHEN 0\r\n\t\t\t\t\t\t\t\tTHEN N'DROP INDEX ' + I1.IndexName + ' ON ' + I1.SchemaName + N'.' + I1.ObjectName + N';'\r\n\t\t\t\t\t\t\tELSE N'/* Index Disabled */'\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tELSE N'/* '+I1.IndexType+' Primary Key Index */'\r\n\t\t\t\tEND AS \"Drop_Index_Statement\"\r\nFROM _Indexes AS I1\r\nINNER JOIN _Indexes AS I2\r\n\tON I2.ObjectType = I1.ObjectType\r\n\t   AND I2.SchemaName = I1.SchemaName\r\n\t   AND I2.ObjectName = I1.ObjectName\r\n\t   AND I2.IndexName <> I1.IndexName AND I1.IndexType <> 'XML'\r\n\t   AND I2.KeyColumnsList = I1.KeyColumnsList\r\n\t   AND I2.IncludedColumnsList = I1.IncludedColumnsList\r\nWHERE 1=1\r\nORDER BY I1.SchemaName,\r\n\t\t I1.ObjectName,\r\n\t\t I1.IndexType,\r\n\t\t I1.KeyColumnsList,\r\n\t\t I1.IncludedColumnsList;",
  "placeholders": [
    {
      "name": "SCHname",
      "defaultValue": "NULL"
    },
    {
      "name": "OBJname",
      "defaultValue": "NULL"
    }
  ]
}