{
  "id": "21ec0ccb-204c-4678-add8-14db69aa31e0",
  "prefix": "GenerateForeignKeysDropAndReCreateStatements",
  "description": "To Generate Drop and ReCreate Statements of ALL Foreign Keys in a Given Database",
  "body": "/* =================================================================================================\r\n-- Script\t\t: Generate_ForeignKey_Constraints_Drop_And_Create_Statements.sql\r\n-- Description\t: To Generate Drop and Create Statements for ALL Foreign Keys Constraints.\r\n-- Server\t\t: LOCALSERVER\r\n-- Database\t\t: USER Database\r\n================================================================================================= */\r\nSELECT --\r\n\tFK.NAME AS CONSTRAINT_NAME,\r\n\t--$BeginRegion: Generate Drop Foreign Keys Statements\r\n\t'IF OBJECT_ID(''' + QUOTENAME(OBJECT_SCHEMA_NAME(FK.parent_object_id)) + '.' + QUOTENAME(FK.NAME) + ''', ''F'') IS NOT NULL'\r\n\t\t+ ' ALTER TABLE ' + QUOTENAME(OBJECT_SCHEMA_NAME(FK.parent_object_id)) + '.' + QUOTENAME(OBJECT_NAME(FK.parent_object_id))\r\n\t\t+ ' DROP CONSTRAINT ' + QUOTENAME(FK.NAME)\r\n\t\t+ ';' \r\n\t\tAS \"DROP_CONSTRAINT_STATEMENT\",\r\n\t--$EndRegion: Generate Drop Foreign Keys Statements\r\n\t--\r\n\t--$BeginRegion: Generate ReCreate Foreign Keys Statements\r\n\t'IF OBJECT_ID(''' + QUOTENAME(OBJECT_SCHEMA_NAME(FK.parent_object_id)) + '.' + QUOTENAME(FK.NAME) + ''', ''F'') IS NULL'\r\n\t\t+ ' BEGIN'\r\n\t\t+ ' ALTER TABLE ' + QUOTENAME(OBJECT_SCHEMA_NAME(FK.parent_object_id)) + '.' + QUOTENAME(OBJECT_NAME(FK.parent_object_id))\r\n\t\t+ ' WITH ' + CASE FK.is_not_trusted WHEN 0 THEN 'CHECK' ELSE 'NOCHECK' END\r\n\t\t+ ' ADD CONSTRAINT ' + QUOTENAME(OBJECT_NAME(FK.object_id))\r\n\t\t+ ' FOREIGN KEY'\r\n\t\t+ ' (' + STUFF((SELECT ', ' + QUOTENAME(C.NAME)\r\n\t\t\t\t\t\tFROM sys.columns AS C\r\n\t\t\t\t\t\tINNER JOIN sys.foreign_key_columns AS KC ON C.object_id = KC.parent_object_id AND C.column_id = KC.parent_column_id\r\n\t\t\t\t\t\tWHERE KC.constraint_object_id = FK.object_id\r\n\t\t\t\t\t\tORDER BY KC.constraint_column_id FOR XML PATH('')), 1, 1, '') + ' )'\r\n\t\t+ ' REFERENCES ' + QUOTENAME(OBJECT_SCHEMA_NAME(FK.referenced_object_id)) + '.' + QUOTENAME(OBJECT_NAME(FK.referenced_object_id))\r\n\t\t+ ' (' + STUFF((SELECT ', ' + QUOTENAME(C.NAME)\r\n\t\t\t\t\t\tFROM sys.columns AS C\r\n\t\t\t\t\t\tINNER JOIN sys.foreign_key_columns AS KC ON C.object_id = KC.referenced_object_id AND C.column_id = KC.referenced_column_id\r\n\t\t\t\t\t\tWHERE KC.constraint_object_id = FK.object_id\r\n\t\t\t\t\t\tORDER BY KC.constraint_column_id FOR XML PATH('')), 1, 1, '') + ' )'\r\n\t\t+ ' ON DELETE ' + CASE FK.delete_referential_action WHEN 1 THEN 'CASCADE' WHEN 2 THEN 'SET NULL' WHEN 3 THEN 'SET DEFAULT' ELSE 'NO ACTION' END\r\n\t\t+ ' ON UPDATE ' + CASE FK.update_referential_action WHEN 1 THEN 'CASCADE' WHEN 2 THEN 'SET NULL' WHEN 3 THEN 'SET DEFAULT' ELSE 'NO ACTION' END\r\n\t\t+ CASE FK.is_not_for_replication WHEN 0 THEN '' ELSE ' NOT FOR REPLICATION' END\r\n\t\t+ ';'\r\n\t\t+ ' ALTER TABLE ' + QUOTENAME(OBJECT_SCHEMA_NAME(FK.parent_object_id)) + '.' + QUOTENAME(OBJECT_NAME(FK.parent_object_id))\r\n\t\t+ CASE FK.is_disabled WHEN 0 THEN ' CHECK' ELSE ' NOCHECK' END + ' CONSTRAINT ' + QUOTENAME(OBJECT_NAME(FK.object_id))\r\n\t\t+ ';'\r\n\t\t+ ' END'\r\n\t\tAS \"RECREATE_CONSTRAINT_STATEMENT\"\r\n\t--$EndRegion: Generate ReCreate Foreign Keys Statements\r\nFROM sys.foreign_keys AS FK\r\nWHERE FK.is_ms_shipped = 0\r\nORDER BY OBJECT_SCHEMA_NAME(FK.parent_object_id), OBJECT_NAME(FK.parent_object_id), FK.name ASC;"
}
