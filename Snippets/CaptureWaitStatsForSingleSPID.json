{
  "id": "876a0ab6-e28e-44e4-9028-3820a57eaa45",
  "prefix": "CaptureWaitStatsForSingleSPID",
  "description": "To Create WaitStats XEvent Session and Analyse the XEvent Session from XEL and XEM files Created",
  "body": "/* =========================================================================================================================================\r\n-- Server\t\t: LOCAL SERVER\r\n-- Database\t\t: master\r\n-- Script\t\t: CaptureWaitStatsForSingleSPID\r\n-- Description\t: To Create WaitStats XEvent Session and Analyse the XEvent Session from XEL and XEM files Created\r\n-- Link\t\t\t: https://www.sqlskills.com/blogs/paul/capturing-wait-stats-for-a-single-operation/\r\n-- Usage\t\t: Open New Query Window and Get The SPID(number) of the Query you wanted to Execute\r\n--\t\t\t\t\tCreate a XEvent for the SPID($SPID$) to Monitor the WaitStats\r\n-- **\tFOLLOW the Below Steps Sequentially To Create XEvent and Analyse the XEvent Session\r\n========================================================================================================================================= */\r\nUSE master;\r\nGO\r\n--\r\n/* ===== ** CREATE XEvent Session ** ==================================================================================================== */\r\n--$BeginRegion: STEP 1: CREATE Folder XEvents to Collect XEL and XEM Files\r\nEXEC sys.xp_cmdshell 'mkdir \"C:\\SQL\\XEvents\"';\r\nGO \r\n--$EndRegion: STEP 1: CREATE Folder XEvents to Collect XEL and XEM Files\r\n--\r\n--$BeginRegion: STEP 2: DROP and CREATE the WaitStats XEvent Session If Exists\r\nIF EXISTS (SELECT * FROM sys.server_event_sessions WHERE name = 'MonitorWaitsForSPID$SPID$')\r\n    DROP EVENT SESSION MonitorWaitsForSPID$SPID$ ON SERVER\r\nGO\r\n--\r\nCREATE EVENT SESSION MonitorWaitsForSPID$SPID$\r\nON SERVER\r\n\tADD EVENT sqlos.wait_info\r\n\t(WHERE sqlserver.session_id = $SPID$ /* session_id of connection to monitor */)\r\n\tADD TARGET package0.asynchronous_file_target\r\n\t(SET FILENAME = N'C:\\SQL\\XEvents\\EE_WaitStatsForSPID$SPID$.xel', METADATAFILE = N'C:\\SQL\\XEvents\\EE_WaitStatsForSPID$SPID$.xem')\r\nWITH (MAX_DISPATCH_LATENCY = 1 SECONDS);\r\nGO\r\n--$EndRegion: STEP 2: DROP and CREATE the WaitStats XEvent Session If Exists\r\n--\r\n--\r\n/* ===== ** START XEvent Session >> EXECUTE SPID >> STOP XEvent Session ** ============================================================== */\r\n--$BeginRegion: STEP 3: START the XEvent Session\r\nALTER EVENT SESSION MonitorWaitsForSPID$SPID$ ON SERVER STATE = START;\r\nGO\r\n--$EndRegion: STEP 3: START the XEvent Session\r\n--\r\n--$BeginRegion: STEP 4: RUN THE QUERY in SPID $SPID$\r\n--** DO THE QUERY **--\r\n--$EndRegion: STEP 4: RUN THE QUERY in SPID $SPID$\r\n--\r\n--$BeginRegion: STEP 5: STOP the XEvent Session\r\nALTER EVENT SESSION MonitorWaitsForSPID$SPID$ ON SERVER STATE = STOP;\r\nGO\r\n--$EndRegion: STEP 5: STOP the XEvent Session\r\n--\r\n--\r\n/* ===== ** ANALYSE THE XEvent Session CAPTURED ** ====================================================================================== */\r\n--$BeginRegion: STEP 6: ANALYSE the WaitStats XEvent Session\r\nIF OBJECT_ID('tempdb..#RawEventData') IS NOT NULL\r\n\tDROP TABLE #RawEventData;\r\nGO\r\nCREATE TABLE #RawEventData\r\n(\r\n\tRowID INT IDENTITY PRIMARY KEY,\r\n\tEvent_Data XML\r\n);\r\nGO\r\nINSERT INTO #RawEventData ( Event_Data)\r\nSELECT CAST(event_data AS XML) AS \"Event_Data\"\r\nFROM sys.fn_xe_file_target_read_file('C:\\SQL\\XEvents\\EE_WaitStatsForSPID$SPID$*.xel', 'C:\\SQL\\XEvents\\EE_WaitStatsForSPID$SPID$*.xem', NULL, NULL);\r\nGO\r\nSELECT waits.[Wait Type],\r\n\t   COUNT(*) AS \"Wait Count\",\r\n\t   SUM(waits.Duration) AS \"Total Wait Time (ms)\",\r\n\t   SUM(waits.Duration) - SUM(waits.[Signal Duration]) AS \"Total Resource Wait Time (ms)\",\r\n\t   SUM(waits.[Signal Duration]) AS \"Total Signal Wait Time (ms)\"\r\nFROM (\r\n\t\t SELECT Event_Data.value('(/event/@timestamp)[1]', 'DATETIME') AS \"Time\",\r\n\t\t\t\tEvent_Data.value('(/event/data[@name=''wait_type'']/text)[1]', 'VARCHAR(100)') AS \"Wait Type\",\r\n\t\t\t\tEvent_Data.value('(/event/data[@name=''opcode'']/text)[1]', 'VARCHAR(100)') AS \"Op\",\r\n\t\t\t\tEvent_Data.value('(/event/data[@name=''duration'']/value)[1]', 'BIGINT') AS \"Duration\",\r\n\t\t\t\tEvent_Data.value('(/event/data[@name=''signal_duration'']/value)[1]', 'BIGINT') AS \"Signal Duration\"\r\n\t\t FROM #RawEventData\r\n\t ) AS waits\r\nWHERE waits.Op = 'End'\r\nGROUP BY waits.[Wait Type]\r\nORDER BY [Total Wait Time (ms)] DESC;\r\nGO\r\n--$EndRegion: STEP 6: ANALYSE the WaitStats XEvent Session",
  "placeholders": [
    {
      "name": "SPID",
      "defaultValue": null
    }
  ]
}