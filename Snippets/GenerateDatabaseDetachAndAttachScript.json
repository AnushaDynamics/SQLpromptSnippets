{
  "id": "233bbb51-f022-41e5-b599-a9ccae2c0bf5",
  "prefix": "GenerateDatabaseDetachAndAttachScript",
  "description": "Generates Script for Attach and Detach Database files helpful while moving files (or) Recovering Damaged Database",
  "body": "/* =============================================================================================================================================================\r\n-- Server\t\t: LOCALSERVER\r\n-- Database\t\t: master\r\n-- Script\t\t: Generate_Database_Detach_and_Attach_Script.sql\r\n-- Description\t: Generates Script for Attach and Detach Database files helpful while moving files (or) Recovering Damaged Database\r\n-- Usage\t\t: Provide the @DBname\r\n-- **Note\t\t: FOR ATTACH => If .ldf file is detached properly and Exists on any Location Path.\r\n\t\t\t\t  FOR ATTACH_REBUILD_LOG => If .ldf is Detached Properly and Deleted after Detach.\r\n\t\t\t\t  FOR ATTACH_FORCE_REBUILD_LOG => For Attaching the Damaged SQL Server Database which ReCreates the .ldf File Forcefully.\r\n============================================================================================================================================================= */\r\nUSE master;\r\nGO\r\n--\r\nDECLARE @DBname VARCHAR(256) = '$DatabaseName$';\r\n--\r\n/* ===== ** DO NOT CHANGE CODE BELOW FROM HERE ** =========================================================================================================== */\r\nSET @DBname = LTRIM(RTRIM(@DBname)); IF @DBname = '' SET @DBname = NULL; --Trimming and Resetting Value\r\nIF DB_ID(@DBname) IS NULL\r\nBEGIN\r\n\tRAISERROR('Database Does Not Exists, Please check the \"@DBname\" and Try Again...!', 16, 1);\r\n\tRETURN;\r\nEND;\r\n--\r\n--\r\n--$BeginRegion: Detach Database Script Generation\r\nPRINT N'/* ===== ** Detach Script for Database: ' + @DBname + ' ** ======================================================================================== */';\r\nPRINT N'USE [master];';\r\nPRINT N'GO';\r\nPRINT N'--';\r\nPRINT N'--$BeginRegion: Killing All Sessions for Database \"' + @DBname + '\"';\r\nPRINT N'DECLARE @KillSPIDs NVARCHAR(MAX) = N'''';';\r\nPRINT N'SELECT @KillSPIDs = @KillSPIDs + CHAR(10) + N''Kill '' + CONVERT(VARCHAR(5), spid) + N'';''';\r\nPRINT N'FROM master.sys.sysprocesses --Deprecated View';\r\nPRINT N'WHERE spid > 50 AND spid <> @@SPId AND dbid = DB_ID(''' + @DBname + ''');';\r\nPRINT N'EXEC sys.sp_executesql @statement = @KillSPIDs;';\r\nPRINT N'--$EndRegion: Killing All Sessions for Database \"' + @DBname + '\"';\r\nPRINT N'--';\r\nPRINT N'--$BeginRegion: Detaching Database \"' + @DBname + '\"';\r\nPRINT N'ALTER DATABASE [' + @DBname + '] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;';\r\nPRINT N'GO';\r\nPRINT N'EXEC master.dbo.sp_detach_db @dbname = N''' + @DBname + ''', @skipchecks = ''false'';';\r\nPRINT N'GO';\r\nPRINT N'--$EndRegion: Detaching Database \"' + @DBname + '\"';\r\n--$EndRegion: Detach Database Script Generation\r\n--\r\nPRINT '';\r\n--\r\n--$BeginRegion: Attach Database Script Generation\r\nDECLARE @LogicalName VARCHAR(128), @PhysicalName VARCHAR(260), @RN INT;\r\n--\r\nPRINT N'/* ===== ** Attach Script for Database: ' + @DBname + ' ** ======================================================================================== */';\r\nPRINT N'USE [master];';\r\nPRINT N'GO';\r\nPRINT '--';\r\nPRINT N'--$BeginRegion: Attaching Database \"' + @DBname + '\"';\r\nPRINT N'CREATE DATABASE [' + @DBname + ']';\r\nPRINT N'ON';\r\n--\r\nDECLARE MainDB_FileCursor CURSOR FAST_FORWARD READ_ONLY LOCAL FOR\r\nSELECT name AS \"LogicalName\", physical_name AS \"PhysicalName\", ROW_NUMBER() OVER (ORDER BY type ASC, data_space_id ASC) AS \"RN\"\r\nFROM sys.master_files\r\nWHERE DB_NAME(database_id) = @DBname\r\nORDER BY type ASC, data_space_id ASC;\r\n--\r\nOPEN MainDB_FileCursor;\r\nFETCH NEXT FROM MainDB_FileCursor INTO @LogicalName, @PhysicalName, @RN;\r\n--\r\nWHILE @@FETCH_STATUS = 0\r\nBEGIN\r\n\tPRINT N'\t' +CASE WHEN @RN <> 1 THEN ',' ELSE '' END \r\n\t\t+ '(NAME = N''' + @LogicalName + ''', FILENAME = N''' + @PhysicalName + ''') --Change Path If File Moved to Other Location';\r\n\t--\r\n\tFETCH NEXT FROM MainDB_FileCursor INTO @LogicalName, @PhysicalName, @RN;\r\nEND;\r\n--\r\nCLOSE MainDB_FileCursor;\r\nDEALLOCATE MainDB_FileCursor;\r\n--\r\nPRINT N'FOR ATTACH; --FOR { ATTACH | ATTACH_REBUILD_LOG | ATTACH_FORCE_REBUILD_LOG }';\r\nPRINT N'GO';\r\nPRINT N'--$EndRegion: Attaching Database \"' + @DBname + '\"';\r\n--$EndRegion: Attach Database Script Generation",
  "placeholders": [
    {
      "name": "DatabaseName",
      "defaultValue": " "
    }
  ]
}