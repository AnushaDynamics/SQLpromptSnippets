{
  "id": "6b70ce8d-ce56-430e-abf9-ba34e508825f",
  "prefix": "GetDriveSpaceUsedByDatabaseFiles",
  "description": "To Check the SQL Database Files w.r.to Disk Utilization",
  "body": "/* =============================================================================================================================================================\r\n-- Server\t\t: LOCALSERVER\r\n-- Database\t\t: master\r\n-- Script\t\t: GetDriveSpaceUsedByDatabaseFiles\r\n-- Description\t: To Check the SQL Database Files w.r.to Disk Utilization\r\n============================================================================================================================================================= */\r\nUSE master;\r\nGO\r\n--\r\nDECLARE @DatabaseFiles TABLE\r\n(\r\n\tDBid INT NULL,\r\n\tDBname sysname NULL,\r\n\tLogicalFileName sysname NULL,\r\n\tFileType NVARCHAR(128) NULL,\r\n\tFileGroupName NVARCHAR(128) NULL,\r\n\tPhysicalFileName NVARCHAR(2048) NULL,\r\n\tFileSize DECIMAL(18, 2) NULL,\r\n\tSpaceUsed DECIMAL(18, 2) NULL,\r\n\tSpaceFree DECIMAL(18, 2) NULL,\r\n\tMaxSize INT NULL,\r\n\tGrowth INT NULL,\r\n\tIsPercentGrowth BIT NULL\r\n);\r\n--\r\nINSERT INTO @DatabaseFiles\r\nEXEC sys.sp_MSforeachdb @command1 = 'use [?]; \r\nSELECT DB_ID() AS \"DBid\",\r\n\t   DB_NAME() AS \"DBname\",\r\n\t   DF.name AS \"LogicalFileName\",\r\n\t   DF.type_desc AS \"FileType\",\r\n\t   FG.name AS \"FileGroupName\",\r\n\t   DF.physical_name AS \"PhysicalFileName\",\r\n\t   DF.size AS \"FileSize\",\r\n\t   CAST(FILEPROPERTY(DF.name, ''SpaceUsed'') AS INT) AS \"SpaceUsed\",\r\n\t   DF.size - CAST(FILEPROPERTY(DF.name, ''SpaceUsed'') AS INT) AS \"SpaceFree\",\r\n\t   DF.max_size AS \"MaxSize\",\r\n\t   DF.growth AS \"Growth\",\r\n\t   DF.is_percent_growth AS \"IsPercentGrowth\"\r\nFROM sys.database_files AS DF\r\nLEFT OUTER JOIN sys.filegroups AS FG ON FG.data_space_id = DF.data_space_id\r\nWHERE DF.type IN ( 0, 1 );';\r\n--\r\n;WITH _DriveSpace\r\nAS (\r\n\t   SELECT DISTINCT --\r\n\t\t\t  VS.volume_mount_point AS \"Drive\",\r\n\t\t\t  VS.file_system_type AS \"FileSystemType\",\r\n\t\t\t  VS.logical_volume_name AS \"LogicalDriveName\",\r\n\t\t\t  CASE\r\n\t\t\t\t  WHEN CONVERT(DECIMAL(18, 2), CAST(VS.total_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/) > 1000 /*GB*/\r\n\t\t\t\t\t  THEN CAST(CAST(ROUND(CAST(VS.total_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/ / 1024 /*TB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' TB'\r\n\t\t\t\t  ELSE CAST(CAST(ROUND(CAST(VS.total_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' GB'\r\n\t\t\t\t  END AS \"TotalSize\",\r\n\t\t\t  CASE\r\n\t\t\t\t  WHEN CONVERT(DECIMAL(18, 2), CAST(VS.available_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/) > 1000 /*GB*/\r\n\t\t\t\t\t  THEN CAST(CAST(ROUND(CAST(VS.available_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/ / 1024 /*TB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' TB'\r\n\t\t\t\t  ELSE CAST(CAST(ROUND(CAST(VS.available_bytes AS FLOAT) / 1024 /*KB*/ / 1024 /*MB*/ / 1024 /*GB*/, 2, 1) AS DECIMAL(18, 2)) AS VARCHAR(32)) + ' GB'\r\n\t\t\t\t  END AS \"AvailableSize\",\r\n\t\t\t  CAST(ROUND((CAST(VS.available_bytes AS FLOAT) / CAST(VS.total_bytes AS FLOAT) * 100), 2, 1) AS DECIMAL(18, 2)) AS \"FreeSpace%\"\r\n\t   FROM sys.master_files AS MF\r\n\t   CROSS APPLY sys.dm_os_volume_stats(MF.database_id, MF.file_id) AS VS\r\n   )\r\nSELECT DS.Drive,\r\n\t   DS.TotalSize AS \"TotalDriveSize\",\r\n\t   DS.AvailableSize AS \"DriveFreeSpace\",\r\n\t   DS.[FreeSpace%],\r\n\t   '|' AS \" \",\r\n\t   DF.DBname AS \"DatabaseName\",\r\n\t   DF.LogicalFileName AS \"LogicalFileName\",\r\n\t   CASE DF.FileType\r\n\t\t   WHEN 'LOG' THEN DF.FileType + ' | ' + DBs.log_reuse_wait_desc COLLATE DATABASE_DEFAULT\r\n\t\t   ELSE DF.FileType\r\n\t\t   END AS \"FileType | LogWait\",\r\n\t   DF.FileGroupName AS \"FileGroupName\",\r\n\t   DF.PhysicalFileName AS \"PhysicalFileLocation\",\r\n\t   DBs.recovery_model_desc AS \"RecoveryModel\",\r\n\t   CAST(DF.FileSize * 8.0 /*KB*/ / 1024.0 /*MB*/ AS DECIMAL(10, 2)) AS \"TotalSize(MB)\",\r\n\t   CAST(DF.SpaceUsed * 8.0 /*KB*/ / 1024.0 /*MB*/ AS DECIMAL(10, 2)) AS \"UsedSpace(MB)\",\r\n\t   CAST(DF.SpaceFree * 8.0 /*KB*/ / 1024.0 /*MB*/ AS DECIMAL(10, 2)) AS \"FreeSpace(MB)\",\r\n\t   CASE DF.IsPercentGrowth\r\n\t\t   WHEN 1 THEN CONVERT(VARCHAR(15), DF.Growth) + ' %'\r\n\t\t   ELSE CONVERT(VARCHAR(15), (DF.Growth * 8 /*KB*/ / 1024 /*MB*/)) + ' MB'\r\n\t\t   END AS \"FileGrowth\",\r\n\t   CASE DF.MaxSize\r\n\t\t   WHEN 0 THEN 'Limited'\r\n\t\t   WHEN -1 THEN 'UnLimited'\r\n\t\t   WHEN 268435456 THEN 'UpTo 2 TB'\r\n\t\t   ELSE 'Limited (' + CONVERT(VARCHAR(15), DF.MaxSize * 8 /*KB*/ / 1024 /*MB*/) + ' MB)'\r\n\t\t   END AS \"RestrictedGrowth\"\r\nFROM _DriveSpace AS DS\r\nINNER JOIN @DatabaseFiles AS DF ON RTRIM(DS.Drive) = LEFT(DF.PhysicalFileName, 3)\r\nINNER JOIN sys.databases AS DBs ON DF.DBid = DBs.database_id\r\nWHERE 1=1 \r\n    --AND DB_NAME(DF.DBid) IN ('master')\r\nORDER BY DS.Drive ASC, DF.DBname ASC;"
}