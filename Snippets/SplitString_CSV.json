{
  "id": "b4240993-f437-42d8-9050-261870a315df",
  "prefix": "SplitString_CSV",
  "description": "Split String Based on Delimiter - Direct Method",
  "body": "--$BeginRegion: Version-1\r\nDECLARE @CSVstring VARCHAR(MAX) = 'a,b,c,d,1,2,3,@,#,$,%,^,*,(,),_,-,=,+,[,],{,},<,>,.,|,\\,|,?,/';\r\nDECLARE @Delimiter VARCHAR(1) = ',';\r\n--\r\n;WITH _CTE_vals\r\nAS (\r\n\t   SELECT SUBSTRING((@CSVstring + @Delimiter), 1, CHARINDEX(@Delimiter, (@CSVstring + @Delimiter), 1) - 1) AS \"val\",\r\n\t\t\t  SUBSTRING((@CSVstring + @Delimiter), CHARINDEX(@Delimiter, (@CSVstring + @Delimiter), 1) + 1, LEN((@CSVstring + @Delimiter))) AS \"rem\"\r\n\t   UNION ALL\r\n\t   SELECT SUBSTRING(a.rem, 1, CHARINDEX(@Delimiter, a.rem, 1) - 1) AS \"val\",\r\n\t\t\t  SUBSTRING(a.rem, CHARINDEX(@Delimiter, a.rem, 1) + 1, LEN(a.rem))\r\n\t   FROM _CTE_vals AS a\r\n\t   WHERE LEN(a.rem) >= 1\r\n   )\r\nSELECT --ROW_NUMBER() OVER (ORDER BY CTE.val ASC) AS \"Id\",\r\n\t   CTE.val AS \"Value\"\r\nFROM _CTE_vals AS CTE\r\nOPTION (MAXRECURSION 0);\r\n--$EndRegion: Version-1\r\n--\r\nGO\r\n--\r\n--$BeginRegion: Version-2\r\n--Note: \"&\", \"<\", \">\" are not supported and works good for all\r\nDECLARE @CSVstring VARCHAR(MAX) = 'a,b,c,d,1,2,3,@,#,$,%,^,*,(,),_,-,=,+,[,],{,},\\,/,|,.?';\r\nDECLARE @Delimiter AS CHAR(1) = ',';\r\n--\r\nDECLARE @XML AS XML;\r\nSET @XML = CAST(('<x>' + REPLACE(@CSVstring, @Delimiter, '</x><x>') + '</x>') AS XML);\r\n\r\nSELECT --ROW_NUMBER() OVER (ORDER BY T.N.value('.', 'varchar') ASC) AS \"Id\",\r\n\t   T.N.value('.', 'varchar') AS \"Value\"\r\nFROM @XML.nodes('x') AS T(N);\r\n--$EndRegion: Version-2"
}