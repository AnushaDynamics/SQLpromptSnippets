{
  "id": "eb53d1ff-7c2e-46de-bdc8-c5bfbbbb81c2",
  "prefix": "GenerateAuditTrail_CoalescedParametersList",
  "description": "Generating \"AuditTrail_ParametersList\" that will be used to Audit for sys.all_objects.type IN ( 'P ', 'FN' )",
  "body": "/* =============================================================================================================================================================\r\n-- Database\t\t: USER_DATABASE\r\n-- Script\t\t: GenerateAuditTrail_CoalescedParametersList\r\n-- Description\t: Generating \"AuditTrail_ParametersList\" that will be used to Audit for sys.all_objects.type IN ( 'P ', 'FN' )\r\n-- Usage\t\t: While Executing sys.all_objects.type IN ( 'P ', 'FN' ), We need to know Parameters Values and so Auditing the Parameters Passed\r\n\t--O.type = 'P ' => type_desc = N'SQL_STORED_PROCEDURE'\r\n\t--O.type = 'FN' => type_desc = N'SQL_SCALAR_FUNCTION'\r\n/*\r\nIF OBJECT_ID('dbo.Audit_Trail', 'U') IS NOT NULL\r\n    DROP TABLE dbo.Audit_Trail;\r\nGO\r\n--\r\nCREATE TABLE dbo.Audit_Trail\r\n(\r\n    Id INT IDENTITY(1, 1) NOT NULL,\r\n    HostName VARCHAR(128) NULL, AppName VARCHAR(255) NULL, LoginUser VARCHAR(128) NULL, StartTime DATETIME NOT NULL DEFAULT GETDATE(),\r\n    ObjectExecuted VARCHAR(255) NULL, ParametersList VARCHAR(MAX) NULL,\r\n    EndTime DATETIME NULL, OutputParameters VARCHAR(255) NULL, ReturnCode INT NULL,\r\n    CONSTRAINT Audit_Trail_PK PRIMARY KEY NONCLUSTERED (Id ASC) ON [PRIMARY]\r\n) ON [PRIMARY];\r\nGO\r\n--\r\n--At the \"Beginning of the Procedure or Function Call\", We need to Audit the Parameters Passed Everytime and Use them for Analysis\r\nDECLARE @AuditTrailId INT;\r\nINSERT INTO dbo.Audit_Trail ( HostName, AppName, LoginUser, StartTime, ObjectExecuted, ParametersList )\r\nVALUES ( HOST_NAME(), APP_NAME(), SUSER_SNAME(), GETDATE(), \"ObjectFileName\", \"AuditTrail_ParametersList\" );\r\nSELECT @AuditTrailId = @@IDENTITY;\r\n--\r\n--At the \"Ending of the Procedure or Function Call\", We need to Update the TABLE dbo.Audit_Trail with EndTime, OutputParameters, ReturnCode w.r.to @AuditTrailId\r\nUPDATE dbo.Audit_Trail SET EndTime = GETDATE() WHERE Id = @AuditTrailId;\r\nUPDATE dbo.Audit_Trail SET OutputParameters = \"If Any Value is being Returned by the Procedure or Function\" WHERE Id = @AuditTrailId;\r\nUPDATE dbo.Audit_Trail SET ReturnCode = \"ErrorCode (or) ReturnCode If Any\" WHERE Id = @AuditTrailId;\r\n*/\r\n-- History\t\t:\r\n-- Refer Links\t:\r\n============================================================================================================================================================= */\r\nDECLARE @DeBug BIT = 0;\r\n--\r\nIF OBJECT_ID('tempdb..#ParamsList', 'U') IS NOT NULL\r\n    DROP TABLE #ParamsList;\r\n--\r\nCREATE TABLE #ParamsList --\r\n(\r\n    SchemaName NVARCHAR(128) NULL,\r\n    ObjectName NVARCHAR(128) NULL,\r\n    ObjectType NVARCHAR(2) NULL,\r\n    ParamID INT NULL,\r\n    ParameterName NVARCHAR(128) NULL,\r\n    ParameterDataType NVARCHAR(128) NULL,\r\n    ParamBaseType NVARCHAR(128) NULL,\r\n    ConfiguredSystemType NVARCHAR(256) NULL,\r\n    Direction VARCHAR(6) NULL\r\n);\r\n--\r\nINSERT INTO #ParamsList --\r\n(\r\n    SchemaName,\r\n    ObjectName,\r\n    ObjectType,\r\n    ParamID,\r\n    ParameterName,\r\n    ParameterDataType,\r\n    ParamBaseType,\r\n    ConfiguredSystemType,\r\n    Direction\r\n)\r\n--$BeginRegion: GetParametersList\r\nSELECT SCHEMA_NAME(O.schema_id) AS \"SchemaName\",\r\n\t   OBJECT_NAME(O.object_id) AS \"ObjectName\",\r\n\t   O.type AS \"ObjectType\",\r\n\t   P.parameter_id AS \"ParamID\",\r\n\t   CASE WHEN P.parameter_id = 0 THEN 'Returns' ELSE P.name END AS \"ParameterName\", --P.parameter_id = 0 applies only for \"SQL_SCALAR_FUNCTION(FN)\"\r\n\t   TYPE_NAME(P.user_type_id) AS \"ParameterDataType\",\r\n\t   ST.name AS \"ParamBaseType\",\r\n\t   ST.name --\r\n\t\t   + CASE\r\n\t\t\t\t WHEN ST.name IN ( 'image', 'text', 'uniqueidentifier', 'date', 'time', 'datetime2', 'datetimeoffset', 'tinyint', 'smallint', 'int', 'smalldatetime', 'real', 'money', 'datetime', 'float', 'sql_variant', 'ntext', 'bit', 'smallmoney', 'bigint', 'varbinary', 'binary', 'timestamp', 'xml' ) THEN ''\r\n\t\t\t\t WHEN ST.name IN ( 'decimal', 'numeric' ) THEN '(' + CAST(P.precision AS VARCHAR(4)) + ', ' + CAST(P.scale AS VARCHAR(4)) + ')'\r\n\t\t\t\t WHEN P.max_length = -1 THEN '(max)'\r\n\t\t\t\t WHEN ST.name IN ( 'nvarchar', 'nchar' ) THEN '(' + CAST(P.max_length / 2 AS VARCHAR(5)) + ')'\r\n\t\t\t\t ELSE '(' + CAST(P.max_length AS VARCHAR(5)) + ')'\r\n\t\t\t END AS \"ConfiguredSystemType\",\r\n\t   CASE WHEN P.is_output = 1 THEN 'Output' ELSE 'Input' END AS \"Direction\"\r\nFROM sys.objects AS O\r\nINNER JOIN sys.parameters AS P --Aliasing as \"UserTypes\"\r\n\tON O.object_id = P.object_id\r\nINNER JOIN sys.types AS ST --Aliasing as \"SystemTypes\"\r\n\tON P.system_type_id = ST.user_type_id\r\nWHERE 1 = 1\r\n\tAND OBJECTPROPERTY(O.object_id, 'IsMsShipped') = 0 --Exclude MS Objects\r\n\tAND OBJECT_SCHEMA_NAME(O.object_id) <> 'sys' --To Avoid \"sys\" schema\r\n\tAND O.type IN ( 'P', 'FN' )\r\n\tAND OBJECT_NAME(O.object_id) LIKE '%$string$%';\r\n--$EndRegion: GetParametersList\r\n\r\n--\r\nIF @DeBug = 1 SELECT * FROM #ParamsList AS PL;\r\n\r\n--\r\n;WITH _CoalescedParametersList\r\nAS\r\n(\r\n\tSELECT DISTINCT --\r\n\t\tPL1.SchemaName,\r\n\t\tPL1.ObjectName,\r\n\t\tPL1.ObjectType AS \"Type\",\r\n\t\t--$BeginRegion: Generating CoalescedParamList\r\n\t\tSTUFF((\r\n\t\t\t\t SELECT '+'',''+', --\r\n\t\t\t\t\t +CASE\r\n\t\t\t\t\t\t  WHEN PL2.ParamBaseType IN ('date', 'time', 'datetime2', 'datetimeoffset', 'tinyint', 'smallint', 'int', 'smalldatetime', 'real', 'money', 'datetime', 'float', 'bit', 'decimal', 'numeric', 'smallmoney', 'bigint', 'timestamp') --\r\n\t\t\t\t\t\t\tTHEN 'COALESCE(CONVERT(VARCHAR(64),'+PL2.ParameterName+'),''(NULL)'')'\r\n\t\t\t\t\t\t  ELSE 'COALESCE('+PL2.ParameterName+',''(NULL)'')'\r\n\t\t\t\t\t\t  END\r\n\t\t\t\t FROM #ParamsList AS PL2\r\n\t\t\t\t WHERE PL2.SchemaName=PL1.SchemaName AND PL2.ObjectName=PL1.ObjectName\r\n\t\t\t\t\tAND PL2.Direction <> 'Output' --Excluding the Output Parameters\r\n\t\t\t\t FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 5, ''\r\n\t\t\t ) AS \"CoalescedParamList\"\r\n\t\t--$EndRegion: Generating CoalescedParamList\r\n\tFROM #ParamsList AS PL1\r\n)\r\nSELECT SchemaName,\r\n       ObjectName,\r\n       [Type] AS \"Type\",\r\n       CoalescedParamList AS \"AuditTrail_CoalescedParametersList\",\r\n\t   --\r\n\t   --$BeginRegion: StatementToBeIncluded_AtTheBeginning_of_Execution\r\n\t   'DECLARE @AuditTrailId INT; ' --\r\n\t   + 'INSERT INTO dbo.Audit_Trail ( HostName, AppName, LoginUser, StartTime, ObjectExecuted, ParametersList ) ' --\r\n\t   + 'VALUES ( HOST_NAME(), APP_NAME(), SUSER_SNAME(), GETDATE(), '''+SchemaName+'.'+ObjectName+''', '+CoalescedParamList+' ); ' --\r\n\t   + 'SELECT @AuditTrailId = @@IDENTITY;' AS \"StatementToBeIncluded_AtTheBeginning_of_Execution\",\r\n\t   --$EndRegion: StatementToBeIncluded_AtTheBeginning_of_Execution\r\n\t   --\r\n\t   --$BeginRegion: StatementToBeIncluded_AtTheEnding_of_Execution\r\n\t   'UPDATE dbo.Audit_Trail SET EndTime = GETDATE() WHERE Id = @AuditTrailId;' AS \"StatementToBeIncluded_AtTheEnding_of_Execution\"\r\n\t   --$EndRegion: StatementToBeIncluded_AtTheEnding_of_Execution\r\nFROM _CoalescedParametersList;",
  "placeholders": [
    {
      "name": "string",
      "defaultValue": null
    }
  ]
}